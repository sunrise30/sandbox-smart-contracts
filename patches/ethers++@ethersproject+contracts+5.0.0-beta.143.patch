diff --git a/node_modules/ethers/node_modules/@ethersproject/contracts/lib/index.js b/node_modules/ethers/node_modules/@ethersproject/contracts/lib/index.js
index a12a4da..15db3f3 100644
--- a/node_modules/ethers/node_modules/@ethersproject/contracts/lib/index.js
+++ b/node_modules/ethers/node_modules/@ethersproject/contracts/lib/index.js
@@ -167,7 +167,10 @@ function runMethod(contract, functionName, options) {
                     return wait(confirmations).then(function (receipt) {
                         receipt.events = receipt.logs.map(function (log) {
                             var event = properties_1.deepCopy(log);
-                            var parsed = contract.interface.parseLog(log);
+                            var parsed
+                            try {
+                                parsed = contract.interface.parseLog(log);
+                            } catch (e) {}
                             if (parsed) {
                                 event.args = parsed.args;
                                 event.decode = function (data, topics) {
@@ -362,7 +365,7 @@ var Contract = /** @class */ (function () {
                     properties_1.defineReadOnly(_this.filters, name, _this.filters[filters[0]]);
                 }
                 else {
-                    logger.warn("Duplicate definition of " + name + " (" + filters.join(", ") + ")");
+                    // logger.warn("Duplicate definition of " + name + " (" + filters.join(", ") + ")");
                 }
             });
         }
@@ -417,7 +420,7 @@ var Contract = /** @class */ (function () {
         Object.keys(uniqueFunctions).forEach(function (name) {
             var signatures = uniqueFunctions[name];
             if (signatures.length > 1) {
-                logger.warn("Duplicate definition of " + name + " (" + signatures.join(", ") + ")");
+                // logger.warn("Duplicate definition of " + name + " (" + signatures.join(", ") + ")");
                 return;
             }
             if (_this[name] == null) {
