{
  "contractInfo": {
    "abi": [
      {
        "constant": false,
        "inputs": [
          {
            "name": "buyer",
            "type": "address"
          },
          {
            "name": "seller",
            "type": "address"
          },
          {
            "name": "token",
            "type": "address"
          },
          {
            "name": "purchase",
            "type": "uint256[]"
          },
          {
            "name": "auctionData",
            "type": "uint256[]"
          },
          {
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "name": "amounts",
            "type": "uint256[]"
          },
          {
            "name": "signature",
            "type": "bytes"
          }
        ],
        "name": "claimSellerOffer",
        "outputs": [],
        "payable": true,
        "stateMutability": "payable",
        "type": "function",
        "signature": "0x06244768"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "offerId",
            "type": "uint256"
          }
        ],
        "name": "cancelSellerOffer",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0x642ab1e6"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "buyer",
            "type": "address"
          },
          {
            "name": "seller",
            "type": "address"
          },
          {
            "name": "token",
            "type": "address"
          },
          {
            "name": "purchase",
            "type": "uint256[]"
          },
          {
            "name": "auctionData",
            "type": "uint256[]"
          },
          {
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "name": "amounts",
            "type": "uint256[]"
          },
          {
            "name": "signature",
            "type": "bytes"
          }
        ],
        "name": "claimSellerOfferViaEIP1654",
        "outputs": [],
        "payable": true,
        "stateMutability": "payable",
        "type": "function",
        "signature": "0x6a256d1a"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "getAdmin",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function",
        "signature": "0x6e9960c3"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "buyer",
            "type": "address"
          },
          {
            "name": "seller",
            "type": "address"
          },
          {
            "name": "token",
            "type": "address"
          },
          {
            "name": "purchase",
            "type": "uint256[]"
          },
          {
            "name": "auctionData",
            "type": "uint256[]"
          },
          {
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "name": "amounts",
            "type": "uint256[]"
          },
          {
            "name": "signature",
            "type": "bytes"
          }
        ],
        "name": "claimSellerOfferUsingBasicSigViaEIP1654",
        "outputs": [],
        "payable": true,
        "stateMutability": "payable",
        "type": "function",
        "signature": "0x72f1e97c"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "metaTransactionProcessor",
            "type": "address"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "name": "setMetaTransactionProcessor",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0x8a04af6a"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "newAdmin",
            "type": "address"
          }
        ],
        "name": "changeAdmin",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0x8f283970"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "buyer",
            "type": "address"
          },
          {
            "name": "seller",
            "type": "address"
          },
          {
            "name": "token",
            "type": "address"
          },
          {
            "name": "purchase",
            "type": "uint256[]"
          },
          {
            "name": "auctionData",
            "type": "uint256[]"
          },
          {
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "name": "amounts",
            "type": "uint256[]"
          },
          {
            "name": "signature",
            "type": "bytes"
          }
        ],
        "name": "claimSellerOfferUsingBasicSig",
        "outputs": [],
        "payable": true,
        "stateMutability": "payable",
        "type": "function",
        "signature": "0xba0f4907"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "buyer",
            "type": "address"
          },
          {
            "name": "seller",
            "type": "address"
          },
          {
            "name": "token",
            "type": "address"
          },
          {
            "name": "purchase",
            "type": "uint256[]"
          },
          {
            "name": "auctionData",
            "type": "uint256[]"
          },
          {
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "name": "amounts",
            "type": "uint256[]"
          },
          {
            "name": "signature",
            "type": "bytes"
          }
        ],
        "name": "claimSellerOfferUsingBasicSigViaEIP1271",
        "outputs": [],
        "payable": true,
        "stateMutability": "payable",
        "type": "function",
        "signature": "0xbe1d3b46"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "buyer",
            "type": "address"
          },
          {
            "name": "seller",
            "type": "address"
          },
          {
            "name": "token",
            "type": "address"
          },
          {
            "name": "purchase",
            "type": "uint256[]"
          },
          {
            "name": "auctionData",
            "type": "uint256[]"
          },
          {
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "name": "amounts",
            "type": "uint256[]"
          },
          {
            "name": "signature",
            "type": "bytes"
          }
        ],
        "name": "claimSellerOfferViaEIP1271",
        "outputs": [],
        "payable": true,
        "stateMutability": "payable",
        "type": "function",
        "signature": "0xcd2dac53"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "who",
            "type": "address"
          }
        ],
        "name": "isMetaTransactionProcessor",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function",
        "signature": "0xdc5074af"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "feeCollector",
            "type": "address"
          },
          {
            "name": "fee10000th",
            "type": "uint256"
          }
        ],
        "name": "setFee",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0xe55156b5"
      },
      {
        "constant": false,
        "inputs": [],
        "name": "init712",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0xff75d700"
      },
      {
        "inputs": [
          {
            "name": "asset",
            "type": "address"
          },
          {
            "name": "admin",
            "type": "address"
          },
          {
            "name": "initialMetaTx",
            "type": "address"
          },
          {
            "name": "feeCollector",
            "type": "address"
          },
          {
            "name": "fee10000th",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor",
        "signature": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "seller",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "buyer",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "offerId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "pricePaid",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "feePaid",
            "type": "uint256"
          }
        ],
        "name": "OfferClaimed",
        "type": "event",
        "signature": "0xb6ccdf0f604b7944dc67e7a20fcac8d00f86137f70b2cf577073372a54767847"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "seller",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "offerId",
            "type": "uint256"
          }
        ],
        "name": "OfferCancelled",
        "type": "event",
        "signature": "0x899cab278284ae4a91172caa0943607a0bcb19766254c3ebe1139be00650b102"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "feeCollector",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "fee10000th",
            "type": "uint256"
          }
        ],
        "name": "FeeSetup",
        "type": "event",
        "signature": "0x2dc23bbde6e39cbfb61764cee95d51414528b6102d7e4799e6803d9d3062825b"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "metaTransactionProcessor",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "enabled",
            "type": "bool"
          }
        ],
        "name": "MetaTransactionProcessor",
        "type": "event",
        "signature": "0xb21eb88b4e33b3f1281830a7178d74d8aa73220416215726b68ae23d539515cb"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "oldAdmin",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "newAdmin",
            "type": "address"
          }
        ],
        "name": "AdminChanged",
        "type": "event",
        "signature": "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
      }
    ],
    "evm": {
      "bytecode": {
        "linkReferences": {},
        "object": "",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x315A CODESIZE SUB DUP1 PUSH3 0x315A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0xA0 DUP2 LT ISZERO PUSH3 0x3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x80 SWAP1 SWAP7 ADD MLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH1 0x6 DUP3 SWAP1 SSTORE DUP4 MLOAD SWAP1 DUP2 MSTORE SWAP5 DUP6 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD SWAP6 SWAP7 SWAP4 SWAP6 SWAP2 SWAP5 SWAP1 SWAP3 PUSH32 0x2DC23BBDE6E39CBFB61764CEE95D51414528B6102D7E4799E6803D9D3062825B SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH3 0xEF DUP4 PUSH1 0x1 PUSH3 0x10D JUMP JUMPDEST PUSH3 0x102 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x171 AND JUMP JUMPDEST POP POP POP POP POP PUSH3 0x33D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0xB21EB88B4E33B3F1281830A7178D74D8AA73220416215726B68AE23D539515CB SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3731320000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x1DB JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0x1BA JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP1 SUB ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0xFF AND SWAP2 POP PUSH3 0x33A SWAP1 POP JUMPI PUSH1 0x1 PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x249 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0x228 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP1 SUB ADD DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE POP SWAP1 POP DUP1 PUSH1 0x42 PUSH3 0x3118 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x42 ADD DUP3 KECCAK256 PUSH32 0x5468652053616E64626F78203344000000000000000000000000000000000000 DUP4 MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0xE ADD DUP4 KECCAK256 PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP3 MLOAD SWAP4 DUP5 SWAP1 SUB PUSH1 0x1 SWAP1 DUP2 ADD DUP6 KECCAK256 PUSH1 0x20 DUP1 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP6 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP5 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2DCB DUP1 PUSH3 0x34D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F283970 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xCD2DAC53 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xCD2DAC53 EQ PUSH2 0xAE4 JUMPI DUP1 PUSH4 0xDC5074AF EQ PUSH2 0xCBE JUMPI DUP1 PUSH4 0xE55156B5 EQ PUSH2 0xD05 JUMPI DUP1 PUSH4 0xFF75D700 EQ PUSH2 0xD3E JUMPI PUSH2 0xD2 JUMP JUMPDEST DUP1 PUSH4 0x8F283970 EQ PUSH2 0x6FD JUMPI DUP1 PUSH4 0xBA0F4907 EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0xBE1D3B46 EQ PUSH2 0x90A JUMPI PUSH2 0xD2 JUMP JUMPDEST DUP1 PUSH4 0x6E9960C3 GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0x6E9960C3 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x72F1E97C EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x8A04AF6A EQ PUSH2 0x6C2 JUMPI PUSH2 0xD2 JUMP JUMPDEST DUP1 PUSH4 0x6244768 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x642AB1E6 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x6A256D1A EQ PUSH2 0x2DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xD53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x103E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CC PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x1223 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x127A JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x8CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x135B JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x95D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0xAFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xB37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xB6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xBBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xBED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xC0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xC3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x152E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x161B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1639 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xE19 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD66 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP13 DUP13 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP16 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP15 DUP3 MSTORE SWAP1 SWAP4 POP DUP15 SWAP3 POP DUP14 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x18D7 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEF0 DUP13 DUP13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0x1BAA SWAP1 POP JUMP JUMPDEST POP PUSH2 0xFE5 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP16 DUP16 DUP13 DUP13 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP16 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP15 DUP3 MSTORE SWAP1 SWAP4 POP DUP15 SWAP3 POP DUP14 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x202E SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x0 NOT SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 PUSH32 0x899CAB278284AE4A91172CAA0943607A0BCB19766254C3EBE1139BE00650B102 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x1051 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD66 JUMPI INVALID JUMPDEST PUSH2 0xEF0 DUP13 DUP13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x1 SWAP3 POP DUP3 SWAP2 POP PUSH2 0x1BAA SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x114C DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD66 JUMPI INVALID JUMPDEST PUSH2 0xEF0 DUP13 DUP13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x1 SWAP4 POP SWAP2 POP PUSH2 0x1BAA SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x126C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D69 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1276 DUP3 DUP3 PUSH2 0x26CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E2063616E206368616E67652061646D696E0000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x136E DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD66 JUMPI INVALID JUMPDEST PUSH2 0xEF0 DUP13 DUP13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP DUP3 SWAP2 POP PUSH2 0x1BAA SWAP1 POP JUMP JUMPDEST PUSH2 0x1457 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD66 JUMPI INVALID JUMPDEST PUSH2 0xEF0 DUP13 DUP13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x2 SWAP4 POP SWAP2 POP PUSH2 0x1BAA SWAP1 POP JUMP JUMPDEST PUSH2 0x1541 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD66 JUMPI INVALID JUMPDEST PUSH2 0xEF0 DUP13 DUP13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x2 SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0x1BAA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1698 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E2063616E206368616E67652066656500000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD PUSH32 0x2DC23BBDE6E39CBFB61764CEE95D51414528B6102D7E4799E6803D9D3062825B SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3731320000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1779 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x175A JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP1 SUB ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0xFF AND SWAP2 POP PUSH2 0x18D4 SWAP1 POP JUMPI PUSH1 0x1 PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x17E4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x17C5 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP1 SUB ADD DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE POP SWAP1 POP DUP1 PUSH1 0x42 PUSH2 0x2D27 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x42 ADD DUP3 KECCAK256 PUSH32 0x5468652053616E64626F78203344000000000000000000000000000000000000 DUP4 MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0xE ADD DUP4 KECCAK256 PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP3 MLOAD SWAP4 DUP5 SWAP1 SUB PUSH1 0x1 SWAP1 DUP2 ADD DUP6 KECCAK256 PUSH1 0x20 DUP1 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP6 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP5 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND CALLER EQ DUP1 PUSH2 0x1910 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1910 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1961 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 MLOAD DUP3 SWAP1 DUP7 SWAP1 DUP3 SWAP1 PUSH2 0x1987 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 NOT DUP2 EQ ISZERO PUSH2 0x19F7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41756374696F6E2063616E63656C6C6564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP6 ADD DUP2 DUP2 LT ISZERO PUSH2 0x1A4F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F766572666C6F77000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x1A5C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 GT ISZERO PUSH2 0x1AB8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42757920616D6F756E7420657863656564732073656C6C20616D6F756E740000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP DUP6 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1AC6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x1B21 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41756374696F6E206469646E2774207374617274207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP DUP6 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x1B2F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1B44 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD ADD GT PUSH2 0x1B9F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41756374696F6E2066696E697368656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ISZERO PUSH2 0x1C1E JUMPI PUSH2 0x1BBC PUSH2 0x2733 JUMP JUMPDEST PUSH2 0x1BC9 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x2739 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x1C2B DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x2911 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C3C JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1E14 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x20C13B0B00000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD SWAP3 DUP4 MSTORE DUP4 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP3 PUSH4 0x20C13B0B SWAP3 DUP7 SWAP3 DUP12 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x24 DUP2 ADD SWAP2 PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CC3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CAB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1CF0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D23 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D0B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D50 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ PUSH2 0x1E0F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642031323731207369676E617475726500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2021 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E22 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1FA4 JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1626BA7E DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EB9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EA1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1EE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ PUSH2 0x1E0F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642031363534207369676E617475726500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FB7 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH2 0x2B13 JUMP JUMPDEST SWAP1 POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x201F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7369676E657220213D2066726F6D000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x203D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20A3 DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2055 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x206A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x207F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x2094 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD TIMESTAMP SUB PUSH2 0x2BE0 JUMP JUMPDEST MUL SWAP1 POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x20B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x20EF JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 ADD SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD ISZERO PUSH2 0x212A JUMPI PUSH2 0x2127 DUP3 PUSH1 0x6 SLOAD PUSH2 0x2C11 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2137 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 DUP4 ADD GT ISZERO PUSH2 0x217F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C60 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x237E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP12 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2216 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x222C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x227F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F207472616E7366657220746F6B656E2070726963650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2379 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP2 DUP12 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2310 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2379 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F20636F6C6C656374206665650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x248A JUMP JUMPDEST DUP1 DUP3 ADD CALLVALUE LT ISZERO PUSH2 0x23D5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448203C206F666665722B6665650000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP3 ADD CALLVALUE GT ISZERO PUSH2 0x2411 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 DUP4 ADD CALLVALUE SUB DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x240F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2447 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 ISZERO PUSH2 0x248A JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2488 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x24B7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x250F JUMPI DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x24D3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24E7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MUL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24FC JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x24BD JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE DUP12 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP5 ADD SWAP1 DUP2 MSTORE DUP10 MLOAD PUSH1 0xA4 DUP6 ADD MSTORE DUP10 MLOAD SWAP3 SWAP1 SWAP5 AND SWAP4 PUSH4 0x2EB2C2D6 SWAP4 DUP13 SWAP4 DUP15 SWAP4 DUP13 SWAP4 DUP10 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x64 DUP2 ADD SWAP2 PUSH1 0x84 DUP3 ADD SWAP2 PUSH1 0xC4 ADD SWAP1 PUSH1 0x20 DUP1 DUP10 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25AF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2597 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25EE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x25D6 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x263B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x264C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB6CCDF0F604B7944DC67E7A20FCAC8D00F86137F70B2CF577073372A54767847 DUP13 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2696 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0xB21EB88B4E33B3F1281830A7178D74D8AA73220416215726B68AE23D539515CB SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2C81 PUSH1 0xA6 SWAP2 CODECOPY PUSH1 0xA6 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP7 DUP7 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2763 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2778 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x278D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x27A2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x27B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x27CC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2805 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x27ED JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2856 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x283E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B09 ADDRESS PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2C81 PUSH1 0xA6 SWAP2 CODECOPY PUSH1 0xA6 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x293F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2954 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2969 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x297E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x2993 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP14 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x29A8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP14 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29E1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x29C9 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP14 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A32 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A1A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2C1A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x2B23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x2B57 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x2B60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP5 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2BD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2BF1 JUMPI POP DUP3 PUSH2 0x2C09 JUMP JUMPDEST DUP5 DUP5 SUB PUSH1 0x0 DUP5 DUP5 DUP4 MUL DUP2 PUSH2 0x2C01 JUMPI INVALID JUMPDEST SDIV DUP8 ADD SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2710 SWAP2 MUL DIV SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x5C ADD SWAP1 MSTORE SWAP1 JUMP INVALID PUSH16 0x666665722065786365656473206D6178 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420746F207370656E6441756374696F6E28616464 PUSH19 0x6573732066726F6D2C6164647265737320746F PUSH12 0x656E2C75696E74323536206F PUSH7 0x66657249642C75 PUSH10 0x6E743235362073746172 PUSH21 0x696E6750726963652C75696E7432353620656E6469 PUSH15 0x6750726963652C75696E7432353620 PUSH20 0x74617274656441742C75696E7432353620647572 PUSH2 0x7469 PUSH16 0x6E2C75696E74323536207061636B732C PUSH3 0x797465 PUSH20 0x206964732C627974657320616D6F756E74732945 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2c PUSH20 0x7472696E672076657273696F6E2C616464726573 PUSH20 0x20766572696679696E67436F6E7472616374296F PUSH15 0x6C792061646D696E2063616E207365 PUSH21 0x7570206D6574615472616E73616374696F6E50726F PUSH4 0x6573736F PUSH19 0x73A265627A7A7230582054FBF170AB36B7FAC9 0x21 0xd7 0xb8 0xc7 0xa8 DUP5 0xad REVERT 0xce RETURNDATASIZE MSTORE8 SSTORE 0xbb CALLDATASIZE 0x23 PUSH20 0xA34B978581069364736F6C634300050900324549 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2c PUSH20 0x7472696E672076657273696F6E2C616464726573 PUSH20 0x20766572696679696E67436F6E74726163742900 ",
        "sourceMap": "643:16376:53:-;;;1879:1;1857:23;;1985:374;8:9:-1;5:2;;;30:1;27;20:12;5:2;1985:374:53;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1985:374:53;;;;;;;;;;;;;;;;;;;;;2115:6;:14;;-1:-1:-1;;;;;2115:14:53;;;-1:-1:-1;;;;;;2115:14:53;;;;;;;2139:13;:28;;;;;;;;;;;;;2177:11;:24;;;2216:34;;;;;;;;;;;;;1985:374;;;;;;;;2216:34;;;;;;;;;2260:6;:14;;-1:-1:-1;;;;;;2260:14:53;-1:-1:-1;;;;;2260:14:53;;;;;2284:49;2313:13;-1:-1:-1;2284:28:53;:49::i;:::-;2343:9;-1:-1:-1;;;;;2343:7:53;:9;:::i;:::-;1985:374;;;;;643:16376;;873:247:2;-1:-1:-1;;;;;978:51:2;;;;;;:25;:51;;;;;;;;;:61;;-1:-1:-1;;978:61:2;;;;;;;;;;1054:59;;;;;;;;;;;;;;;;;;;;;873:247;;:::o;355:279:96:-;103:156:5;;;;;;;;;;;;;;;;;158:12;171:9;158:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;158:23:5;;;;;-1:-1:-1;158:23:5;;;;;;;;;;;;;;-1:-1:-1;153:100:5;;-1:-1:-1;153:100:5;223:4;197:12;210:9;197:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;197:23:5;;;;;-1:-1:-1;197:23:5;;;;;;;;;:30;;-1:-1:-1;;197:30:5;;;;;;;;;;;-1:-1:-1;197:23:5;-1:-1:-1;197:23:5;225:93:96;;197:23:5;225:93:96;;;;;;;;;;;;513:27;;;;;;;;;;;;;558:14;;;;;;;;;;;;;;;446:171;;;;;;;;;;;;;;;;;;;;;;598:4;446:171;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;446:171:96;;;;;;;423:204;;;;;;;;404:223;;-1:-1:-1;153:100:5;355:279:96;:::o;643:16376:53:-;;;;;;;"
      },
      "deployedBytecode": {
        "linkReferences": {},
        "object": "",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F283970 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xCD2DAC53 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xCD2DAC53 EQ PUSH2 0xAE4 JUMPI DUP1 PUSH4 0xDC5074AF EQ PUSH2 0xCBE JUMPI DUP1 PUSH4 0xE55156B5 EQ PUSH2 0xD05 JUMPI DUP1 PUSH4 0xFF75D700 EQ PUSH2 0xD3E JUMPI PUSH2 0xD2 JUMP JUMPDEST DUP1 PUSH4 0x8F283970 EQ PUSH2 0x6FD JUMPI DUP1 PUSH4 0xBA0F4907 EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0xBE1D3B46 EQ PUSH2 0x90A JUMPI PUSH2 0xD2 JUMP JUMPDEST DUP1 PUSH4 0x6E9960C3 GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0x6E9960C3 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x72F1E97C EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x8A04AF6A EQ PUSH2 0x6C2 JUMPI PUSH2 0xD2 JUMP JUMPDEST DUP1 PUSH4 0x6244768 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x642AB1E6 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x6A256D1A EQ PUSH2 0x2DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xD53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x103E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CC PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x1223 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x127A JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x8CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x135B JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x95D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0xAFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xB37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xB6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xBBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xBED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xC0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xC3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x152E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x161B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1639 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xE19 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD66 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP13 DUP13 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP16 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP15 DUP3 MSTORE SWAP1 SWAP4 POP DUP15 SWAP3 POP DUP14 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x18D7 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEF0 DUP13 DUP13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0x1BAA SWAP1 POP JUMP JUMPDEST POP PUSH2 0xFE5 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP16 DUP16 DUP13 DUP13 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP16 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP15 DUP3 MSTORE SWAP1 SWAP4 POP DUP15 SWAP3 POP DUP14 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x202E SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x0 NOT SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 PUSH32 0x899CAB278284AE4A91172CAA0943607A0BCB19766254C3EBE1139BE00650B102 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x1051 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD66 JUMPI INVALID JUMPDEST PUSH2 0xEF0 DUP13 DUP13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x1 SWAP3 POP DUP3 SWAP2 POP PUSH2 0x1BAA SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x114C DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD66 JUMPI INVALID JUMPDEST PUSH2 0xEF0 DUP13 DUP13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x1 SWAP4 POP SWAP2 POP PUSH2 0x1BAA SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x126C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D69 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1276 DUP3 DUP3 PUSH2 0x26CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E2063616E206368616E67652061646D696E0000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x136E DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD66 JUMPI INVALID JUMPDEST PUSH2 0xEF0 DUP13 DUP13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP DUP3 SWAP2 POP PUSH2 0x1BAA SWAP1 POP JUMP JUMPDEST PUSH2 0x1457 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD66 JUMPI INVALID JUMPDEST PUSH2 0xEF0 DUP13 DUP13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x2 SWAP4 POP SWAP2 POP PUSH2 0x1BAA SWAP1 POP JUMP JUMPDEST PUSH2 0x1541 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD66 JUMPI INVALID JUMPDEST PUSH2 0xEF0 DUP13 DUP13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x2 SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0x1BAA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1698 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E2063616E206368616E67652066656500000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD PUSH32 0x2DC23BBDE6E39CBFB61764CEE95D51414528B6102D7E4799E6803D9D3062825B SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3731320000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1779 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x175A JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP1 SUB ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0xFF AND SWAP2 POP PUSH2 0x18D4 SWAP1 POP JUMPI PUSH1 0x1 PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x17E4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x17C5 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP1 SUB ADD DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE POP SWAP1 POP DUP1 PUSH1 0x42 PUSH2 0x2D27 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x42 ADD DUP3 KECCAK256 PUSH32 0x5468652053616E64626F78203344000000000000000000000000000000000000 DUP4 MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0xE ADD DUP4 KECCAK256 PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP3 MLOAD SWAP4 DUP5 SWAP1 SUB PUSH1 0x1 SWAP1 DUP2 ADD DUP6 KECCAK256 PUSH1 0x20 DUP1 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP6 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP5 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND CALLER EQ DUP1 PUSH2 0x1910 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1910 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1961 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 MLOAD DUP3 SWAP1 DUP7 SWAP1 DUP3 SWAP1 PUSH2 0x1987 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 NOT DUP2 EQ ISZERO PUSH2 0x19F7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41756374696F6E2063616E63656C6C6564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP6 ADD DUP2 DUP2 LT ISZERO PUSH2 0x1A4F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F766572666C6F77000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x1A5C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 GT ISZERO PUSH2 0x1AB8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42757920616D6F756E7420657863656564732073656C6C20616D6F756E740000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP DUP6 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1AC6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x1B21 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41756374696F6E206469646E2774207374617274207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP DUP6 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x1B2F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1B44 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD ADD GT PUSH2 0x1B9F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41756374696F6E2066696E697368656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ISZERO PUSH2 0x1C1E JUMPI PUSH2 0x1BBC PUSH2 0x2733 JUMP JUMPDEST PUSH2 0x1BC9 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x2739 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x1C2B DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x2911 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C3C JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1E14 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x20C13B0B00000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD SWAP3 DUP4 MSTORE DUP4 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP3 PUSH4 0x20C13B0B SWAP3 DUP7 SWAP3 DUP12 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x24 DUP2 ADD SWAP2 PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CC3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CAB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1CF0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D23 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D0B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D50 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ PUSH2 0x1E0F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642031323731207369676E617475726500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2021 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E22 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1FA4 JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1626BA7E DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EB9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EA1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1EE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ PUSH2 0x1E0F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642031363534207369676E617475726500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FB7 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH2 0x2B13 JUMP JUMPDEST SWAP1 POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x201F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7369676E657220213D2066726F6D000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x203D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20A3 DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2055 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x206A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x207F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x2094 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD TIMESTAMP SUB PUSH2 0x2BE0 JUMP JUMPDEST MUL SWAP1 POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x20B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x20EF JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 ADD SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD ISZERO PUSH2 0x212A JUMPI PUSH2 0x2127 DUP3 PUSH1 0x6 SLOAD PUSH2 0x2C11 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2137 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 DUP4 ADD GT ISZERO PUSH2 0x217F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C60 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x237E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP12 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2216 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x222C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x227F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F207472616E7366657220746F6B656E2070726963650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2379 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP2 DUP12 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2310 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2379 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F20636F6C6C656374206665650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x248A JUMP JUMPDEST DUP1 DUP3 ADD CALLVALUE LT ISZERO PUSH2 0x23D5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448203C206F666665722B6665650000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP3 ADD CALLVALUE GT ISZERO PUSH2 0x2411 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 DUP4 ADD CALLVALUE SUB DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x240F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2447 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 ISZERO PUSH2 0x248A JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2488 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x24B7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x250F JUMPI DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x24D3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24E7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MUL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24FC JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x24BD JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE DUP12 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP5 ADD SWAP1 DUP2 MSTORE DUP10 MLOAD PUSH1 0xA4 DUP6 ADD MSTORE DUP10 MLOAD SWAP3 SWAP1 SWAP5 AND SWAP4 PUSH4 0x2EB2C2D6 SWAP4 DUP13 SWAP4 DUP15 SWAP4 DUP13 SWAP4 DUP10 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x64 DUP2 ADD SWAP2 PUSH1 0x84 DUP3 ADD SWAP2 PUSH1 0xC4 ADD SWAP1 PUSH1 0x20 DUP1 DUP10 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25AF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2597 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25EE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x25D6 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x263B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x264C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB6CCDF0F604B7944DC67E7A20FCAC8D00F86137F70B2CF577073372A54767847 DUP13 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2696 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0xB21EB88B4E33B3F1281830A7178D74D8AA73220416215726B68AE23D539515CB SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2C81 PUSH1 0xA6 SWAP2 CODECOPY PUSH1 0xA6 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP7 DUP7 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2763 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2778 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x278D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x27A2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x27B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x27CC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2805 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x27ED JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2856 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x283E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B09 ADDRESS PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2C81 PUSH1 0xA6 SWAP2 CODECOPY PUSH1 0xA6 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x293F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2954 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2969 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x297E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x2993 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP14 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x29A8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP14 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29E1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x29C9 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP14 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A32 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A1A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2C1A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x2B23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x2B57 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x2B60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP5 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2BD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2BF1 JUMPI POP DUP3 PUSH2 0x2C09 JUMP JUMPDEST DUP5 DUP5 SUB PUSH1 0x0 DUP5 DUP5 DUP4 MUL DUP2 PUSH2 0x2C01 JUMPI INVALID JUMPDEST SDIV DUP8 ADD SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2710 SWAP2 MUL DIV SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x5C ADD SWAP1 MSTORE SWAP1 JUMP INVALID PUSH16 0x666665722065786365656473206D6178 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420746F207370656E6441756374696F6E28616464 PUSH19 0x6573732066726F6D2C6164647265737320746F PUSH12 0x656E2C75696E74323536206F PUSH7 0x66657249642C75 PUSH10 0x6E743235362073746172 PUSH21 0x696E6750726963652C75696E7432353620656E6469 PUSH15 0x6750726963652C75696E7432353620 PUSH20 0x74617274656441742C75696E7432353620647572 PUSH2 0x7469 PUSH16 0x6E2C75696E74323536207061636B732C PUSH3 0x797465 PUSH20 0x206964732C627974657320616D6F756E74732945 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2c PUSH20 0x7472696E672076657273696F6E2C616464726573 PUSH20 0x20766572696679696E67436F6E7472616374296F PUSH15 0x6C792061646D696E2063616E207365 PUSH21 0x7570206D6574615472616E73616374696F6E50726F PUSH4 0x6573736F PUSH19 0x73A265627A7A7230582054FBF170AB36B7FAC9 0x21 0xd7 0xb8 0xc7 0xa8 DUP5 0xad REVERT 0xce RETURNDATASIZE MSTORE8 SSTORE 0xbb CALLDATASIZE 0x23 PUSH20 0xA34B978581069364736F6C634300050900320000 ",
        "sourceMap": "643:16376:53:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4293:811;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;4293:811:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4293:811:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4293:811:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4293:811:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4293:811:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4293:811:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4293:811:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4293:811:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4293:811:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4293:811:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4293:811:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4293:811:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4293:811:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4293:811:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4293:811:53;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;4293:811:53;;-1:-1:-1;4293:811:53;-1:-1:-1;4293:811:53;:::i;:::-;;13851:162;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13851:162:53;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13851:162:53;;:::i;6948:822::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;6948:822:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6948:822:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6948:822:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6948:822:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6948:822:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6948:822:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6948:822:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6948:822:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6948:822:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6948:822:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6948:822:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6948:822:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6948:822:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6948:822:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6948:822:53;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;6948:822:53;;-1:-1:-1;6948:822:53;-1:-1:-1;6948:822:53;:::i;264:82:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;264:82:1;;;:::i;:::-;;;;-1:-1:-1;;;;;264:82:1;;;;;;;;;;;;;;10949:836:53;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;10949:836:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;10949:836:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10949:836:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;10949:836:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;10949:836:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10949:836:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;10949:836:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;10949:836:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10949:836:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;10949:836:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;10949:836:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10949:836:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;10949:836:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;10949:836:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10949:836:53;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;10949:836:53;;-1:-1:-1;10949:836:53;-1:-1:-1;10949:836:53;:::i;572:295:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;572:295:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;572:295:2;;;;;;;;;;:::i;469:197:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;469:197:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;469:197:1;-1:-1:-1;;;;;469:197:1;;:::i;8248:825:53:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;8248:825:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8248:825:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8248:825:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;8248:825:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8248:825:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8248:825:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;8248:825:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8248:825:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8248:825:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;8248:825:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8248:825:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8248:825:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;8248:825:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8248:825:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8248:825:53;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;8248:825:53;;-1:-1:-1;8248:825:53;-1:-1:-1;8248:825:53;:::i;9593:836::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;9593:836:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;9593:836:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9593:836:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;9593:836:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;9593:836:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9593:836:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;9593:836:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;9593:836:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9593:836:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;9593:836:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;9593:836:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9593:836:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;9593:836:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;9593:836:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9593:836:53;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;9593:836:53;;-1:-1:-1;9593:836:53;-1:-1:-1;9593:836:53;:::i;5615:822::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;5615:822:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;5615:822:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5615:822:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5615:822:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;5615:822:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5615:822:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5615:822:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;5615:822:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5615:822:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5615:822:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;5615:822:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5615:822:53;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5615:822:53;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;5615:822:53;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5615:822:53;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;5615:822:53;;-1:-1:-1;5615:822:53;-1:-1:-1;5615:822:53;:::i;1330:131:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1330:131:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1330:131:2;-1:-1:-1;;;;;1330:131:2;;:::i;:::-;;;;;;;;;;;;;;;;;;2496:271:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2496:271:53;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2496:271:53;;;;;;;;:::i;355:279:96:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;355:279:96;;;:::i;4293:811:53:-;4638:173;4669:5;4688:6;4708:5;4727:8;;4736:1;4727:11;;;;;;;;;;;;;4752;;4638:173;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4638:173:53;;;;;;4777:3;;4638:173;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;4638:173:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4794:7:53;;-1:-1:-1;4794:7:53;;;;4638:173;;;4794:7;;4638:173;4794:7;4638:173;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;4638:17:53;;-1:-1:-1;;;4638:173:53:i;:::-;4821:101;4842:6;4850:5;4857:11;;4821:101;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;4821:101:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4870:3:53;;-1:-1:-1;4870:3:53;;;;4821:101;;;4870:3;;4821:101;4870:3;4821:101;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;4821:101:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4875:7:53;;-1:-1:-1;4875:7:53;;;;4821:101;;;4875:7;;4821:101;4875:7;4821:101;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;4821:101:53;;;;137:4:-1;4821:101:53;;;;;;;;;;;;;;;;;;-1:-1:-1;4884:9:53;;-1:-1:-1;4884:9:53;;;;4821:101;;4884:9;;;;4821:101;1:33:-1;99:1;81:16;;74:27;;;-1:-1;99:1;-1:-1;4917:4:53;;-1:-1:-1;4821:20:53;;-1:-1:-1;4821:101:53:i;:::-;;4932:165;4958:5;4977:8;;4932:165;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4932:165:53;;;;;;4999:5;5018:6;5038:11;;4932:165;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4932:165:53;;;;;;5063:3;;4932:165;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;4932:165:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5080:7:53;;-1:-1:-1;5080:7:53;;;;4932:165;;;5080:7;;4932:165;5080:7;4932:165;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;4932:12:53;;-1:-1:-1;;;4932:165:53:i;:::-;4293:811;;;;;;;;;;;;;:::o;13851:162::-;13922:10;13914:19;;;;:7;:19;;;;;;;;:28;;;;;;;;;-1:-1:-1;;13914:42:53;;13971:35;13934:7;;13922:10;13971:35;;;13851:162;:::o;6948:822::-;7303:173;7334:5;7353:6;7373:5;7392:8;;7401:1;7392:11;;;;;;7303:173;7486:102;7507:6;7515:5;7522:11;;7486:102;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;7486:102:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7535:3:53;;-1:-1:-1;7535:3:53;;;;7486:102;;;7535:3;;7486:102;7535:3;7486:102;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;7486:102:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7540:7:53;;-1:-1:-1;7540:7:53;;;;7486:102;;;7540:7;;7486:102;7540:7;7486:102;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;7486:102:53;;;;137:4:-1;7486:102:53;;;;;;;;;;;;;;;;;;-1:-1:-1;7549:9:53;;-1:-1:-1;7549:9:53;;;;7486:102;;7549:9;;;;7486:102;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;7560:21:53;;-1:-1:-1;7560:21:53;;-1:-1:-1;7486:20:53;;-1:-1:-1;7486:102:53:i;264:82:1:-;333:6;;-1:-1:-1;;;;;333:6:1;264:82;:::o;10949:836:53:-;11317:173;11348:5;11367:6;11387:5;11406:8;;11415:1;11406:11;;;;;;11317:173;11500:103;11521:6;11529:5;11536:11;;11500:103;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;11500:103:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11549:3:53;;-1:-1:-1;11549:3:53;;;;11500:103;;;11549:3;;11500:103;11549:3;11500:103;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;11500:103:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11554:7:53;;-1:-1:-1;11554:7:53;;;;11500:103;;;11554:7;;11500:103;11554:7;11500:103;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;11500:103:53;;;;137:4:-1;11500:103:53;;;;;;;;;;;;;;;;;;-1:-1:-1;11563:9:53;;-1:-1:-1;11563:9:53;;;;11500:103;;11563:9;;;;11500:103;1:33:-1;99:1;81:16;;74:27;;;-1:-1;11574:21:53;;-1:-1:-1;99:1;-1:-1;11500:20:53;;-1:-1:-1;11500:103:53:i;572:295:2:-;709:6;;-1:-1:-1;;;;;709:6:2;695:10;:20;674:113;;;;-1:-1:-1;;;674:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;797:63;826:24;852:7;797:28;:63::i;:::-;572:295;;:::o;469:197:1:-;549:6;;-1:-1:-1;;;;;549:6:1;535:10;:20;527:60;;;;;-1:-1:-1;;;527:60:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;615:6;;602:30;;;-1:-1:-1;;;;;615:6:1;;;602:30;;;;;;;;;;;;;;;;;;;;;642:6;:17;;;;-1:-1:-1;;;;;642:17:1;;;;;;;;;;469:197::o;8248:825:53:-;8606:173;8637:5;8656:6;8676:5;8695:8;;8704:1;8695:11;;;;;;8606:173;8789:102;8810:6;8818:5;8825:11;;8789:102;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;8789:102:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8838:3:53;;-1:-1:-1;8838:3:53;;;;8789:102;;;8838:3;;8789:102;8838:3;8789:102;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;8789:102:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8843:7:53;;-1:-1:-1;8843:7:53;;;;8789:102;;;8843:7;;8789:102;8843:7;8789:102;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;8789:102:53;;;;137:4:-1;8789:102:53;;;;;;;;;;;;;;;;;;-1:-1:-1;8852:9:53;;-1:-1:-1;8852:9:53;;;;8789:102;;8852:9;;;;8789:102;1:33:-1;99:1;81:16;;74:27;;;-1:-1;99:1;-1:-1;99:1;;-1:-1;8789:20:53;;-1:-1:-1;8789:102:53:i;9593:836::-;9961:173;9992:5;10011:6;10031:5;10050:8;;10059:1;10050:11;;;;;;9961:173;10144:103;10165:6;10173:5;10180:11;;10144:103;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;10144:103:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10193:3:53;;-1:-1:-1;10193:3:53;;;;10144:103;;;10193:3;;10144:103;10193:3;10144:103;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;10144:103:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10198:7:53;;-1:-1:-1;10198:7:53;;;;10144:103;;;10198:7;;10144:103;10198:7;10144:103;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;10144:103:53;;;;137:4:-1;10144:103:53;;;;;;;;;;;;;;;;;;-1:-1:-1;10207:9:53;;-1:-1:-1;10207:9:53;;;;10144:103;;10207:9;;;;10144:103;1:33:-1;99:1;81:16;;74:27;;;-1:-1;10218:21:53;;-1:-1:-1;99:1;-1:-1;10144:20:53;;-1:-1:-1;10144:103:53:i;5615:822::-;5970:173;6001:5;6020:6;6040:5;6059:8;;6068:1;6059:11;;;;;;5970:173;6153:102;6174:6;6182:5;6189:11;;6153:102;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;6153:102:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6202:3:53;;-1:-1:-1;6202:3:53;;;;6153:102;;;6202:3;;6153:102;6202:3;6153:102;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;6153:102:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6207:7:53;;-1:-1:-1;6207:7:53;;;;6153:102;;;6207:7;;6153:102;6207:7;6153:102;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;6153:102:53;;;;137:4:-1;6153:102:53;;;;;;;;;;;;;;;;;;-1:-1:-1;6216:9:53;;-1:-1:-1;6216:9:53;;;;6153:102;;6216:9;;;;6153:102;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;6227:21:53;;-1:-1:-1;6250:4:53;;-1:-1:-1;6153:20:53;;-1:-1:-1;6153:102:53:i;1330:131:2:-;-1:-1:-1;;;;;1424:30:2;1401:4;1424:30;;;:25;:30;;;;;;;;;1330:131::o;2496:271:53:-;2603:6;;-1:-1:-1;;;;;2603:6:53;2589:10;:20;2581:58;;;;;-1:-1:-1;;;2581:58:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;2649:13;:28;;;;-1:-1:-1;;;;;2649:28:53;;;;;;;;2687:11;:24;;;2726:34;;;;;;;;;;;;;;;;;;;;;;;;2496:271;;:::o;355:279:96:-;103:156:5;;;;;;;;;;;;;;;;;158:12;171:9;158:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;158:23:5;;;;;-1:-1:-1;158:23:5;;;;;;;;;;;;;;-1:-1:-1;153:100:5;;-1:-1:-1;153:100:5;223:4;197:12;210:9;197:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;197:23:5;;;;;-1:-1:-1;197:23:5;;;;;;;;;:30;;-1:-1:-1;;197:30:5;;;;;;;;;;;-1:-1:-1;197:23:5;-1:-1:-1;197:23:5;225:93:96;;197:23:5;225:93:96;;;;;;;;;;;;513:27;;;;;;;;;;;;;558:14;;;;;;;;;;;;;;;446:171;;;;;;;;;;;;;;;;;;;;;;598:4;446:171;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;446:171:96;;;;;;;423:204;;;;;;;;404:223;;-1:-1:-1;153:100:5;355:279:96;:::o;2773:1051:53:-;-1:-1:-1;;;;;3040:19:53;;3049:10;3040:19;;:85;;-1:-1:-1;;;;;;3064:19:53;;;;;;:60;;-1:-1:-1;3113:10:53;3087:37;;;;:25;:37;;;;;;;;3064:60;3032:112;;;;;-1:-1:-1;;;3032:112:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3185:15:53;;3154:28;3185:15;;;:7;:15;;;;;3201:32;;3154:28;;3201:11;;3154:28;;3201:32;;;;;;;;;;3185:49;;;;;;;;;;;;3154:80;;-1:-1:-1;;3252:20:53;:35;;3244:65;;;;;-1:-1:-1;;;3244:65:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;3336:32;;;3386:29;;;;3378:50;;;;;-1:-1:-1;;;3378:50:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;3455:11;1769:1;3455:30;;;;;;;;;;;;;;3446:5;:39;;3438:82;;;;;-1:-1:-1;;;3438:82:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;3590:15;3552:11;1678:1;3552:34;;;;;;;;;;;;;;:53;;3531:124;;;;;-1:-1:-1;;;3531:124:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;3759:15;3723:11;1725:1;3723:33;;;;;;;;;;;;;;3686:11;1678:1;3686:34;;;;;;;;;;;;;;:70;:88;3665:151;;;;;-1:-1:-1;;;3665:151:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;2773:1051;;;;;;;;;:::o;14019:1303::-;14315:7;14334:23;14371:6;14368:321;;;14468:17;:15;:17::i;:::-;14503:52;14516:4;14522:5;14529:11;14542:3;14547:7;14503:12;:52::i;:::-;14406:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14406:163:53;;;14393:176;;14368:321;;;14613:65;14639:4;14645:5;14652:11;14665:3;14670:7;14613:25;:65::i;:::-;14600:78;;14368:321;14720:21;14703:13;:38;;;;;;;;;14699:617;;;14782:53;;;14839:18;14782:53;;;;;;;;;;;;;;;;;14839:18;;-1:-1:-1;;;;;14782:30:53;;;103:10:12;;14813::53;;14825:9;;14782:53;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14782:53:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14782:53:53;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14782:53:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14782:53:53;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14782:53:53;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14782:53:53;:75;;;14757:156;;;;;-1:-1:-1;;;14757:156:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;14699:617;;;14950:21;14933:13;:38;;;;;;;;;14930:386;;;103:10:15;15079:18:53;;15011:86;;;15019:4;-1:-1:-1;;;;;15011:30:53;;15052:10;15042:21;;;;;;15065:9;15011:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15011:64:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15011:64:53;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15011:64:53;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15011:64:53;:86;;;14986:167;;;;;-1:-1:-1;;;14986:167:53;;;;;;;;;;;;;;;;;;;;;;;;;;;14930:386;15184:14;15201:49;15227:10;15217:21;;;;;;15240:9;15201:15;:49::i;:::-;15184:66;;15282:4;-1:-1:-1;;;;;15272:14:53;:6;-1:-1:-1;;;;;15272:14:53;;15264:41;;;;;-1:-1:-1;;;15264:41:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;14930:386;;14019:1303;;;;;;;;;;;:::o;11791:1925::-;12053:13;12348:8;12357:1;12348:11;;;;;;;;;;;;;;12069:276;12118:11;1580:1;12118:38;;;;;;;;;;;;;;12174:11;1630:1;12174:36;;;;;;;;;;;;;;12228:11;1725:1;12228:33;;;;;;;;;;;;;;12297:11;1678:1;12297:34;;;;;;;;;;;;;;12279:15;:52;12069:31;:276::i;:::-;:290;12053:306;;12422:8;12431:1;12422:11;;;;;;;;;;;;;;12369:7;:15;12377:6;-1:-1:-1;;;;;12369:15:53;-1:-1:-1;;;;;12369:15:53;;;;;;;;;;;;:49;12385:11;1528:1;12385:32;;;;;;;;;;;;;;;;;;;12369:49;;;;;;;;;;-1:-1:-1;12369:49:53;;;:64;;;;;;;;12472:11;;:15;12469:93;;12509:42;12532:5;12539:11;;12509:22;:42::i;:::-;12503:48;;12469:93;12593:8;12602:1;12593:11;;;;;;;;;;;;;;12586:3;12580:5;:9;:24;;12572:70;;;;-1:-1:-1;;;12572:70:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12657:19:53;;;12653:604;;12700:47;;;;;;-1:-1:-1;;;;;12700:47:53;;;;;;;;;;;;;;;;;;;;;;:25;;;;;;:47;;;;;;;;;;;;;;;-1:-1:-1;12700:25:53;:47;;;5:2:-1;;;;30:1;27;20:12;5:2;12700:47:53;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12700:47:53;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12700:47:53;12692:90;;;;;-1:-1:-1;;;12692:90:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;12799:7;;12796:131;;12867:13;;12834:52;;;;;;-1:-1:-1;;;;;12834:52:53;;;;;;;12867:13;;;12834:52;;;;;;;;;;;;:25;;;;;;:52;;;;;;;;;;;;;;;12867:13;12834:25;:52;;;5:2:-1;;;;30:1;27;20:12;5:2;12834:52:53;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12834:52:53;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12834:52:53;12826:86;;;;;-1:-1:-1;;;12826:86:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;12653:604;;;12986:3;12978:5;:11;12965:9;:24;;12957:52;;;;;-1:-1:-1;;;12957:52:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;13044:3;13038:5;:9;13026;:21;13023:103;;;13067:44;;:10;;13100:9;;;13087;:23;13067:44;;;;;;;;;13087:23;13067:10;:44;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13067:44:53;13023:103;13139:22;;-1:-1:-1;;;;;13139:15:53;;;:22;;;;;13155:5;;13139:22;;;;13155:5;13139:15;:22;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;13178:7:53;;13175:72;;13205:13;;:27;;-1:-1:-1;;;;;13205:13:53;;;;:27;;;;;13228:3;;13205:13;:27;:13;:27;13228:3;13205:13;:27;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13205:27:53;13175:72;13267:28;13312:7;:14;13298:29;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;13298:29:53;-1:-1:-1;13267:60:53;-1:-1:-1;13342:9:53;13337:115;13361:11;:18;13357:1;:22;13337:115;;;13430:8;13439:1;13430:11;;;;;;;;;;;;;;13417:7;13425:1;13417:10;;;;;;;;;;;;;;:24;13400:11;13412:1;13400:14;;;;;;;;;;;;;;;;;:41;13381:3;;13337:115;;;-1:-1:-1;13461:6:53;;:65;;;;;-1:-1:-1;;;;;13461:65:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;;;;;:28;;13490:6;;13498:5;;13505:3;;13510:11;;13461:65;;;;;;;;;;;;;;;;;;;;;;;;:6;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;13461:65:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;13461:65:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13461:65:53;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13461:65:53;;;;13606:11;1528:1;13606:32;;;;;;;;;;;;;;13587:5;-1:-1:-1;;;;;13541:168:53;13567:6;-1:-1:-1;;;;;13541:168:53;;13652:8;13661:1;13652:11;;;;;;;;;;;;;;13677:5;13696:3;13541:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11791:1925;;;;;;;;;;:::o;873:247:2:-;-1:-1:-1;;;;;978:51:2;;;;;;:25;:51;;;;;;;;;:61;;-1:-1:-1;;978:61:2;;;;;;;;;;1054:59;;;;;;;;;;;;;;;;;;;;;873:247;;:::o;640:99:96:-;716:16;;640:99;:::o;16167:850:53:-;16365:7;844:193;;;;;;;;;;;;;;;;;;;16500:4;16526:5;16553:11;1528:1;16553:32;;;;;;;;;;;;;;16607:11;1580:1;16607:38;;;;;;;;;;;;;;16667:11;1630:1;16667:36;;;;;;;;;;;;;;16725:11;1678:1;16725:34;;;;;;;;;;;;;;16781:11;1725:1;16781:33;;;;;;;;;;;;;;16836:11;1769:1;16836:30;;;;;;;;;;;;;;16915:3;16898:21;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16898:21:53;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;16898:21:53;;;16888:32;;;;;;16969:7;16952:25;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16952:25:53;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;16952:25:53;;;16942:36;;;;;;16430:566;;;;;;;;;;;-1:-1:-1;;;;;16430:566:53;-1:-1:-1;;;;;16430:566:53;;;;;;-1:-1:-1;;;;;16430:566:53;-1:-1:-1;;;;;16430:566:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;16430:566:53;;;16403:607;;;;;;16384:626;;16167:850;;;;;;;:::o;15328:833::-;15539:12;15570:584;15639:4;844:193;;;;;;;;;;;;;;;;;;;15696:4;15718:5;15741:11;1528:1;15741:32;;;;;;;;;;;;;;15791:11;1580:1;15791:38;;;;;;;;;;;;;;15847:11;1630:1;15847:36;;;;;;;;;;;;;;15901:11;1678:1;15901:34;;;;;;;;;;;;;;15953:11;1725:1;15953:33;;;;;;;;;;;;;;16004:11;1769:1;16004:30;;;;;;;;;;;;;;16079:3;16062:21;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16062:21:53;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;16062:21:53;;;16052:32;;;;;;16129:7;16112:25;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16112:25:53;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;16112:25:53;;;16102:36;;;;;;15597:555;;;;;;-1:-1:-1;;;;;15597:555:53;-1:-1:-1;;;;;15597:555:53;;;;;;;;;;;;;-1:-1:-1;;;;;15597:555:53;-1:-1:-1;;;;;15597:555:53;;;;;;;;-1:-1:-1;;;;;15597:555:53;-1:-1:-1;;;;;15597:555:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15597:555:53;;;15587:566;;;;;;15570:16;:584::i;:::-;15563:591;15328:833;-1:-1:-1;;;;;;15328:833:53:o;47:637:39:-;143:17;184:3;:10;198:2;184:16;176:25;;;;;;310:2;301:12;;295:19;347:2;338:12;;332:19;392:2;383:12;;377:19;212:9;369:28;516:2;512:6;;508:44;;;539:2;534:7;508:44;569:1;:7;;574:2;569:7;:18;;;;580:1;:7;;585:2;580:7;569:18;561:27;;;;;;611:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;611:24:39;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;611:24:39;;-1:-1:-1;;611:24:39;;;-1:-1:-1;;;;;;;653:23:39;;645:32;;;;;;47:637;;;;;;;:::o;49:522:36:-;226:7;265:8;249:13;:24;245:73;;;-1:-1:-1;296:11:36;289:18;;245:73;353:43;;;327:23;486:8;435:40;;;486:8;434:61;;;;;521:42;;;-1:-1:-1;;;49:522:36;;;;;;;:::o;577:225::-;790:5;768:18;;767:28;;577:225::o;1459:151:39:-;1545:58;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1545:58:39;;;;;1459:151::o"
      },
      "methodIdentifiers": {
        "cancelSellerOffer(uint256)": "642ab1e6",
        "changeAdmin(address)": "8f283970",
        "claimSellerOffer(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)": "06244768",
        "claimSellerOfferUsingBasicSig(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)": "ba0f4907",
        "claimSellerOfferUsingBasicSigViaEIP1271(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)": "be1d3b46",
        "claimSellerOfferUsingBasicSigViaEIP1654(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)": "72f1e97c",
        "claimSellerOfferViaEIP1271(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)": "cd2dac53",
        "claimSellerOfferViaEIP1654(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)": "6a256d1a",
        "getAdmin()": "6e9960c3",
        "init712()": "ff75d700",
        "isMetaTransactionProcessor(address)": "dc5074af",
        "setFee(address,uint256)": "e55156b5",
        "setMetaTransactionProcessor(address,bool)": "8a04af6a"
      }
    },
    "metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.e560f70d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"buyer\",\"type\":\"address\"},{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"purchase\",\"type\":\"uint256[]\"},{\"name\":\"auctionData\",\"type\":\"uint256[]\"},{\"name\":\"ids\",\"type\":\"uint256[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claimSellerOffer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"cancelSellerOffer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"buyer\",\"type\":\"address\"},{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"purchase\",\"type\":\"uint256[]\"},{\"name\":\"auctionData\",\"type\":\"uint256[]\"},{\"name\":\"ids\",\"type\":\"uint256[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claimSellerOfferViaEIP1654\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"buyer\",\"type\":\"address\"},{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"purchase\",\"type\":\"uint256[]\"},{\"name\":\"auctionData\",\"type\":\"uint256[]\"},{\"name\":\"ids\",\"type\":\"uint256[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claimSellerOfferUsingBasicSigViaEIP1654\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMetaTransactionProcessor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"buyer\",\"type\":\"address\"},{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"purchase\",\"type\":\"uint256[]\"},{\"name\":\"auctionData\",\"type\":\"uint256[]\"},{\"name\":\"ids\",\"type\":\"uint256[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claimSellerOfferUsingBasicSig\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"buyer\",\"type\":\"address\"},{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"purchase\",\"type\":\"uint256[]\"},{\"name\":\"auctionData\",\"type\":\"uint256[]\"},{\"name\":\"ids\",\"type\":\"uint256[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claimSellerOfferUsingBasicSigViaEIP1271\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"buyer\",\"type\":\"address\"},{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"purchase\",\"type\":\"uint256[]\"},{\"name\":\"auctionData\",\"type\":\"uint256[]\"},{\"name\":\"ids\",\"type\":\"uint256[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claimSellerOfferViaEIP1271\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isMetaTransactionProcessor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"feeCollector\",\"type\":\"address\"},{\"name\":\"fee10000th\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init712\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"asset\",\"type\":\"address\"},{\"name\":\"admin\",\"type\":\"address\"},{\"name\":\"initialMetaTx\",\"type\":\"address\"},{\"name\":\"feeCollector\",\"type\":\"address\"},{\"name\":\"fee10000th\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"pricePaid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"feePaid\",\"type\":\"uint256\"}],\"name\":\"OfferClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"OfferCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeCollector\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"fee10000th\",\"type\":\"uint256\"}],\"name\":\"FeeSetup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"metaTransactionProcessor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MetaTransactionProcessor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"cancelSellerOffer(uint256)\":{\"params\":{\"offerId\":\"offer to cancel\"}},\"changeAdmin(address)\":{\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"claimSellerOffer(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)\":{\"params\":{\"amounts\":\"amounts of Assets per pack\",\"auctionData\":\"offerId, startingPrice, endingPrice, startedAt, duration, packs\",\"buyer\":\"address paying for the offer\",\"ids\":\"ids of the Assets being sold\",\"purchase\":\"buyAmount, maxTokenAmount\",\"seller\":\"address of the seller\",\"signature\":\"signature of seller\",\"token\":\"token used for payment\"}},\"claimSellerOfferUsingBasicSig(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)\":{\"params\":{\"amounts\":\"amounts of Assets per pack\",\"auctionData\":\"offerId, startingPrice, endingPrice, startedAt, duration, packs\",\"buyer\":\"address paying for the offer\",\"ids\":\"ids of the Assets being sold\",\"purchase\":\"buyAmount, maxTokenAmount\",\"seller\":\"address of the seller\",\"signature\":\"signature of seller\",\"token\":\"token used for payment\"}},\"claimSellerOfferUsingBasicSigViaEIP1271(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)\":{\"params\":{\"amounts\":\"amounts of Assets per pack\",\"auctionData\":\"offerId, startingPrice, endingPrice, startedAt, duration, packs\",\"buyer\":\"address paying for the offer\",\"ids\":\"ids of the Assets being sold\",\"purchase\":\"buyAmount, maxTokenAmount\",\"seller\":\"address of the seller\",\"signature\":\"signature of seller\",\"token\":\"token used for payment\"}},\"claimSellerOfferUsingBasicSigViaEIP1654(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)\":{\"params\":{\"amounts\":\"amounts of Assets per pack\",\"auctionData\":\"offerId, startingPrice, endingPrice, startedAt, duration, packs\",\"buyer\":\"address paying for the offer\",\"ids\":\"ids of the Assets being sold\",\"purchase\":\"buyAmount, maxTokenAmount\",\"seller\":\"address of the seller\",\"signature\":\"signature of seller\",\"token\":\"token used for payment\"}},\"claimSellerOfferViaEIP1271(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)\":{\"params\":{\"amounts\":\"amounts of Assets per pack\",\"auctionData\":\"offerId, startingPrice, endingPrice, startedAt, duration, packs\",\"buyer\":\"address paying for the offer\",\"ids\":\"ids of the Assets being sold\",\"purchase\":\"buyAmount, maxTokenAmount\",\"seller\":\"address of the seller\",\"signature\":\"signature of seller\",\"token\":\"token used for payment\"}},\"claimSellerOfferViaEIP1654(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)\":{\"params\":{\"amounts\":\"amounts of Assets per pack\",\"auctionData\":\"offerId, startingPrice, endingPrice, startedAt, duration, packs\",\"buyer\":\"address paying for the offer\",\"ids\":\"ids of the Assets being sold\",\"purchase\":\"buyAmount, maxTokenAmount\",\"seller\":\"address of the seller\",\"signature\":\"signature of seller\",\"token\":\"token used for payment\"}},\"getAdmin()\":{\"return\":\"the current administrator of this contract.\"},\"isMetaTransactionProcessor(address)\":{\"params\":{\"who\":\"The address to query.\"},\"return\":\"whether the address has meta-transaction execution rights.\"},\"setFee(address,uint256)\":{\"params\":{\"fee10000th\":\"fee in 10,000th\",\"feeCollector\":\"address receiving the fee\"}},\"setMetaTransactionProcessor(address,bool)\":{\"params\":{\"enabled\":\"set whether the metaTransactionProcessor is enabled or disabled.\",\"metaTransactionProcessor\":\"address that will be given/removed metaTransactionProcessor rights.\"}}}},\"userdoc\":{\"methods\":{\"cancelSellerOffer(uint256)\":{\"notice\":\"cancel a offer previously signed, new offer need to use a id not used yet\"},\"changeAdmin(address)\":{\"notice\":\"change the administrator to be `newAdmin`.\"},\"claimSellerOffer(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)\":{\"notice\":\"claim offer using EIP712\"},\"claimSellerOfferUsingBasicSig(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)\":{\"notice\":\"claim offer using Basic Signature\"},\"claimSellerOfferUsingBasicSigViaEIP1271(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)\":{\"notice\":\"claim offer using Basic Signature and EIP1271 signature verification scheme\"},\"claimSellerOfferUsingBasicSigViaEIP1654(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)\":{\"notice\":\"claim offer using Basic Signature and EIP1654 signature verification scheme\"},\"claimSellerOfferViaEIP1271(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)\":{\"notice\":\"claim offer using EIP712 and EIP1271 signature verification scheme\"},\"claimSellerOfferViaEIP1654(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)\":{\"notice\":\"claim offer using EIP712 and EIP1654 signature verification scheme\"},\"getAdmin()\":{\"notice\":\"gives the current administrator of this contract.\"},\"isMetaTransactionProcessor(address)\":{\"notice\":\"check whether address `who` is given meta-transaction execution rights.\"},\"setFee(address,uint256)\":{\"notice\":\"set fee parameters\"},\"setMetaTransactionProcessor(address,bool)\":{\"notice\":\"Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\"}}}},\"settings\":{\"compilationTarget\":{\"src/Auctions/AssetSignedAuction.sol\":\"AssetSignedAuction\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts_common/src/BaseWithStorage/Admin.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\ncontract Admin {\\n\\n    address internal _admin;\\n\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @notice gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @notice change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require (msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xf3763fa108235379b48cf8fe9a708692fcb077250d9974351fd636ff0baf84bf\"},\"contracts_common/src/BaseWithStorage/MetaTransactionReceiver.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract MetaTransactionReceiver is Admin{\\n\\n    mapping(address => bool) internal _metaTransactionContracts;\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @notice Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) public {\\n        require(\\n            msg.sender == _admin,\\n            \\\"only admin can setup metaTransactionProcessors\\\"\\n        );\\n        _setMetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    function _setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) internal {\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @notice check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns(bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n}\",\"keccak256\":\"0xbd938dbadc0ed2142b6dc20b0613dc3236a9a6ec370639476b672c2536e9a186\"},\"contracts_common/src/BaseWithStorage/ProxyImplementation.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\ncontract ProxyImplementation {\\n    mapping(string => bool) _initialised;\\n\\n    modifier phase(string memory phaseName) {\\n        if (!_initialised[phaseName]) {\\n            _initialised[phaseName] = true;\\n            _;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9bfcb76a8aa264d0b33fb8b24c9401198a8e42ec8230ad6cc60ee628e3734fa4\"},\"contracts_common/src/BaseWithStorage/SuperOperators.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract SuperOperators is Admin {\\n\\n    mapping(address => bool) internal _superOperators;\\n\\n    event SuperOperator(address superOperator, bool enabled);\\n\\n    /// @notice Enable or disable the ability of `superOperator` to transfer tokens of all (superOperator rights).\\n    /// @param superOperator address that will be given/removed superOperator right.\\n    /// @param enabled set whether the superOperator is enabled or disabled.\\n    function setSuperOperator(address superOperator, bool enabled) external {\\n        require(\\n            msg.sender == _admin,\\n            \\\"only admin is allowed to add super operators\\\"\\n        );\\n        _superOperators[superOperator] = enabled;\\n        emit SuperOperator(superOperator, enabled);\\n    }\\n\\n    /// @notice check whether address `who` is given superOperator rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has superOperator rights.\\n    function isSuperOperator(address who) public view returns (bool) {\\n        return _superOperators[who];\\n    }\\n}\\n\",\"keccak256\":\"0x22354cf60ccf77a6de61c13bdaf4e3094d115b960ae563b0527622c846a12abb\"},\"contracts_common/src/Interfaces/ERC1155.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n    @title ERC-1155 Multi Token Standard\\n    @dev See https://eips.ethereum.org/EIPS/eip-1155\\n    Note: The ERC-165 identifier for this interface is 0xd9b67a26.\\n */\\ninterface ERC1155 {\\n\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 value\\n    );\\n\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n        @notice Transfers `value` amount of an `id` from  `from` to `to`  (with safety call).\\n        @dev Caller must be approved to manage the tokens being transferred out of the `from` account (see \\\"Approval\\\" section of the standard).\\n        MUST revert if `to` is the zero address.\\n        MUST revert if balance of holder for token `id` is lower than the `value` sent.\\n        MUST revert on any other error.\\n        MUST emit the `TransferSingle` event to reflect the balance change (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        After the above conditions are met, this function MUST check if `to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        @param from    Source address\\n        @param to      Target address\\n        @param id      ID of the token type\\n        @param value   Transfer amount\\n        @param data    Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `to`\\n    */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n        @notice Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified (with safety call).\\n        @dev Caller must be approved to manage the tokens being transferred out of the `from` account (see \\\"Approval\\\" section of the standard).\\n        MUST revert if `to` is the zero address.\\n        MUST revert if length of `ids` is not the same as length of `values`.\\n        MUST revert if any of the balance(s) of the holder(s) for token(s) in `ids` is lower than the respective amount(s) in `values` sent to the recipient.\\n        MUST revert on any other error.\\n        MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc).\\n        After the above conditions for the transfer(s) in the batch are met, this function MUST check if `to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        @param from    Source address\\n        @param to      Target address\\n        @param ids     IDs of each token type (order and length must match _values array)\\n        @param values  Transfer amounts per token type (order and length must match _ids array)\\n        @param data    Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `to`\\n    */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n        @notice Get the balance of an account's tokens.\\n        @param owner  The address of the token holder\\n        @param id     ID of the token\\n        @return        The _owner's balance of the token type requested\\n     */\\n    function balanceOf(address owner, uint256 id)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n        @notice Get the balance of multiple account/token pairs\\n        @param owners The addresses of the token holders\\n        @param ids    ID of the tokens\\n        @return        The _owner's balance of the token types requested (i.e. balance for each (owner, id) pair)\\n     */\\n    function balanceOfBatch(address[] calldata owners, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n        @notice Enable or disable approval for a third party (\\\"operator\\\") to manage all of the caller's tokens.\\n        @dev MUST emit the ApprovalForAll event on success.\\n        @param operator  Address to add to the set of authorized operators\\n        @param approved  True if the operator is approved, false to revoke approval\\n    */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n        @notice Queries the approval status of an operator for a given owner.\\n        @param owner     The owner of the tokens\\n        @param operator  Address of authorized operator\\n        @return           True if the operator is approved, false if not\\n    */\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xadc315968f24479f9e6e5cbdfb32a3a8d6b83061afb0680ad3a73959e40e447f\"},\"contracts_common/src/Interfaces/ERC1155TokenReceiver.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n    Note: The ERC-165 identifier for this interface is 0x4e2312e0.\\n*/\\ninterface ERC1155TokenReceiver {\\n    /**\\n        @notice Handle the receipt of a single ERC1155 token type.\\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.\\n        This function MUST return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61) if it accepts the transfer.\\n        This function MUST revert if it rejects the transfer.\\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\\n        @param operator  The address which initiated the transfer (i.e. msg.sender)\\n        @param from      The address which previously owned the token\\n        @param id        The ID of the token being transferred\\n        @param value     The amount of tokens being transferred\\n        @param data      Additional data with no specified format\\n        @return           `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n    */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n        @notice Handle the receipt of multiple ERC1155 token types.\\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.\\n        This function MUST return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81) if it accepts the transfer(s).\\n        This function MUST revert if it rejects the transfer(s).\\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\\n        @param operator  The address which initiated the batch transfer (i.e. msg.sender)\\n        @param from      The address which previously owned the token\\n        @param ids       An array containing ids of each token being transferred (order and length must match _values array)\\n        @param values    An array containing amounts of each token being transferred (order and length must match _ids array)\\n        @param data      Additional data with no specified format\\n        @return           `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n    */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x915c81f5684876945b81020f620aa6261a7bf3a1bf0c07f1eada0e88200872de\"},\"contracts_common/src/Interfaces/ERC1271.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\ncontract ERC1271 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided data\\n    * @param data Arbitrary length data signed on the behalf of address(this)\\n    * @param signature Signature byte array associated with _data\\n    *\\n    * MUST return the bytes4 magic value 0x20c13b0b when function passes.\\n    * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\\n    * MUST allow external calls\\n    */\\n    function isValidSignature(bytes memory data, bytes memory signature)\\n        public\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0xc96d98567763b067bb0264c9fed2a0df1e638b82e416c86e223e7e1cf2354514\"},\"contracts_common/src/Interfaces/ERC1271Constants.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\ncontract ERC1271Constants {\\n    bytes4 internal constant ERC1271_MAGICVALUE = 0x20c13b0b;\\n}\\n\",\"keccak256\":\"0xe0fa0515924272c2536cc0e09428c456e0303d968cccbcb3395ea5237743c068\"},\"contracts_common/src/Interfaces/ERC165.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC165\\n * @dev https://eips.ethereum.org/EIPS/eip-165\\n */\\ninterface ERC165 {\\n    /**\\n   * @notice Query if a contract implements interface `interfaceId`\\n   * @param interfaceId The interface identifier, as specified in ERC-165\\n   * @dev Interface identification is specified in ERC-165. This function\\n   * uses less than 30,000 gas.\\n   */\\n    function supportsInterface(bytes4 interfaceId)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0x69a77aa77ec14f7bc3a1c40aff5bbe828548087ba23b2cc9c99ba6e24f2997c5\"},\"contracts_common/src/Interfaces/ERC1654.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\ncontract ERC1654 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided hash\\n    * @param hash 32 bytes hash to be signed\\n    * @param signature Signature byte array associated with hash\\n    * @return 0x1626ba7e if valid else 0x00000000\\n    */\\n    function isValidSignature(bytes32 hash, bytes memory signature)\\n        public\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0xa5a9f130315c41a3578c374651fedc45de45cf66e442442e1c6e3b5fab896db6\"},\"contracts_common/src/Interfaces/ERC1654Constants.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\ncontract ERC1654Constants {\\n    bytes4 internal constant ERC1654_MAGICVALUE = 0x1626ba7e;\\n}\\n\",\"keccak256\":\"0xc89fe81450f551045b148248ec1bb82156b20918e7dcb88b96e41ddcb62108a5\"},\"contracts_common/src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20Basic.sol\\\";\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\n/* interface */\\ncontract ERC20 is ERC20Basic {\\n    function transferFrom(address from, address to, uint256 value)\\n        public\\n        returns (bool);\\n    function approve(address spender, uint256 value) public returns (bool);\\n    function allowance(address owner, address spender)\\n        public\\n        view\\n        returns (uint256);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0xa8cb63790e43bb77235530d0add180a84e9eb20c95173059e7d783c599c199b0\"},\"contracts_common/src/Interfaces/ERC20Basic.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC20Basic DRAFT\\n * @dev Simpler version of ERC20 interface\\n * See https://github.com/ethereum/EIPs/issues/179\\n */\\n/* interface */\\ncontract ERC20Basic {\\n    function totalSupply() public view returns (uint256);\\n    function balanceOf(address who) public view returns (uint256);\\n    function transfer(address to, uint256 value) public returns (bool);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n}\\n\",\"keccak256\":\"0x7d333b4cd97e3fa0a67f3f20d79e6a46d5c81a8f7d506aa24c624ec6e4e913b9\"},\"contracts_common/src/Interfaces/ERC20Events.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/* interface */\\ncontract ERC20Events {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0xee09c10a3f9adc913227efdcd94ce44e05b59b04717f8f868153d356bd03f5d2\"},\"contracts_common/src/Interfaces/ERC721.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC165.sol\\\";\\nimport \\\"./ERC721Events.sol\\\";\\n\\n/**\\n * @title ERC721 Non-Fungible Token Standard basic interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-721\\n */\\n/*interface*/\\ncontract ERC721 is ERC165, ERC721Events {\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n    //   function exists(uint256 tokenId) external view returns (bool exists);\\n\\n    function approve(address to, uint256 tokenId) external;\\n    function getApproved(uint256 tokenId)\\n        external\\n        view\\n        returns (address operator);\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 tokenId)\\n        external;\\n    function safeTransferFrom(address from, address to, uint256 tokenId)\\n        external;\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x5dabbd4bf78518acf2f1f2fd431ad7d16526b0de409aa91010d02869fb3eb302\"},\"contracts_common/src/Interfaces/ERC721Events.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC721 Non-Fungible Token Standard basic interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface ERC721Events {\\n    event Transfer(\\n        address indexed _from,\\n        address indexed _to,\\n        uint256 indexed _tokenId\\n    );\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _approved,\\n        uint256 indexed _tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed _owner,\\n        address indexed _operator,\\n        bool _approved\\n    );\\n}\\n\",\"keccak256\":\"0xdf0051d52413d5e853a9801d5745337e4040949b31568cc17ca50f8853e10567\"},\"contracts_common/src/Interfaces/ERC721TokenReceiver.sol\":{\"content\":\"/* This Source Code Form is subject to the terms of the Mozilla Public\\n * License, v. 2.0. If a copy of the MPL was not distributed with this\\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\\n *\\n * This code has not been reviewed.\\n * Do not use or deploy this code before reviewing it personally first.\\n */\\n// solhint-disable-next-line compiler-fixed\\npragma solidity ^0.5.2;\\n\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x94e7441c07cb2f97b9b5be8ca5a5f76623615963852aa5e20208b8cbcb33c1ce\"},\"contracts_common/src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0x2ad037f43ea9a899526bd911737727d027ce8a2bc1cf615bdf5a1706d400afd6\"},\"contracts_common/src/Libraries/BytesUtil.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nlibrary BytesUtil {\\n    function memcpy(uint256 dest, uint256 src, uint256 len) internal pure {\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        uint256 mask = 256**(32 - len) - 1;\\n        assembly {\\n            let srcpart := and(mload(src), not(mask))\\n            let destpart := and(mload(dest), mask)\\n            mstore(dest, or(destpart, srcpart))\\n        }\\n    }\\n\\n    function pointerToBytes(uint256 src, uint256 len)\\n        internal\\n        pure\\n        returns (bytes memory)\\n    {\\n        bytes memory ret = new bytes(len);\\n        uint256 retptr;\\n        assembly {\\n            retptr := add(ret, 32)\\n        }\\n\\n        memcpy(retptr, src, len);\\n        return ret;\\n    }\\n\\n    function addressToBytes(address a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(\\n                add(m, 20),\\n                xor(0x140000000000000000000000000000000000000000, a)\\n            )\\n            mstore(0x40, add(m, 52))\\n            b := m\\n        }\\n    }\\n\\n    function uint256ToBytes(uint256 a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(add(m, 32), a)\\n            mstore(0x40, add(m, 64))\\n            b := m\\n        }\\n    }\\n\\n    function doFirstParamEqualsAddress(bytes memory data, address _address)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + 32)) {\\n            return false;\\n        }\\n        uint256 value;\\n        assembly {\\n            value := mload(add(data, 36))\\n        }\\n        return value == uint256(_address);\\n    }\\n\\n    function doParamEqualsUInt256(bytes memory data, uint256 i, uint256 value)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + (i + 1) * 32)) {\\n            return false;\\n        }\\n        uint256 offset = 36 + i * 32;\\n        uint256 valuePresent;\\n        assembly {\\n            valuePresent := mload(add(data, offset))\\n        }\\n        return valuePresent == value;\\n    }\\n\\n    function overrideFirst32BytesWithAddress(\\n        bytes memory data,\\n        address _address\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n\\n        bytes memory addressBytes = addressToBytes(_address);\\n        uint256 src;\\n        assembly {\\n            src := add(addressBytes, 32)\\n        }\\n\\n        memcpy(dest, src, 20);\\n        return data;\\n    }\\n\\n    function overrideFirstTwo32BytesWithAddressAndInt(\\n        bytes memory data,\\n        address _address,\\n        uint256 _value\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        uint256 src;\\n\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n        bytes memory bbytes = addressToBytes(_address);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 20);\\n\\n        assembly {\\n            dest := add(data, 68)\\n        } // 48 = 32 (offset) + 4 (func sig) + 32 (next slot)\\n        bbytes = uint256ToBytes(_value);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 32);\\n\\n        return data;\\n    }\\n}\\n\",\"keccak256\":\"0xb5c236938e1f71524127371a015836e83103c5ac1b4ed7b7f22892a8c0429e10\"},\"contracts_common/src/Libraries/ObjectLib32.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./SafeMathWithRequire.sol\\\";\\n\\nlibrary ObjectLib32 {\\n    using SafeMathWithRequire for uint256;\\n    enum Operations {ADD, SUB, REPLACE}\\n    // Constants regarding bin or chunk sizes for balance packing\\n    uint256 constant TYPES_BITS_SIZE = 32; // Max size of each object\\n    uint256 constant TYPES_PER_UINT256 = 256 / TYPES_BITS_SIZE; // Number of types per uint256\\n\\n    //\\n    // Objects and Tokens Functions\\n    //\\n\\n    /**\\n  * @dev Return the bin number and index within that bin where ID is\\n  * @param tokenId Object type\\n  * @return (Bin number, ID's index within that bin)\\n  */\\n    function getTokenBinIndex(uint256 tokenId)\\n        internal\\n        pure\\n        returns (uint256 bin, uint256 index)\\n    {\\n        bin = (tokenId * TYPES_BITS_SIZE) / 256;\\n        index = tokenId % TYPES_PER_UINT256;\\n        return (bin, index);\\n    }\\n\\n    /**\\n  * @dev update the balance of a type provided in binBalances\\n  * @param binBalances Uint256 containing the balances of objects\\n  * @param index Index of the object in the provided bin\\n  * @param amount Value to update the type balance\\n  * @param operation Which operation to conduct :\\n  *     Operations.REPLACE : Replace type balance with amount\\n  *     Operations.ADD     : ADD amount to type balance\\n  *     Operations.SUB     : Substract amount from type balance\\n  */\\n    function updateTokenBalance(\\n        uint256 binBalances,\\n        uint256 index,\\n        uint256 amount,\\n        Operations operation\\n    ) internal pure returns (uint256 newBinBalance) {\\n        uint256 objectBalance = 0;\\n        if (operation == Operations.ADD) {\\n            objectBalance = getValueInBin(binBalances, index);\\n            newBinBalance = writeValueInBin(\\n                binBalances,\\n                index,\\n                objectBalance.add(amount)\\n            );\\n        } else if (operation == Operations.SUB) {\\n            objectBalance = getValueInBin(binBalances, index);\\n            require(objectBalance >= amount, \\\"can't substract more than there is\\\");\\n            newBinBalance = writeValueInBin(\\n                binBalances,\\n                index,\\n                objectBalance.sub(amount)\\n            );\\n        } else if (operation == Operations.REPLACE) {\\n            newBinBalance = writeValueInBin(binBalances, index, amount);\\n        } else {\\n            revert(\\\"Invalid operation\\\"); // Bad operation\\n        }\\n\\n        return newBinBalance;\\n    }\\n    /*\\n  * @dev return value in binValue at position index\\n  * @param binValue uint256 containing the balances of TYPES_PER_UINT256 types\\n  * @param index index at which to retrieve value\\n  * @return Value at given index in bin\\n  */\\n    function getValueInBin(uint256 binValue, uint256 index)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        // Mask to retrieve data for a given binData\\n        uint256 mask = (uint256(1) << TYPES_BITS_SIZE) - 1;\\n\\n        // Shift amount\\n        uint256 rightShift = 256 - TYPES_BITS_SIZE * (index + 1);\\n        return (binValue >> rightShift) & mask;\\n    }\\n\\n    /**\\n  * @dev return the updated binValue after writing amount at index\\n  * @param binValue uint256 containing the balances of TYPES_PER_UINT256 types\\n  * @param index Index at which to retrieve value\\n  * @param amount Value to store at index in bin\\n  * @return Value at given index in bin\\n  */\\n    function writeValueInBin(uint256 binValue, uint256 index, uint256 amount)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        require(\\n            amount < 2**TYPES_BITS_SIZE,\\n            \\\"Amount to write in bin is too large\\\"\\n        );\\n\\n        // Mask to retrieve data for a given binData\\n        uint256 mask = (uint256(1) << TYPES_BITS_SIZE) - 1;\\n\\n        // Shift amount\\n        uint256 leftShift = 256 - TYPES_BITS_SIZE * (index + 1);\\n        return (binValue & ~(mask << leftShift)) | (amount << leftShift);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xde1bb1c4950d4ab69a202352e2d36ce6983b939ea9b5301875b42fe6d6f891c7\"},\"contracts_common/src/Libraries/PriceUtil.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nlibrary PriceUtil {\\n    function calculateCurrentPrice(\\n        uint256 startingPrice,\\n        uint256 endingPrice,\\n        uint256 duration,\\n        uint256 secondsPassed\\n    ) internal pure returns (uint256) {\\n        if (secondsPassed > duration) {\\n            return endingPrice;\\n        }\\n        int256 totalPriceChange = int256(endingPrice) - int256(startingPrice);\\n        int256 currentPriceChange = (totalPriceChange * int256(secondsPassed)) / int256(duration);\\n\\n        return uint256(int256(startingPrice) + currentPriceChange);\\n    }\\n\\n    function calculateFee(uint256 price, uint256 fee10000th)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        // _fee < 10000, so the result will be <= price\\n        return (price * fee10000th) / 10000;\\n    }\\n\\n}\\n\",\"keccak256\":\"0x2fe2f7cf61544b86a1494b708859883630ac5fead75a9843d4a9d654975cb6c1\"},\"contracts_common/src/Libraries/SafeMathWithRequire.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that revert\\n */\\nlibrary SafeMathWithRequire {\\n    /**\\n    * @dev Multiplies two numbers, throws on overflow.\\n    */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        c = a * b;\\n        require(c / a == b, \\\"overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Integer division of two numbers, truncating the quotient.\\n    */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        // uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return a / b;\\n    }\\n\\n    /**\\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\\n    */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"undeflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n    * @dev Adds two numbers, throws on overflow.\\n    */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        c = a + b;\\n        require(c >= a, \\\"overflow\\\");\\n        return c;\\n    }\\n}\\n\",\"keccak256\":\"0x362e750dc8b68acf6b56e0e78c6e8801b5d08031cfc77576e3222e5f42d99313\"},\"contracts_common/src/Libraries/SigUtil.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nlibrary SigUtil {\\n    function recover(bytes32 hash, bytes memory sig)\\n        internal\\n        pure\\n        returns (address recovered)\\n    {\\n        require(sig.length == 65);\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n        require(v == 27 || v == 28);\\n\\n        recovered = ecrecover(hash, v, r, s);\\n        require(recovered != address(0));\\n    }\\n\\n    function recoverWithZeroOnFailure(bytes32 hash, bytes memory sig)\\n        internal\\n        pure\\n        returns (address)\\n    {\\n        if (sig.length != 65) {\\n            return (address(0));\\n        }\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            return (address(0));\\n        } else {\\n            return ecrecover(hash, v, r, s);\\n        }\\n    }\\n\\n    // Builds a prefixed hash to mimic the behavior of eth_sign.\\n    function prefixed(bytes32 hash) internal pure returns (bytes memory) {\\n        return abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash);\\n    }\\n}\\n\",\"keccak256\":\"0xda7729e5b24c3780242ed1923b2a709ab284c18ee533669d6d0fa394ffb0491b\"},\"src/Asset.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport \\\"./Asset/ERC1155ERC721.sol\\\";\\n\\ncontract Asset is ERC1155ERC721 {\\n    constructor(\\n        address metaTransactionContract,\\n        address assetAdmin,\\n        address bouncerAdmin\\n    ) public ERC1155ERC721(metaTransactionContract, assetAdmin, bouncerAdmin) {}\\n}\\n\",\"keccak256\":\"0x6656a1fe2dc3372a9f390693ee72ab3e204dfaf24fbb7f9a17af5d51d1041bcc\"},\"src/Asset/ERC1155ERC721.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport \\\"../../contracts_common/src/Interfaces/ERC1155.sol\\\";\\nimport \\\"../../contracts_common/src/Interfaces/ERC1155TokenReceiver.sol\\\";\\n\\nimport \\\"../../contracts_common/src/Libraries/AddressUtils.sol\\\";\\nimport \\\"../../contracts_common/src/Libraries/ObjectLib32.sol\\\";\\n\\nimport \\\"../../contracts_common/src/Interfaces/ERC721.sol\\\";\\nimport \\\"../../contracts_common/src/Interfaces/ERC721TokenReceiver.sol\\\";\\n\\nimport \\\"../../contracts_common/src/BaseWithStorage/SuperOperators.sol\\\";\\n\\ncontract ERC1155ERC721 is SuperOperators, ERC1155, ERC721 {\\n    using AddressUtils for address;\\n    using ObjectLib32 for ObjectLib32.Operations;\\n    using ObjectLib32 for uint256;\\n\\n    bytes4 private constant ERC1155_IS_RECEIVER = 0x4e2312e0;\\n    bytes4 private constant ERC1155_RECEIVED = 0xf23a6e61;\\n    bytes4 private constant ERC1155_BATCH_RECEIVED = 0xbc197c81;\\n    bytes4 private constant ERC721_RECEIVED = 0x150b7a02;\\n\\n    uint256 private constant CREATOR_OFFSET_MULTIPLIER = uint256(2)**(256 - 160);\\n    uint256 private constant IS_NFT_OFFSET_MULTIPLIER = uint256(2)**(256 - 160 - 1);\\n    uint256 private constant PACK_ID_OFFSET_MULTIPLIER = uint256(2)**(256 - 160 - 1 - 32 - 40);\\n    uint256 private constant PACK_NUM_FT_TYPES_OFFSET_MULTIPLIER = uint256(2)**(256 - 160 - 1 - 32 - 40 - 12);\\n    uint256 private constant NFT_INDEX_OFFSET = 63;\\n\\n    uint256 private constant IS_NFT =            0x0000000000000000000000000000000000000000800000000000000000000000;\\n    uint256 private constant NOT_IS_NFT =        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFF;\\n    uint256 private constant NFT_INDEX =         0x00000000000000000000000000000000000000007FFFFFFF8000000000000000;\\n    uint256 private constant NOT_NFT_INDEX =     0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000007FFFFFFFFFFFFFFF;\\n    uint256 private constant URI_ID =            0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000007FFFFFFFFFFFF800;\\n    uint256 private constant PACK_ID =           0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000007FFFFFFFFF800000;\\n    uint256 private constant PACK_INDEX =        0x00000000000000000000000000000000000000000000000000000000000007FF;\\n    uint256 private constant PACK_NUM_FT_TYPES = 0x00000000000000000000000000000000000000000000000000000000007FF800;\\n\\n    uint256 private constant MAX_SUPPLY = uint256(2)**32 - 1;\\n    uint256 private constant MAX_PACK_SIZE = uint256(2)**11;\\n\\n    event CreatorshipTransfer(\\n        address indexed original,\\n        address indexed from,\\n        address indexed to\\n    );\\n\\n    mapping(address => uint256) private _numNFTPerAddress; // erc721\\n    mapping(uint256 => uint256) private _owners; // erc721\\n    mapping(address => mapping(uint256 => uint256)) private _packedTokenBalance; // erc1155\\n    mapping(address => mapping(address => bool)) private _operatorsForAll; // erc721 and erc1155\\n    mapping(uint256 => address) private _erc721operators; // erc721\\n    mapping(uint256 => bytes32) private _metadataHash; // erc721 and erc1155\\n    mapping(uint256 => bytes) private _rarityPacks; // rarity configuration per packs (2 bits per Asset)\\n    mapping(uint256 => uint32) private _nextCollectionIndex; // extraction\\n\\n    mapping(address => address) private _creatorship; // creatorship transfer\\n\\n    mapping(address => bool) private _bouncers; // the contracts allowed to mint\\n    mapping(address => bool) private _metaTransactionContracts; // native meta-transaction support\\n\\n    address private _bouncerAdmin;\\n\\n    constructor(\\n        address metaTransactionContract,\\n        address admin,\\n        address bouncerAdmin\\n    ) public {\\n        _metaTransactionContracts[metaTransactionContract] = true;\\n        _admin = admin;\\n        _bouncerAdmin = bouncerAdmin;\\n        emit MetaTransactionProcessor(metaTransactionContract, true);\\n    }\\n\\n    event BouncerAdminChanged(address oldBouncerAdmin, address newBouncerAdmin);\\n\\n    /// @notice Returns the current administrator in charge of minting rights.\\n    /// @return the current minting administrator in charge of minting rights.\\n    function getBouncerAdmin() external view returns(address) {\\n        return _bouncerAdmin;\\n    }\\n\\n    /// @notice Change the minting administrator to be `newBouncerAdmin`.\\n    /// @param newBouncerAdmin address of the new minting administrator.\\n    function changeBouncerAdmin(address newBouncerAdmin) external {\\n        require(\\n            msg.sender == _bouncerAdmin,\\n            \\\"only bouncerAdmin can change itself\\\"\\n        );\\n        emit BouncerAdminChanged(_bouncerAdmin, newBouncerAdmin);\\n        _bouncerAdmin = newBouncerAdmin;\\n    }\\n\\n    event Bouncer(address bouncer, bool enabled);\\n\\n    /// @notice Enable or disable the ability of `bouncer` to mint tokens (minting bouncer rights).\\n    /// @param bouncer address that will be given/removed minting bouncer rights.\\n    /// @param enabled set whether the address is enabled or disabled as a minting bouncer.\\n    function setBouncer(address bouncer, bool enabled) external {\\n        require(\\n            msg.sender == _bouncerAdmin,\\n            \\\"only bouncerAdmin can setup bouncers\\\"\\n        );\\n        _bouncers[bouncer] = enabled;\\n        emit Bouncer(bouncer, enabled);\\n    }\\n\\n    /// @notice check whether address `who` is given minting bouncer rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has minting rights.\\n    function isBouncer(address who) external view returns(bool) {\\n        return _bouncers[who];\\n    }\\n\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @notice Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) external {\\n        require(\\n            msg.sender == _admin,\\n            \\\"only admin can setup metaTransactionProcessors\\\"\\n        );\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @notice check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns(bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n\\n    /// @notice Mint a token type for `creator` on slot `packId`.\\n    /// @param creator address of the creator of the token.\\n    /// @param packId unique packId for that token.\\n    /// @param hash hash of an IPFS cidv1 folder that contains the metadata of the token type in the file 0.json.\\n    /// @param supply number of tokens minted for that token type.\\n    /// @param rarity rarity power of the token.\\n    /// @param owner address that will receive the tokens.\\n    /// @param data extra data to accompany the minting call.\\n    /// @return the id of the newly minted token type.\\n    function mint(\\n        address creator,\\n        uint40 packId,\\n        bytes32 hash,\\n        uint256 supply,\\n        uint8 rarity,\\n        address owner,\\n        bytes calldata data\\n    ) external returns (uint256 id) {\\n        require(hash != 0, \\\"hash is zero\\\");\\n        require(_bouncers[msg.sender], \\\"only bouncer allowed to mint\\\");\\n        require(owner != address(0), \\\"destination is zero address\\\");\\n        id = generateTokenId(creator, supply, packId, supply == 1 ? 0 : 1, 0);\\n        _mint(\\n            hash,\\n            supply,\\n            rarity,\\n            msg.sender,\\n            owner,\\n            id,\\n            data,\\n            false\\n        );\\n    }\\n\\n    function generateTokenId(\\n        address creator,\\n        uint256 supply,\\n        uint40 packId,\\n        uint16 numFTs,\\n        uint16 packIndex\\n    ) internal pure returns (uint256) {\\n        require(supply > 0 && supply <= MAX_SUPPLY, \\\"invalid supply\\\");\\n\\n        return\\n            uint256(creator) * CREATOR_OFFSET_MULTIPLIER + // CREATOR\\n            (supply == 1 ? uint256(1) * IS_NFT_OFFSET_MULTIPLIER : 0) + // minted as NFT (1) or FT (0) // IS_NFT\\n            uint256(packId) * PACK_ID_OFFSET_MULTIPLIER + // packId (unique pack) // PACk_ID\\n            numFTs * PACK_NUM_FT_TYPES_OFFSET_MULTIPLIER + // number of fungible token in the pack // PACK_NUM_FT_TYPES\\n            packIndex; // packIndex (position in the pack) // PACK_INDEX\\n    }\\n\\n    function _mint(\\n        bytes32 hash,\\n        uint256 supply,\\n        uint8 rarity,\\n        address operator,\\n        address owner,\\n        uint256 id,\\n        bytes memory data,\\n        bool extraction\\n    ) internal {\\n        uint256 uriId = id & URI_ID;\\n        if (!extraction) {\\n            require(uint256(_metadataHash[uriId]) == 0, \\\"id already used\\\");\\n            _metadataHash[uriId] = hash;\\n            require(rarity < 4, \\\"rarity >= 4\\\");\\n            bytes memory pack = new bytes(1);\\n            pack[0] = bytes1(rarity * 64);\\n            _rarityPacks[uriId] = pack;\\n        }\\n        if (supply == 1) {\\n            // ERC721\\n            _numNFTPerAddress[owner]++;\\n            _owners[id] = uint256(owner);\\n            emit Transfer(address(0), owner, id);\\n        } else {\\n            (uint256 bin, uint256 index) = id.getTokenBinIndex();\\n            _packedTokenBalance[owner][bin] = _packedTokenBalance[owner][bin]\\n                .updateTokenBalance(\\n                index,\\n                supply,\\n                ObjectLib32.Operations.REPLACE\\n            );\\n        }\\n\\n        emit TransferSingle(operator, address(0), owner, id, supply);\\n        require(\\n            _checkERC1155AndCallSafeTransfer(\\n                operator,\\n                address(0),\\n                owner,\\n                id,\\n                supply,\\n                data,\\n                false,\\n                false\\n            ),\\n            \\\"transfer rejected\\\"\\n        );\\n    }\\n\\n    /// @notice Mint multiple token types for `creator` on slot `packId`.\\n    /// @param creator address of the creator of the tokens.\\n    /// @param packId unique packId for the tokens.\\n    /// @param hash hash of an IPFS cidv1 folder that contains the metadata of each token type in the files: 0.json, 1.json, 2.json, etc...\\n    /// @param supplies number of tokens minted for each token type.\\n    /// @param rarityPack rarity power of each token types packed into 2 bits each.\\n    /// @param owner address that will receive the tokens.\\n    /// @param data extra data to accompany the minting call.\\n    /// @return the ids of each newly minted token types.\\n    function mintMultiple(\\n        address creator,\\n        uint40 packId,\\n        bytes32 hash,\\n        uint256[] calldata supplies,\\n        bytes calldata rarityPack,\\n        address owner,\\n        bytes calldata data\\n    ) external returns (uint256[] memory ids) {\\n        require(hash != 0, \\\"hash is zero\\\");\\n        require(_bouncers[msg.sender], \\\"only bouncer allowed to mint\\\");\\n        require(owner != address(0), \\\"destination is zero address\\\");\\n        uint16 numNFTs;\\n        (ids, numNFTs) = allocateIds(\\n            creator,\\n            supplies,\\n            rarityPack,\\n            packId,\\n            hash\\n        );\\n        _mintBatches(supplies, owner, ids, numNFTs);\\n        completeMultiMint(msg.sender, owner, ids, supplies, data);\\n    }\\n\\n    function allocateIds(\\n        address creator,\\n        uint256[] memory supplies,\\n        bytes memory rarityPack,\\n        uint40 packId,\\n        bytes32 hash\\n    ) internal returns (uint256[] memory ids, uint16 numNFTs) {\\n        require(supplies.length > 0, \\\"supplies.length == 0\\\");\\n        require(supplies.length <= MAX_PACK_SIZE, \\\"too big batch\\\");\\n        (ids, numNFTs) = generateTokenIds(creator, supplies, packId);\\n        uint256 uriId = ids[0] & URI_ID;\\n        require(uint256(_metadataHash[uriId]) == 0, \\\"id already used\\\");\\n        _metadataHash[uriId] = hash;\\n        _rarityPacks[uriId] = rarityPack;\\n    }\\n\\n    function generateTokenIds(\\n        address creator,\\n        uint256[] memory supplies,\\n        uint40 packId\\n    ) internal pure returns (uint256[] memory, uint16) {\\n        uint16 numTokenTypes = uint16(supplies.length);\\n        uint256[] memory ids = new uint256[](numTokenTypes);\\n        uint16 numNFTs = 0;\\n        for (uint16 i = 0; i < numTokenTypes; i++) {\\n            if (numNFTs == 0) {\\n                if (supplies[i] == 1) {\\n                    numNFTs = uint16(numTokenTypes - i);\\n                }\\n            } else {\\n                require(supplies[i] == 1, \\\"NFTs need to be put at the end\\\");\\n            }\\n        }\\n        uint16 numFTs = numTokenTypes - numNFTs;\\n        for (uint16 i = 0; i < numTokenTypes; i++) {\\n            ids[i] = generateTokenId(creator, supplies[i], packId, numFTs, i);\\n        }\\n        return (ids, numNFTs);\\n    }\\n\\n    function completeMultiMint(\\n        address operator,\\n        address owner,\\n        uint256[] memory ids,\\n        uint256[] memory supplies,\\n        bytes memory data\\n    ) internal {\\n        emit TransferBatch(operator, address(0), owner, ids, supplies);\\n        require(\\n            _checkERC1155AndCallSafeBatchTransfer(\\n                operator,\\n                address(0),\\n                owner,\\n                ids,\\n                supplies,\\n                data\\n            ),\\n            \\\"transfer rejected\\\"\\n        );\\n    }\\n\\n    function _mintBatches(\\n        uint256[] memory supplies,\\n        address owner,\\n        uint256[] memory ids,\\n        uint16 numNFTs\\n    ) internal {\\n        uint16 offset = 0;\\n        while (offset < supplies.length - numNFTs) {\\n            _mintBatch(offset, supplies, owner, ids);\\n            offset += 8;\\n        }\\n        // deal with NFT last. they do not care of balance packing\\n        if (numNFTs > 0) {\\n            _mintNFTs(\\n                uint16(supplies.length - numNFTs),\\n                numNFTs,\\n                owner,\\n                ids\\n            );\\n        }\\n    }\\n\\n    function _mintNFTs(\\n        uint16 offset,\\n        uint32 numNFTs,\\n        address owner,\\n        uint256[] memory ids\\n    ) internal {\\n        for (uint16 i = 0; i < numNFTs; i++) {\\n            uint256 id = ids[i + offset];\\n            _owners[id] = uint256(owner);\\n            emit Transfer(address(0), owner, id);\\n        }\\n        _numNFTPerAddress[owner] += numNFTs;\\n    }\\n\\n    function _mintBatch(\\n        uint16 offset,\\n        uint256[] memory supplies,\\n        address owner,\\n        uint256[] memory ids\\n    ) internal {\\n        uint256 firstId = ids[offset];\\n        (uint256 bin, uint256 index) = firstId.getTokenBinIndex();\\n        uint256 balances = _packedTokenBalance[owner][bin];\\n        for (uint256 i = 0; i < 8 && offset + i < supplies.length; i++) {\\n            uint256 j = offset + i;\\n            if (supplies[j] > 1) {\\n                balances = balances.updateTokenBalance(\\n                    index + i,\\n                    supplies[j],\\n                    ObjectLib32.Operations.REPLACE\\n                );\\n            } else {\\n                break;\\n            }\\n        }\\n        _packedTokenBalance[owner][bin] = balances;\\n    }\\n\\n    function _transferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 value\\n    ) internal returns (bool metaTx) {\\n        require(to != address(0), \\\"destination is zero address\\\");\\n        require(from != address(0), \\\"from is zero address\\\");\\n        metaTx = _metaTransactionContracts[msg.sender];\\n        bool authorized = from == msg.sender ||\\n            metaTx ||\\n            _superOperators[msg.sender] ||\\n            _operatorsForAll[from][msg.sender];\\n\\n        if (id & IS_NFT > 0) {\\n            require(\\n                authorized || _erc721operators[id] == msg.sender,\\n                \\\"Operator not approved\\\"\\n            );\\n            if(value > 0) {\\n                require(value == 1, \\\"cannot transfer nft if amount not 1\\\");\\n                _numNFTPerAddress[from]--;\\n                _numNFTPerAddress[to]++;\\n                _owners[id] = uint256(to);\\n                if (_erc721operators[id] != address(0)) { // TODO operatorEnabled flag optimization (like in ERC721BaseToken)\\n                    _erc721operators[id] = address(0);\\n                }\\n                emit Transfer(from, to, id);\\n            }\\n        } else {\\n            require(authorized, \\\"Operator not approved\\\");\\n            if(value > 0) {\\n                // if different owners it will fails\\n                (uint256 bin, uint256 index) = id.getTokenBinIndex();\\n                _packedTokenBalance[from][bin] = _packedTokenBalance[from][bin]\\n                    .updateTokenBalance(index, value, ObjectLib32.Operations.SUB);\\n                _packedTokenBalance[to][bin] = _packedTokenBalance[to][bin]\\n                    .updateTokenBalance(index, value, ObjectLib32.Operations.ADD);\\n            }\\n        }\\n\\n        emit TransferSingle(\\n            metaTx ? from : msg.sender,\\n            from,\\n            to,\\n            id,\\n            value\\n        );\\n    }\\n\\n    /// @notice Transfers `value` tokens of type `id` from  `from` to `to`  (with safety call).\\n    /// @param from address from which tokens are transfered.\\n    /// @param to address to which the token will be transfered.\\n    /// @param id the token type transfered.\\n    /// @param value amount of token transfered.\\n    /// @param data aditional data accompanying the transfer.\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external {\\n        if (id & IS_NFT > 0) {\\n            require(_ownerOf(id) == from, \\\"not owner\\\");\\n        }\\n        bool metaTx = _transferFrom(from, to, id, value);\\n        require(\\n            _checkERC1155AndCallSafeTransfer(\\n                metaTx ? from : msg.sender,\\n                from,\\n                to,\\n                id,\\n                value,\\n                data,\\n                false,\\n                false\\n            ),\\n            \\\"erc1155 transfer rejected\\\"\\n        );\\n    }\\n\\n    /// @notice Transfers `values` tokens of type `ids` from  `from` to `to` (with safety call).\\n    /// @dev call data should be optimized to order ids so packedBalance can be used efficiently.\\n    /// @param from address from which tokens are transfered.\\n    /// @param to address to which the token will be transfered.\\n    /// @param ids ids of each token type transfered.\\n    /// @param values amount of each token type transfered.\\n    /// @param data aditional data accompanying the transfer.\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external {\\n        require(\\n            ids.length == values.length,\\n            \\\"Inconsistent array length between args\\\"\\n        );\\n        require(to != address(0), \\\"destination is zero address\\\");\\n        require(from != address(0), \\\"from is zero address\\\");\\n        bool metaTx = _metaTransactionContracts[msg.sender];\\n        bool authorized = from == msg.sender ||\\n            metaTx ||\\n            _superOperators[msg.sender] ||\\n            _operatorsForAll[from][msg.sender]; // solium-disable-line max-len\\n\\n        _batchTransferFrom(from, to, ids, values, authorized);\\n        emit TransferBatch(\\n            metaTx ? from : msg.sender,\\n            from,\\n            to,\\n            ids,\\n            values\\n        );\\n        require(\\n            _checkERC1155AndCallSafeBatchTransfer(\\n                metaTx ? from : msg.sender,\\n                from,\\n                to,\\n                ids,\\n                values,\\n                data\\n            ),\\n            \\\"erc1155 transfer rejected\\\"\\n        );\\n    }\\n\\n    function _batchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory values,\\n        bool authorized\\n    ) internal {\\n        uint256 numItems = ids.length;\\n        uint256 bin;\\n        uint256 index;\\n        uint256 balFrom;\\n        uint256 balTo;\\n\\n        uint256 lastBin;\\n        uint256 numNFTs = 0;\\n        for (uint256 i = 0; i < numItems; i++) {\\n            if (ids[i] & IS_NFT > 0) {\\n                require(\\n                    authorized || _erc721operators[ids[i]] == msg.sender,\\n                    \\\"Operator not approved\\\"\\n                );\\n                if(values[i] > 0) {\\n                    require(values[i] == 1, \\\"cannot transfer nft if amount not 1\\\");\\n                    require(_ownerOf(ids[i]) == from, \\\"not owner\\\");\\n                    numNFTs++;\\n                    _owners[ids[i]] = uint256(to);\\n                    if (_erc721operators[ids[i]] != address(0)) { // TODO operatorEnabled flag optimization (like in ERC721BaseToken)\\n                        _erc721operators[ids[i]] = address(0);\\n                    }\\n                    emit Transfer(from, to, ids[i]);\\n                }\\n            } else {\\n                require(authorized, \\\"Operator not approved\\\");\\n                if(values[i] > 0) {\\n                    (bin, index) = ids[i].getTokenBinIndex();\\n                    if (lastBin == 0) {\\n                        lastBin = bin;\\n                        balFrom = ObjectLib32.updateTokenBalance(\\n                            _packedTokenBalance[from][bin],\\n                            index,\\n                            values[i],\\n                            ObjectLib32.Operations.SUB\\n                        );\\n                        balTo = ObjectLib32.updateTokenBalance(\\n                            _packedTokenBalance[to][bin],\\n                            index,\\n                            values[i],\\n                            ObjectLib32.Operations.ADD\\n                        );\\n                    } else {\\n                        if (bin != lastBin) {\\n                            _packedTokenBalance[from][lastBin] = balFrom;\\n                            _packedTokenBalance[to][lastBin] = balTo;\\n                            balFrom = _packedTokenBalance[from][bin];\\n                            balTo = _packedTokenBalance[to][bin];\\n                            lastBin = bin;\\n                        }\\n\\n                        balFrom = balFrom.updateTokenBalance(\\n                            index,\\n                            values[i],\\n                            ObjectLib32.Operations.SUB\\n                        );\\n                        balTo = balTo.updateTokenBalance(\\n                            index,\\n                            values[i],\\n                            ObjectLib32.Operations.ADD\\n                        );\\n                    }\\n                }\\n            }\\n        }\\n        if (numNFTs > 0) {\\n            _numNFTPerAddress[from] -= numNFTs;\\n            _numNFTPerAddress[to] += numNFTs;\\n        }\\n\\n        if (bin != 0) {\\n            _packedTokenBalance[from][bin] = balFrom;\\n            _packedTokenBalance[to][bin] = balTo;\\n        }\\n    }\\n\\n    /// @notice Get the balance of `owner` for the token type `id`.\\n    /// @param owner The address of the token holder.\\n    /// @param id the token type of which to get the balance of.\\n    /// @return the balance of `owner` for the token type `id`.\\n    function balanceOf(address owner, uint256 id)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        // do not check for existence, balance is zero if never minted\\n        // require(wasEverMinted(id), \\\"token was never minted\\\");\\n        if (id & IS_NFT > 0) {\\n            if (_ownerOf(id) == owner) {\\n                return 1;\\n            } else {\\n                return 0;\\n            }\\n        }\\n        (uint256 bin, uint256 index) = id.getTokenBinIndex();\\n        return _packedTokenBalance[owner][bin].getValueInBin(index);\\n    }\\n\\n    /// @notice Get the balance of `owners` for each token type `ids`.\\n    /// @param owners the addresses of the token holders queried.\\n    /// @param ids ids of each token type to query.\\n    /// @return the balance of each `owners` for each token type `ids`.\\n    function balanceOfBatch(\\n        address[] calldata owners,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory) {\\n        require(\\n            owners.length == ids.length,\\n            \\\"Inconsistent array length between args\\\"\\n        );\\n        uint256[] memory balances = new uint256[](ids.length);\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            balances[i] = balanceOf(owners[i], ids[i]);\\n        }\\n        return balances;\\n    }\\n\\n    /// @notice Get the creator of the token type `id`.\\n    /// @param id the id of the token to get the creator of.\\n    /// @return the creator of the token type `id`.\\n    function creatorOf(uint256 id) external view returns (address) {\\n        require(wasEverMinted(id), \\\"token was never minted\\\");\\n        address originalCreator = address(id / CREATOR_OFFSET_MULTIPLIER);\\n        address newCreator = _creatorship[originalCreator];\\n        if (newCreator != address(0)) {\\n            return newCreator;\\n        }\\n        return originalCreator;\\n    }\\n\\n    /// @notice Transfers creatorship of `original` from `sender` to `to`.\\n    /// @param sender address of current registered creator.\\n    /// @param original address of the original creator whose creation are saved in the ids themselves.\\n    /// @param to address which will be given creatorship for all tokens originally minted by `original`.\\n    function transferCreatorship(\\n        address sender,\\n        address original,\\n        address to\\n    ) external {\\n        require(\\n            msg.sender == sender ||\\n            _metaTransactionContracts[msg.sender] ||\\n            _superOperators[msg.sender],\\n            \\\"require meta approval\\\"\\n        );\\n        require(sender != address(0), \\\"sender is zero address\\\");\\n        require(to != address(0), \\\"destination is zero address\\\");\\n        address current = _creatorship[original];\\n        if (current == address(0)) {\\n            current = original;\\n        }\\n        require(current != to, \\\"current == to\\\");\\n        require(current == sender, \\\"current != sender\\\");\\n        if (to == original) {\\n            _creatorship[original] = address(0);\\n        } else {\\n            _creatorship[original] = to;\\n        }\\n        emit CreatorshipTransfer(original, current, to);\\n    }\\n\\n    /// @notice Enable or disable approval for `operator` to manage all `sender`'s tokens.\\n    /// @dev used for Meta Transaction (from metaTransactionContract).\\n    /// @param sender address which grant approval.\\n    /// @param operator address which will be granted rights to transfer all token owned by `sender`.\\n    /// @param approved whether to approve or revoke.\\n    function setApprovalForAllFor(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) external {\\n        require(\\n            msg.sender == sender ||\\n            _metaTransactionContracts[msg.sender] ||\\n            _superOperators[msg.sender],\\n            \\\"require meta approval\\\"\\n        );\\n        _setApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /// @notice Enable or disable approval for `operator` to manage all of the caller's tokens.\\n    /// @param operator address which will be granted rights to transfer all tokens of the caller.\\n    /// @param approved whether to approve or revoke\\n    function setApprovalForAll(address operator, bool approved) external {\\n        _setApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function _setApprovalForAll(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) internal {\\n        require(sender != address(0), \\\"sender is zero address\\\");\\n        require(sender != operator, \\\"sender = operator\\\");\\n        require(operator != address(0), \\\"operator is zero address\\\");\\n        require(\\n            !_superOperators[operator],\\n            \\\"super operator can't have their approvalForAll changed\\\"\\n        );\\n        _operatorsForAll[sender][operator] = approved;\\n        emit ApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /// @notice Queries the approval status of `operator` for owner `owner`.\\n    /// @param owner the owner of the tokens.\\n    /// @param operator address of authorized operator.\\n    /// @return true if the operator is approved, false if not.\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool isOperator)\\n    {\\n        require(owner != address(0), \\\"owner is zero address\\\");\\n        require(operator != address(0), \\\"operator is zero address\\\");\\n        return _operatorsForAll[owner][operator] || _superOperators[operator];\\n    }\\n\\n    /// @notice Count all NFTs assigned to `owner`.\\n    /// @param owner address for whom to query the balance.\\n    /// @return the number of NFTs owned by `owner`, possibly zero.\\n    function balanceOf(address owner)\\n        external\\n        view\\n        returns (uint256 balance)\\n    {\\n        require(owner != address(0), \\\"owner is zero address\\\");\\n        return _numNFTPerAddress[owner];\\n    }\\n\\n    /// @notice Find the owner of an NFT.\\n    /// @param id the identifier for an NFT.\\n    /// @return the address of the owner of the NFT.\\n    function ownerOf(uint256 id) external view returns (address owner) {\\n        owner = _ownerOf(id);\\n        require(owner != address(0), \\\"NFT does not exist\\\");\\n    }\\n\\n    function _ownerOf(uint256 id) internal view returns (address) {\\n        return address(_owners[id]);\\n    }\\n\\n    /// @notice Change or reaffirm the approved address for an NFT for `sender`.\\n    /// @dev used for Meta Transaction (from metaTransactionContract).\\n    /// @param sender the sender granting control.\\n    /// @param operator the address to approve as NFT controller.\\n    /// @param id the NFT to approve.\\n    function approveFor(address sender, address operator, uint256 id)\\n        external\\n    {\\n        address owner = _ownerOf(id);\\n        require(sender != address(0), \\\"sender is zero address\\\");\\n        require(\\n            msg.sender == sender ||\\n            _metaTransactionContracts[msg.sender] ||\\n            _superOperators[msg.sender] ||\\n            _operatorsForAll[sender][msg.sender],\\n            \\\"require operators\\\"\\n        ); // solium-disable-line max-len\\n        require(owner == sender, \\\"not owner\\\");\\n        _erc721operators[id] = operator;\\n        emit Approval(owner, operator, id);\\n    }\\n\\n    /// @notice Change or reaffirm the approved address for an NFT.\\n    /// @param operator the address to approve as NFT controller.\\n    /// @param id the id of the NFT to approve.\\n    function approve(address operator, uint256 id) external {\\n        address owner = _ownerOf(id);\\n        require(owner != address(0), \\\"NFT does not exist\\\");\\n        require(\\n            owner == msg.sender ||\\n            _superOperators[msg.sender] ||\\n            _operatorsForAll[owner][msg.sender],\\n            \\\"not authorized\\\"\\n        );\\n        _erc721operators[id] = operator;\\n        emit Approval(owner, operator, id);\\n    }\\n\\n    /// @notice Get the approved address for a single NFT.\\n    /// @param id the NFT to find the approved address for.\\n    /// @return the approved address for this NFT, or the zero address if there is none.\\n    function getApproved(uint256 id)\\n        external\\n        view\\n        returns (address operator)\\n    {\\n        require(_ownerOf(id) != address(0), \\\"NFT does not exist\\\");\\n        return _erc721operators[id];\\n    }\\n\\n    /// @notice Transfers ownership of an NFT.\\n    /// @param from the current owner of the NFT.\\n    /// @param to the new owner.\\n    /// @param id the NFT to transfer.\\n    function transferFrom(address from, address to, uint256 id) external {\\n        require(_ownerOf(id) == from, \\\"not owner\\\");\\n        bool metaTx = _transferFrom(from, to, id, 1);\\n        require(\\n            _checkERC1155AndCallSafeTransfer(\\n                metaTx ? from : msg.sender,\\n                from,\\n                to,\\n                id,\\n                1,\\n                \\\"\\\",\\n                true,\\n                false\\n            ),\\n            \\\"erc1155 transfer rejected\\\"\\n        );\\n    }\\n\\n    /// @notice Transfers the ownership of an NFT from one address to another address.\\n    /// @param from the current owner of the NFT.\\n    /// @param to the new owner.\\n    /// @param id the NFT to transfer.\\n    function safeTransferFrom(address from, address to, uint256 id)\\n        external\\n    {\\n        safeTransferFrom(from, to, id, \\\"\\\");\\n    }\\n\\n    /// @notice Transfers the ownership of an NFT from one address to another address.\\n    /// @param from the current owner of the NFT.\\n    /// @param to the new owner.\\n    /// @param id the NFT to transfer.\\n    /// @param data additional data with no specified format, sent in call to `to`.\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) public {\\n        require(_ownerOf(id) == from, \\\"not owner\\\");\\n        bool metaTx = _transferFrom(from, to, id, 1);\\n        require(\\n            _checkERC1155AndCallSafeTransfer(\\n                metaTx ? from : msg.sender,\\n                from,\\n                to,\\n                id,\\n                1,\\n                data,\\n                true,\\n                true\\n            ),\\n            \\\"erc721/erc1155 transfer rejected\\\"\\n        );\\n    }\\n\\n    /// @notice A descriptive name for the collection of tokens in this contract.\\n    /// @return the name of the tokens.\\n    function name() external pure returns (string memory _name) {\\n        return \\\"Sandbox's ASSETs\\\";\\n    }\\n\\n    /// @notice An abbreviated name for the collection of tokens in this contract.\\n    /// @return the symbol of the tokens.\\n    function symbol() external pure returns (string memory _symbol) {\\n        return \\\"ASSET\\\";\\n    }\\n\\n    /// @notice Gives the rarity power of a particular token type.\\n    /// @param id the token type to get the rarity of.\\n    /// @return the rarity power(between 0 and 3).\\n    function rarity(uint256 id) public view returns (uint256) {\\n        require(wasEverMinted(id), \\\"token was never minted\\\");\\n        bytes storage rarityPack = _rarityPacks[id & URI_ID];\\n        uint256 packIndex = id & PACK_INDEX;\\n        if (packIndex / 4 >= rarityPack.length) {\\n            return 0;\\n        } else {\\n            uint8 pack = uint8(rarityPack[packIndex / 4]);\\n            uint8 i = (3 - uint8(packIndex % 4)) * 2;\\n            return (pack / (uint8(2)**i)) % 4;\\n        }\\n    }\\n\\n    /// @notice Gives the collection a specific token belongs to.\\n    /// @param id the token to get the collection of.\\n    /// @return the collection the NFT is part of.\\n    function collectionOf(uint256 id) public view returns (uint256) {\\n        require(_ownerOf(id) != address(0), \\\"NFT does not exist\\\");\\n        uint256 collectionId = id & NOT_NFT_INDEX & NOT_IS_NFT;\\n        require(wasEverMinted(collectionId), \\\"no collection ever minted for that token\\\");\\n        return collectionId;\\n    }\\n\\n    /// @notice Return wether the id is a collection\\n    /// @param id collectionId to check.\\n    /// @return whether the id is a collection.\\n    function isCollection(uint256 id) public view returns (bool) {\\n        uint256 collectionId = id & NOT_NFT_INDEX & NOT_IS_NFT;\\n        return wasEverMinted(collectionId);\\n    }\\n\\n    /// @notice Gives the index at which an NFT was minted in a collection : first of a collection get the zero index.\\n    /// @param id the token to get the index of.\\n    /// @return the index/order at which the token `id` was minted in a collection.\\n    function collectionIndexOf(uint256 id) public view returns (uint256) {\\n        collectionOf(id); // this check if id and collection indeed was ever minted\\n        return uint32((id & NFT_INDEX) >> NFT_INDEX_OFFSET);\\n    }\\n\\n    function toFullURI(bytes32 hash, uint256 id)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        return\\n            string(\\n                abi.encodePacked(\\n                    \\\"ipfs://bafybei\\\",\\n                    hash2base32(hash),\\n                    \\\"/\\\",\\n                    uint2str(id & PACK_INDEX),\\n                    \\\".json\\\"\\n                )\\n            );\\n    }\\n\\n    function wasEverMinted(uint256 id) public view returns(bool) {\\n        if ((id & IS_NFT) > 0) {\\n            return _owners[id] != 0;\\n        } else {\\n            return\\n                ((id & PACK_INDEX) < ((id & PACK_NUM_FT_TYPES) / PACK_NUM_FT_TYPES_OFFSET_MULTIPLIER)) &&\\n                _metadataHash[id & URI_ID] != 0;\\n        }\\n    }\\n\\n    /// @notice check whether a packId/numFT tupple has been used\\n    /// @param creator for which creator\\n    /// @param packId the packId to check\\n    /// @param numFTs number of Fungible Token in that pack (can reuse packId if different)\\n    /// @return whether the pack has already been used\\n    function isPackIdUsed(address creator, uint40 packId, uint16 numFTs) external returns(bool) {\\n        uint256 uriId = uint256(creator) * CREATOR_OFFSET_MULTIPLIER + // CREATOR\\n            uint256(packId) * PACK_ID_OFFSET_MULTIPLIER + // packId (unique pack) // PACk_ID\\n            numFTs * PACK_NUM_FT_TYPES_OFFSET_MULTIPLIER; // number of fungible token in the pack // PACK_NUM_FT_TYPES\\n        return _metadataHash[uriId] != 0;\\n    }\\n\\n    /// @notice A distinct Uniform Resource Identifier (URI) for a given token.\\n    /// @param id token to get the uri of.\\n    /// @return URI string\\n    function uri(uint256 id) public view returns (string memory) {\\n        require(wasEverMinted(id), \\\"token was never minted\\\"); // prevent returning invalid uri\\n        return toFullURI(_metadataHash[id & URI_ID], id);\\n    }\\n\\n    /// @notice A distinct Uniform Resource Identifier (URI) for a given asset.\\n    /// @param id token to get the uri of.\\n    /// @return URI string\\n    function tokenURI(uint256 id) public view returns (string memory) {\\n        require(_ownerOf(id) != address(0), \\\"NFT does not exist\\\");\\n        return toFullURI(_metadataHash[id & URI_ID], id);\\n    }\\n\\n    bytes32 private constant base32Alphabet = 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637;\\n    // solium-disable-next-line security/no-assign-params\\n    function hash2base32(bytes32 hash)\\n        private\\n        pure\\n        returns (string memory _uintAsString)\\n    {\\n        uint256 _i = uint256(hash);\\n        uint256 k = 52;\\n        bytes memory bstr = new bytes(k);\\n        bstr[--k] = base32Alphabet[uint8((_i % 8) << 2)]; // uint8 s = uint8((256 - skip) % 5);  // (_i % (2**s)) << (5-s)\\n        _i /= 8;\\n        while (k > 0) {\\n            bstr[--k] = base32Alphabet[_i % 32];\\n            _i /= 32;\\n        }\\n        return string(bstr);\\n    }\\n\\n    // solium-disable-next-line security/no-assign-params\\n    function uint2str(uint256 _i)\\n        private\\n        pure\\n        returns (string memory _uintAsString)\\n    {\\n        if (_i == 0) {\\n            return \\\"0\\\";\\n        }\\n\\n        uint256 j = _i;\\n        uint256 len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n\\n        bytes memory bstr = new bytes(len);\\n        uint256 k = len - 1;\\n        while (_i != 0) {\\n            bstr[k--] = bytes1(uint8(48 + (_i % 10)));\\n            _i /= 10;\\n        }\\n\\n        return string(bstr);\\n    }\\n\\n    /// @notice Query if a contract implements interface `id`.\\n    /// @param id the interface identifier, as specified in ERC-165.\\n    /// @return `true` if the contract implements `id`.\\n    function supportsInterface(bytes4 id) external view returns (bool) {\\n        return\\n            id == 0x01ffc9a7 || //ERC165\\n            id == 0xd9b67a26 || // ERC1155\\n            id == 0x80ac58cd || // ERC721\\n            id == 0x5b5e139f || // ERC721 metadata\\n            id == 0x0e89341c; // ERC1155 metadata\\n    }\\n\\n    bytes4 constant ERC165ID = 0x01ffc9a7;\\n    function checkIsERC1155Receiver(address _contract)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        bool success;\\n        bool result;\\n        bytes memory call_data = abi.encodeWithSelector(\\n            ERC165ID,\\n            ERC1155_IS_RECEIVER\\n        );\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            let call_ptr := add(0x20, call_data)\\n            let call_size := mload(call_data)\\n            let output := mload(0x40) // Find empty storage location using \\\"free memory pointer\\\"\\n            mstore(output, 0x0)\\n            success := staticcall(\\n                10000,\\n                _contract,\\n                call_ptr,\\n                call_size,\\n                output,\\n                0x20\\n            ) // 32 bytes\\n            result := mload(output)\\n        }\\n        // (10000 / 63) \\\"not enough for supportsInterface(...)\\\" // consume all gas, so caller can potentially know that there was not enough gas\\n        assert(gasleft() > 158);\\n        return success && result;\\n    }\\n\\n    function _checkERC1155AndCallSafeTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 value,\\n        bytes memory data,\\n        bool erc721,\\n        bool erc721Safe\\n    ) internal returns (bool) {\\n        if (!to.isContract()) {\\n            return true;\\n        }\\n        if (erc721) {\\n            if (!checkIsERC1155Receiver(to)) {\\n                if (erc721Safe) {\\n                    return\\n                        _checkERC721AndCallSafeTransfer(\\n                            operator,\\n                            from,\\n                            to,\\n                            id,\\n                            data\\n                        );\\n                } else {\\n                    return true;\\n                }\\n            }\\n        }\\n        return\\n            ERC1155TokenReceiver(to).onERC1155Received(\\n                    operator,\\n                    from,\\n                    id,\\n                    value,\\n                    data\\n            ) == ERC1155_RECEIVED;\\n    }\\n\\n    function _checkERC1155AndCallSafeBatchTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory values,\\n        bytes memory data\\n    ) internal returns (bool) {\\n        if (!to.isContract()) {\\n            return true;\\n        }\\n        bytes4 retval = ERC1155TokenReceiver(to).onERC1155BatchReceived(\\n            operator,\\n            from,\\n            ids,\\n            values,\\n            data\\n        );\\n        return (retval == ERC1155_BATCH_RECEIVED);\\n    }\\n\\n    function _checkERC721AndCallSafeTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) internal returns (bool) {\\n        // following not required as this function is always called as part of ERC1155 checks that include such check already\\n        // if (!to.isContract()) {\\n        //     return true;\\n        // }\\n        return (ERC721TokenReceiver(to).onERC721Received(\\n                operator,\\n                from,\\n                id,\\n                data\\n            ) ==\\n            ERC721_RECEIVED);\\n    }\\n\\n    event Extraction(uint256 indexed fromId, uint256 toId);\\n    event AssetUpdate(uint256 indexed fromId, uint256 toId);\\n\\n    function _burnERC1155(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint32 amount\\n    ) internal {\\n        (uint256 bin, uint256 index) = (id).getTokenBinIndex();\\n        _packedTokenBalance[from][bin] = _packedTokenBalance[from][bin]\\n            .updateTokenBalance(index, amount, ObjectLib32.Operations.SUB);\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n    }\\n\\n    function _burnERC721(address operator, address from, uint256 id)\\n        internal\\n    {\\n        require(from == _ownerOf(id), \\\"not owner\\\");\\n        _owners[id] = 2**160; // equivalent to zero address when casted but ensure we track minted status\\n        _numNFTPerAddress[from]--;\\n        emit Transfer(from, address(0), id);\\n        emit TransferSingle(operator, from, address(0), id, 1);\\n    }\\n\\n    /// @notice Burns `amount` tokens of type `id`.\\n    /// @param id token type which will be burnt.\\n    /// @param amount amount of token to burn.\\n    function burn(uint256 id, uint256 amount) external {\\n        _burn(msg.sender, id, amount);\\n    }\\n\\n    /// @notice Burns `amount` tokens of type `id` from `from`.\\n    /// @param from address whose token is to be burnt.\\n    /// @param id token type which will be burnt.\\n    /// @param amount amount of token to burn.\\n    function burnFrom(address from, uint256 id, uint256 amount) external {\\n        require(from != address(0), \\\"from is zero address\\\");\\n        require(\\n            msg.sender == from ||\\n                _metaTransactionContracts[msg.sender] ||\\n                _superOperators[msg.sender] ||\\n                _operatorsForAll[from][msg.sender],\\n            \\\"require meta approval\\\"\\n        );\\n        _burn(from, id, amount);\\n    }\\n\\n    function _burn(address from, uint256 id, uint256 amount) internal {\\n        if ((id & IS_NFT) > 0) {\\n            require(amount == 1, \\\"can only burn one NFT\\\");\\n            _burnERC721(\\n                _metaTransactionContracts[msg.sender] ? from : msg.sender,\\n                from,\\n                id\\n            );\\n        } else {\\n            require(amount > 0 && amount <= MAX_SUPPLY, \\\"invalid amount\\\");\\n            _burnERC1155(\\n                _metaTransactionContracts[msg.sender] ? from : msg.sender,\\n                from,\\n                id,\\n                uint32(amount)\\n            );\\n        }\\n    }\\n\\n    /// @notice Upgrades an NFT with new metadata and rarity.\\n    /// @param from address which own the NFT to be upgraded.\\n    /// @param id the NFT that will be burnt to be upgraded.\\n    /// @param packId unqiue packId for the token.\\n    /// @param hash hash of an IPFS cidv1 folder that contains the metadata of the new token type in the file 0.json.\\n    /// @param newRarity rarity power of the new NFT.\\n    /// @param to address which will receive the NFT.\\n    /// @param data bytes to be transmitted as part of the minted token.\\n    /// @return the id of the newly minted NFT.\\n    function updateERC721(\\n        address from,\\n        uint256 id,\\n        uint40 packId,\\n        bytes32 hash,\\n        uint8 newRarity,\\n        address to,\\n        bytes calldata data\\n    ) external returns(uint256) {\\n        require(hash != 0, \\\"hash is zero\\\");\\n        require(\\n            _bouncers[msg.sender],\\n            \\\"only bouncer allowed to mint via update\\\"\\n        );\\n        require(to != address(0), \\\"destination is zero address\\\");\\n        require(from != address(0), \\\"from is zero address\\\");\\n\\n        _burnERC721(msg.sender, from, id);\\n\\n        uint256 newId = generateTokenId(from, 1, packId, 0, 0);\\n        _mint(hash, 1, newRarity, msg.sender, to, newId, data, false);\\n        emit AssetUpdate(id, newId);\\n        return newId;\\n    }\\n\\n    /// @notice Extracts an EIP-721 NFT from an EIP-1155 token.\\n    /// @param id the token type to extract from.\\n    /// @param to address which will receive the token.\\n    /// @return the id of the newly minted NFT.\\n    function extractERC721(uint256 id, address to)\\n        external\\n        returns (uint256 newId)\\n    {\\n        return _extractERC721From(msg.sender, msg.sender, id, to);\\n    }\\n\\n    /// @notice Extracts an EIP-721 NFT from an EIP-1155 token.\\n    /// @param sender address which own the token to be extracted.\\n    /// @param id the token type to extract from.\\n    /// @param to address which will receive the token.\\n    /// @return the id of the newly minted NFT.\\n    function extractERC721From(address sender, uint256 id, address to)\\n        external\\n        returns (uint256 newId)\\n    {\\n        bool metaTx = _metaTransactionContracts[msg.sender];\\n        require(\\n            msg.sender == sender ||\\n                metaTx ||\\n                _superOperators[msg.sender] ||\\n                _operatorsForAll[sender][msg.sender],\\n            \\\"require meta approval\\\"\\n        );\\n        return _extractERC721From(metaTx ? sender : msg.sender, sender, id, to);\\n    }\\n\\n    function _extractERC721From(address operator, address sender, uint256 id, address to)\\n        internal\\n        returns (uint256 newId)\\n    {\\n        require(to != address(0), \\\"destination is zero address\\\");\\n        require(id & IS_NFT == 0, \\\"Not an ERC1155 Token\\\");\\n        uint32 tokenCollectionIndex = _nextCollectionIndex[id];\\n        newId = id +\\n            IS_NFT +\\n            (tokenCollectionIndex) *\\n            2**NFT_INDEX_OFFSET;\\n        _nextCollectionIndex[id] = tokenCollectionIndex + 1;\\n        _burnERC1155(operator, sender, id, 1);\\n        _mint(\\n            _metadataHash[id & URI_ID],\\n            1,\\n            0,\\n            operator,\\n            to,\\n            newId,\\n            \\\"\\\",\\n            true\\n        );\\n        emit Extraction(id, newId);\\n    }\\n}\\n\",\"keccak256\":\"0x0c18aca246e6061741c7df3ac6acbc34eab949a0eb4dcc3acf61846797f88083\"},\"src/Auctions/AssetSignedAuction.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport \\\"../../../contracts_common/src/Libraries/SigUtil.sol\\\";\\nimport \\\"../../../contracts_common/src/Libraries/PriceUtil.sol\\\";\\nimport \\\"../Sand.sol\\\";\\nimport \\\"../Asset.sol\\\";\\nimport \\\"../../../contracts_common/src/Interfaces/ERC20.sol\\\";\\nimport \\\"../TheSandbox712.sol\\\";\\nimport \\\"../../../contracts_common/src/BaseWithStorage/MetaTransactionReceiver.sol\\\";\\n\\nimport \\\"../../../contracts_common/src/Interfaces/ERC1271.sol\\\";\\nimport \\\"../../../contracts_common/src/Interfaces/ERC1271Constants.sol\\\";\\nimport \\\"../../../contracts_common/src/Interfaces/ERC1654.sol\\\";\\nimport \\\"../../../contracts_common/src/Interfaces/ERC1654Constants.sol\\\";\\n\\ncontract AssetSignedAuction is ERC1654Constants, ERC1271Constants, TheSandbox712, MetaTransactionReceiver {\\n    enum SignatureType { DIRECT, EIP1654, EIP1271 }\\n\\n    bytes32 constant AUCTION_TYPEHASH = keccak256(\\n        \\\"Auction(address from,address token,uint256 offerId,uint256 startingPrice,uint256 endingPrice,uint256 startedAt,uint256 duration,uint256 packs,bytes ids,bytes amounts)\\\"\\n    );\\n\\n    event OfferClaimed(\\n        address indexed seller,\\n        address indexed buyer,\\n        uint256 indexed offerId,\\n        uint256 amount,\\n        uint256 pricePaid,\\n        uint256 feePaid\\n    );\\n    event OfferCancelled(address indexed seller, uint256 indexed offerId);\\n\\n    uint256 constant MAX_UINT256 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    // Stack too deep, grouping parameters\\n    // AuctionData:\\n    uint256 constant AuctionData_OfferId = 0;\\n    uint256 constant AuctionData_StartingPrice = 1;\\n    uint256 constant AuctionData_EndingPrice = 2;\\n    uint256 constant AuctionData_StartedAt = 3;\\n    uint256 constant AuctionData_Duration = 4;\\n    uint256 constant AuctionData_Packs = 5;\\n\\n    mapping(address => mapping(uint256 => uint256)) claimed;\\n\\n    Asset _asset;\\n    uint256 _fee10000th = 0;\\n    address payable _feeCollector;\\n\\n    event FeeSetup(address feeCollector, uint256 fee10000th);\\n\\n    constructor(Asset asset, address admin, address initialMetaTx, address payable feeCollector, uint256 fee10000th) public {\\n        _asset = asset;\\n        _feeCollector = feeCollector;\\n        _fee10000th = fee10000th;\\n        emit FeeSetup(feeCollector, fee10000th);\\n        _admin = admin;\\n        _setMetaTransactionProcessor(initialMetaTx, true);\\n        init712();\\n    }\\n\\n    /// @notice set fee parameters\\n    /// @param feeCollector address receiving the fee\\n    /// @param fee10000th fee in 10,000th\\n    function setFee(address payable feeCollector, uint256 fee10000th) external {\\n        require(msg.sender == _admin, \\\"only admin can change fee\\\");\\n        _feeCollector = feeCollector;\\n        _fee10000th = fee10000th;\\n        emit FeeSetup(feeCollector, fee10000th);\\n    }\\n\\n    function _verifyParameters(\\n        address buyer,\\n        address payable seller,\\n        address token,\\n        uint256 buyAmount,\\n        uint256[] memory auctionData,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) internal {\\n        require(buyer == msg.sender || (token != address(0) && _metaTransactionContracts[msg.sender]), \\\"not authorized\\\");\\n        uint256 amountAlreadyClaimed = claimed[seller][auctionData[AuctionData_OfferId]];\\n        require(amountAlreadyClaimed != MAX_UINT256, \\\"Auction cancelled\\\");\\n\\n        uint256 total = amountAlreadyClaimed + buyAmount;\\n        require(total >= amountAlreadyClaimed, \\\"overflow\\\");\\n        require(total <= auctionData[AuctionData_Packs], \\\"Buy amount exceeds sell amount\\\");\\n\\n        require(\\n            auctionData[AuctionData_StartedAt] <= block.timestamp,\\n            \\\"Auction didn't start yet\\\"\\n        );\\n        require(\\n            auctionData[AuctionData_StartedAt] + auctionData[AuctionData_Duration] > block.timestamp,\\n            \\\"Auction finished\\\"\\n        );\\n\\n    }\\n\\n    /// @notice claim offer using EIP712\\n    /// @param buyer address paying for the offer\\n    /// @param seller address of the seller\\n    /// @param token token used for payment\\n    /// @param purchase buyAmount, maxTokenAmount\\n    /// @param auctionData offerId, startingPrice, endingPrice, startedAt, duration, packs\\n    /// @param ids ids of the Assets being sold\\n    /// @param amounts amounts of Assets per pack\\n    /// @param signature signature of seller\\n    function claimSellerOffer(\\n        address buyer,\\n        address payable seller,\\n        address token,\\n        uint256[] calldata purchase, // buyAmount, maxTokenAmount\\n        uint256[] calldata auctionData,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata signature\\n    ) external payable {\\n        _verifyParameters(\\n            buyer,\\n            seller,\\n            token,\\n            purchase[0],\\n            auctionData,\\n            ids,\\n            amounts\\n        );\\n        _ensureCorrectSigner(seller, token, auctionData, ids, amounts, signature, SignatureType.DIRECT, true);\\n        _executeDeal(\\n            token,\\n            purchase,\\n            buyer,\\n            seller,\\n            auctionData,\\n            ids,\\n            amounts\\n        );\\n    }\\n\\n    /// @notice claim offer using EIP712 and EIP1271 signature verification scheme\\n    /// @param buyer address paying for the offer\\n    /// @param seller address of the seller\\n    /// @param token token used for payment\\n    /// @param purchase buyAmount, maxTokenAmount\\n    /// @param auctionData offerId, startingPrice, endingPrice, startedAt, duration, packs\\n    /// @param ids ids of the Assets being sold\\n    /// @param amounts amounts of Assets per pack\\n    /// @param signature signature of seller\\n    function claimSellerOfferViaEIP1271(\\n        address buyer,\\n        address payable seller,\\n        address token,\\n        uint256[] calldata purchase, // buyAmount, maxTokenAmount\\n        uint256[] calldata auctionData,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata signature\\n    ) external payable {\\n        _verifyParameters(\\n            buyer,\\n            seller,\\n            token,\\n            purchase[0],\\n            auctionData,\\n            ids,\\n            amounts\\n        );\\n        _ensureCorrectSigner(seller, token, auctionData, ids, amounts, signature, SignatureType.EIP1271, true);\\n        _executeDeal(\\n            token,\\n            purchase,\\n            buyer,\\n            seller,\\n            auctionData,\\n            ids,\\n            amounts\\n        );\\n    }\\n\\n    /// @notice claim offer using EIP712 and EIP1654 signature verification scheme\\n    /// @param buyer address paying for the offer\\n    /// @param seller address of the seller\\n    /// @param token token used for payment\\n    /// @param purchase buyAmount, maxTokenAmount\\n    /// @param auctionData offerId, startingPrice, endingPrice, startedAt, duration, packs\\n    /// @param ids ids of the Assets being sold\\n    /// @param amounts amounts of Assets per pack\\n    /// @param signature signature of seller\\n    function claimSellerOfferViaEIP1654(\\n        address buyer,\\n        address payable seller,\\n        address token,\\n        uint256[] calldata purchase, // buyAmount, maxTokenAmount\\n        uint256[] calldata auctionData,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata signature\\n    ) external payable {\\n        _verifyParameters(\\n            buyer,\\n            seller,\\n            token,\\n            purchase[0],\\n            auctionData,\\n            ids,\\n            amounts\\n        );\\n        _ensureCorrectSigner(seller, token, auctionData, ids, amounts, signature, SignatureType.EIP1654, true);\\n        _executeDeal(\\n            token,\\n            purchase,\\n            buyer,\\n            seller,\\n            auctionData,\\n            ids,\\n            amounts\\n        );\\n    }\\n\\n    /// @notice claim offer using Basic Signature\\n    /// @param buyer address paying for the offer\\n    /// @param seller address of the seller\\n    /// @param token token used for payment\\n    /// @param purchase buyAmount, maxTokenAmount\\n    /// @param auctionData offerId, startingPrice, endingPrice, startedAt, duration, packs\\n    /// @param ids ids of the Assets being sold\\n    /// @param amounts amounts of Assets per pack\\n    /// @param signature signature of seller\\n    function claimSellerOfferUsingBasicSig(\\n        address buyer,\\n        address payable seller,\\n        address token,\\n        uint256[] calldata purchase, // buyAmount, maxTokenAmount\\n        uint256[] calldata auctionData,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata signature\\n    ) external payable {\\n        _verifyParameters(\\n            buyer,\\n            seller,\\n            token,\\n            purchase[0],\\n            auctionData,\\n            ids,\\n            amounts\\n        );\\n        _ensureCorrectSigner(seller, token, auctionData, ids, amounts, signature, SignatureType.DIRECT, false);\\n        _executeDeal(\\n            token,\\n            purchase,\\n            buyer,\\n            seller,\\n            auctionData,\\n            ids,\\n            amounts\\n        );\\n    }\\n\\n    /// @notice claim offer using Basic Signature and EIP1271 signature verification scheme\\n    /// @param buyer address paying for the offer\\n    /// @param seller address of the seller\\n    /// @param token token used for payment\\n    /// @param purchase buyAmount, maxTokenAmount\\n    /// @param auctionData offerId, startingPrice, endingPrice, startedAt, duration, packs\\n    /// @param ids ids of the Assets being sold\\n    /// @param amounts amounts of Assets per pack\\n    /// @param signature signature of seller\\n    function claimSellerOfferUsingBasicSigViaEIP1271(\\n        address buyer,\\n        address payable seller,\\n        address token,\\n        uint256[] calldata purchase, // buyAmount, maxTokenAmount\\n        uint256[] calldata auctionData,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata signature\\n    ) external payable {\\n        _verifyParameters(\\n            buyer,\\n            seller,\\n            token,\\n            purchase[0],\\n            auctionData,\\n            ids,\\n            amounts\\n        );\\n        _ensureCorrectSigner(seller, token, auctionData, ids, amounts, signature, SignatureType.EIP1271, false);\\n        _executeDeal(\\n            token,\\n            purchase,\\n            buyer,\\n            seller,\\n            auctionData,\\n            ids,\\n            amounts\\n        );\\n    }\\n\\n    /// @notice claim offer using Basic Signature and EIP1654 signature verification scheme\\n    /// @param buyer address paying for the offer\\n    /// @param seller address of the seller\\n    /// @param token token used for payment\\n    /// @param purchase buyAmount, maxTokenAmount\\n    /// @param auctionData offerId, startingPrice, endingPrice, startedAt, duration, packs\\n    /// @param ids ids of the Assets being sold\\n    /// @param amounts amounts of Assets per pack\\n    /// @param signature signature of seller\\n    function claimSellerOfferUsingBasicSigViaEIP1654(\\n        address buyer,\\n        address payable seller,\\n        address token,\\n        uint256[] calldata purchase, // buyAmount, maxTokenAmount\\n        uint256[] calldata auctionData,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata signature\\n    ) external payable {\\n        _verifyParameters(\\n            buyer,\\n            seller,\\n            token,\\n            purchase[0],\\n            auctionData,\\n            ids,\\n            amounts\\n        );\\n        _ensureCorrectSigner(seller, token, auctionData, ids, amounts, signature, SignatureType.EIP1654, false);\\n        _executeDeal(\\n            token,\\n            purchase,\\n            buyer,\\n            seller,\\n            auctionData,\\n            ids,\\n            amounts\\n        );\\n    }\\n\\n    function _executeDeal(\\n        address token,\\n        uint256[] memory purchase,\\n        address buyer,\\n        address payable seller,\\n        uint256[] memory auctionData,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) internal {\\n        uint256 offer = PriceUtil.calculateCurrentPrice(\\n                auctionData[AuctionData_StartingPrice],\\n                auctionData[AuctionData_EndingPrice],\\n                auctionData[AuctionData_Duration],\\n                block.timestamp - auctionData[AuctionData_StartedAt]\\n            ) * purchase[0];\\n        claimed[seller][auctionData[AuctionData_OfferId]] += purchase[0];\\n\\n        uint256 fee = 0;\\n        if(_fee10000th > 0) {\\n            fee = PriceUtil.calculateFee(offer, _fee10000th);\\n        }\\n\\n        require(offer+fee <= purchase[1], \\\"offer exceeds max amount to spend\\\");\\n\\n        if (token != address(0)) {\\n            require(ERC20(token).transferFrom(buyer, seller, offer), \\\"failed to transfer token price\\\");\\n            if(fee > 0) {\\n                require(ERC20(token).transferFrom(buyer, _feeCollector, fee), \\\"failed to collect fee\\\");\\n            }\\n        } else {\\n            require(msg.value >= offer + fee, \\\"ETH < offer+fee\\\");\\n            if(msg.value > offer+fee) {\\n                msg.sender.transfer(msg.value - (offer+fee));\\n            }\\n            seller.transfer(offer);\\n            if(fee > 0) {\\n                _feeCollector.transfer(fee);\\n            }\\n        }\\n\\n        uint256[] memory packAmounts = new uint256[](amounts.length);\\n        for (uint256 i = 0; i < packAmounts.length; i++) {\\n            packAmounts[i] = amounts[i] * purchase[0];\\n        }\\n        _asset.safeBatchTransferFrom(seller, buyer, ids, packAmounts, \\\"\\\");\\n        emit OfferClaimed(\\n            seller,\\n            buyer,\\n            auctionData[AuctionData_OfferId],\\n            purchase[0],\\n            offer,\\n            fee\\n        );\\n    }\\n\\n    /// @notice cancel a offer previously signed, new offer need to use a id not used yet\\n    /// @param offerId offer to cancel\\n    function cancelSellerOffer(uint256 offerId) external {\\n        claimed[msg.sender][offerId] = MAX_UINT256;\\n        emit OfferCancelled(msg.sender, offerId);\\n    }\\n\\n    function _ensureCorrectSigner(\\n        address from,\\n        address token,\\n        uint256[] memory auctionData,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory signature,\\n        SignatureType signatureType,\\n        bool eip712\\n    ) internal view returns (address) {\\n        bytes memory dataToHash;\\n\\n        if(eip712) {\\n            dataToHash = abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                domainSeparator(),\\n                _hashAuction(from, token, auctionData, ids, amounts)\\n            );\\n        } else {\\n            dataToHash = _encodeBasicSignatureHash(from, token, auctionData, ids, amounts);\\n        }\\n\\n        if (signatureType == SignatureType.EIP1271) {\\n            require(\\n                ERC1271(from).isValidSignature(dataToHash, signature) == ERC1271_MAGICVALUE,\\n                \\\"invalid 1271 signature\\\"\\n            );\\n        } else if(signatureType == SignatureType.EIP1654){\\n            require(\\n                ERC1654(from).isValidSignature(keccak256(dataToHash), signature) == ERC1654_MAGICVALUE,\\n                \\\"invalid 1654 signature\\\"\\n            );\\n        } else {\\n            address signer = SigUtil.recover(keccak256(dataToHash), signature);\\n            require(signer == from, \\\"signer != from\\\");\\n        }\\n    }\\n\\n    function _encodeBasicSignatureHash(\\n        address from,\\n        address token,\\n        uint256[] memory auctionData,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) internal view returns (bytes memory) {\\n        return SigUtil.prefixed(keccak256(abi.encodePacked(\\n                address(this),\\n                AUCTION_TYPEHASH,\\n                from,\\n                token,\\n                auctionData[AuctionData_OfferId],\\n                auctionData[AuctionData_StartingPrice],\\n                auctionData[AuctionData_EndingPrice],\\n                auctionData[AuctionData_StartedAt],\\n                auctionData[AuctionData_Duration],\\n                auctionData[AuctionData_Packs],\\n                keccak256(abi.encodePacked(ids)),\\n                keccak256(abi.encodePacked(amounts))\\n            )));\\n    }\\n\\n    function _hashAuction(\\n        address from,\\n        address token,\\n        uint256[] memory auctionData,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) internal pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    AUCTION_TYPEHASH,\\n                    from,\\n                    token,\\n                    auctionData[AuctionData_OfferId],\\n                    auctionData[AuctionData_StartingPrice],\\n                    auctionData[AuctionData_EndingPrice],\\n                    auctionData[AuctionData_StartedAt],\\n                    auctionData[AuctionData_Duration],\\n                    auctionData[AuctionData_Packs],\\n                    keccak256(abi.encodePacked(ids)),\\n                    keccak256(abi.encodePacked(amounts))\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xf9a043420d97e9a31038bc5fca8b9a5b43626d7434338778fa95572152b981e2\"},\"src/Sand.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport \\\"./Sand/erc20/ERC20ExecuteExtension.sol\\\";\\nimport \\\"./Sand/erc20/ERC20BaseToken.sol\\\";\\nimport \\\"./Sand/erc20/ERC20BasicApproveExtension.sol\\\";\\n\\ncontract Sand is ERC20ExecuteExtension, ERC20BasicApproveExtension, ERC20BaseToken {\\n\\n    constructor(address sandAdmin, address executionAdmin, address beneficiary) public {\\n        _admin = sandAdmin;\\n        _executionAdmin = executionAdmin;\\n        _mint(beneficiary, 3000000000000000000000000000);\\n    }\\n\\n    /// @notice A descriptive name for the tokens\\n    /// @return name of the tokens\\n    function name() public view returns (string memory) {\\n        return \\\"SAND\\\";\\n    }\\n\\n    /// @notice An abbreviated name for the tokens\\n    /// @return symbol of the tokens\\n    function symbol() public view returns (string memory) {\\n        return \\\"SAND\\\";\\n    }\\n\\n}\\n\",\"keccak256\":\"0xe05c8232fddc05f34648fa1db29cbfff2d163357e613425a925d80dbefff75eb\"},\"src/Sand/erc20/ERC20BaseToken.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport \\\"../../../contracts_common/src/Interfaces/ERC20Events.sol\\\";\\nimport \\\"../../../contracts_common/src/BaseWithStorage/SuperOperators.sol\\\";\\n\\ncontract ERC20BaseToken is SuperOperators, ERC20Events {\\n\\n    uint256 internal _totalSupply;\\n    mapping(address => uint256) internal _balances;\\n    mapping(address => mapping(address => uint256)) internal _allowances;\\n\\n    /// @notice Gets the total number of tokens in existence.\\n    /// @return the total number of tokens in existence.\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /// @notice Gets the balance of `owner`.\\n    /// @param owner The address to query the balance of.\\n    /// @return The amount owned by `owner`.\\n    function balanceOf(address owner) public view returns (uint256) {\\n        return _balances[owner];\\n    }\\n\\n    /// @notice gets allowance of `spender` for `owner`'s tokens.\\n    /// @param owner address whose token is allowed.\\n    /// @param spender address allowed to transfer.\\n    /// @return the amount of token `spender` is allowed to transfer on behalf of `owner`.\\n    function allowance(address owner, address spender)\\n        public\\n        view\\n        returns (uint256 remaining)\\n    {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /// @notice returns the number of decimals for that token.\\n    /// @return the number of decimals.\\n    function decimals() public view returns (uint8) {\\n        return uint8(18);\\n    }\\n\\n    /// @notice Transfer `amount` tokens to `to`.\\n    /// @param to the recipient address of the tokens transfered.\\n    /// @param amount the number of tokens transfered.\\n    /// @return true if success.\\n    function transfer(address to, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        _transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n\\n    /// @notice Transfer `amount` tokens from `from` to `to`.\\n    /// @param from whose token it is transferring from.\\n    /// @param to the recipient address of the tokens transfered.\\n    /// @param amount the number of tokens transfered.\\n    /// @return true if success.\\n    function transferFrom(address from, address to, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        if (msg.sender != from && !_superOperators[msg.sender]) {\\n            uint256 currentAllowance = _allowances[from][msg.sender];\\n            if (currentAllowance != (2**256) - 1) {\\n                // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n                require(currentAllowance >= amount, \\\"Not enough funds allowed\\\");\\n                _allowances[from][msg.sender] = currentAllowance - amount;\\n            }\\n        }\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /// @notice burn `amount` tokens.\\n    /// @param amount the number of tokens to burn.\\n    /// @return true if success.\\n    function burn(uint256 amount) external returns (bool) {\\n        _burn(msg.sender, amount);\\n        return true;\\n    }\\n\\n    /// @notice burn `amount` tokens from `owner`.\\n    /// @param owner address whose token is to burn.\\n    /// @param amount the number of token to burn.\\n    /// @return true if success.\\n    function burnFor(address owner, uint256 amount) external returns (bool) {\\n        _burn(owner, amount);\\n        return true;\\n    }\\n\\n    /// @notice approve `spender` to transfer `amount` tokens.\\n    /// @param spender address to be given rights to transfer.\\n    /// @param amount the number of tokens allowed.\\n    /// @return true if success.\\n    function approve(address spender, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        _approveFor(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /// @notice approve `spender` to transfer `amount` tokens from `owner`.\\n    /// @param owner address whose token is allowed.\\n    /// @param spender  address to be given rights to transfer.\\n    /// @param amount the number of tokens allowed.\\n    /// @return true if success.\\n    function approveFor(address owner, address spender, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        require(\\n            msg.sender == owner || _superOperators[msg.sender],\\n            \\\"msg.sender != owner && !superOperator\\\"\\n        );\\n        _approveFor(owner, spender, amount);\\n        return true;\\n    }\\n\\n    function addAllowanceIfNeeded(address owner, address spender, uint256 amountNeeded)\\n        public\\n        returns (bool success)\\n    {\\n        require(\\n            msg.sender == owner || _superOperators[msg.sender],\\n            \\\"msg.sender != owner && !superOperator\\\"\\n        );\\n        _addAllowanceIfNeeded(owner, spender, amountNeeded);\\n        return true;\\n    }\\n\\n    function _addAllowanceIfNeeded(address owner, address spender, uint256 amountNeeded)\\n        internal\\n    {\\n        if(amountNeeded > 0 && !isSuperOperator(spender)) {\\n            uint256 currentAllowance = _allowances[owner][spender];\\n            if(currentAllowance < amountNeeded) {\\n                _approveFor(owner, spender, amountNeeded);\\n            }\\n        }\\n    }\\n\\n    function _approveFor(address owner, address spender, uint256 amount)\\n        internal\\n    {\\n        require(\\n            owner != address(0) && spender != address(0),\\n            \\\"Cannot approve with 0x0\\\"\\n        );\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _transfer(address from, address to, uint256 amount) internal {\\n        require(to != address(0), \\\"Cannot send to 0x0\\\");\\n        uint256 currentBalance = _balances[from];\\n        require(currentBalance >= amount, \\\"not enough fund\\\");\\n        _balances[from] = currentBalance - amount;\\n        _balances[to] += amount;\\n        emit Transfer(from, to, amount);\\n    }\\n\\n    function _mint(address to, uint256 amount) internal {\\n        require(to != address(0), \\\"Cannot mint to 0x0\\\");\\n        require(amount > 0, \\\"cannot mint 0 tokens\\\");\\n        uint256 currentTotalSupply = _totalSupply;\\n        uint256 newTotalSupply = currentTotalSupply + amount;\\n        require(newTotalSupply > currentTotalSupply, \\\"overflow\\\");\\n        _totalSupply = newTotalSupply;\\n        _balances[to] += amount;\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal {\\n        require(amount > 0, \\\"cannot burn 0 tokens\\\");\\n        if (msg.sender != from && !_superOperators[msg.sender]) {\\n            uint256 currentAllowance = _allowances[from][msg.sender];\\n            require(\\n                currentAllowance >= amount,\\n                \\\"Not enough funds allowed\\\"\\n            );\\n            if (currentAllowance != (2**256) - 1) {\\n                // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n                _allowances[from][msg.sender] = currentAllowance - amount;\\n            }\\n        }\\n\\n        uint256 currentBalance = _balances[from];\\n        require(currentBalance >= amount, \\\"Not enough funds\\\");\\n        _balances[from] = currentBalance - amount;\\n        _totalSupply -= amount;\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xc70b1452852cbe8f437ba3fdcff911ed3fd7820b0d853e5fe147a90989cc1085\"},\"src/Sand/erc20/ERC20BasicApproveExtension.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport \\\"../../../contracts_common/src/Libraries/BytesUtil.sol\\\";\\n\\ncontract ERC20BasicApproveExtension {\\n\\n    /// @notice approve `target` to spend `amount` and call it with data.\\n    /// @param target address to be given rights to transfer and destination of the call.\\n    /// @param amount the number of tokens allowed.\\n    /// @param data bytes for the call.\\n    /// @return data of the call.\\n    function approveAndCall(\\n        address target,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external payable returns (bytes memory) {\\n        require(\\n            BytesUtil.doFirstParamEqualsAddress(data, msg.sender),\\n            \\\"first param != sender\\\"\\n        );\\n\\n        _approveFor(msg.sender, target, amount);\\n\\n        // solium-disable-next-line security/no-call-value\\n        (bool success, bytes memory returnData) = target.call.value(msg.value)(data);\\n        require(success, string(returnData));\\n        return returnData;\\n    }\\n\\n    /// @notice temporarly approve `target` to spend `amount` and call it with data. Previous approvals remains unchanged.\\n    /// @param target destination of the call, allowed to spend the amount specified\\n    /// @param amount the number of tokens allowed to spend.\\n    /// @param data bytes for the call.\\n    /// @return data of the call.\\n    function paidCall(\\n        address target,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external payable returns (bytes memory) {\\n        require(\\n            BytesUtil.doFirstParamEqualsAddress(data, msg.sender),\\n            \\\"first param != sender\\\"\\n        );\\n\\n        if (amount > 0) {\\n            _addAllowanceIfNeeded(msg.sender, target, amount);\\n        }\\n\\n        // solium-disable-next-line security/no-call-value\\n        (bool success, bytes memory returnData) = target.call.value(msg.value)(data);\\n        require(success, string(returnData));\\n\\n        return returnData;\\n    }\\n\\n    function _approveFor(address owner, address target, uint256 amount) internal;\\n    function _addAllowanceIfNeeded(address owner, address spender, uint256 amountNeeded) internal;\\n}\\n\",\"keccak256\":\"0xbd8c882843acf82adb849222068490302925e31ac66305b75f1663a719c7fc37\"},\"src/Sand/erc20/ERC20ExecuteExtension.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\n\\ncontract ERC20ExecuteExtension {\\n\\n    /// @dev _executionAdmin != _admin so that this super power can be disabled independently\\n    address internal _executionAdmin;\\n\\n    event ExecutionAdminAdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @notice give the address responsible for adding execution rights.\\n    /// @return address of the execution administrator.\\n    function getExecutionAdmin() external view returns (address) {\\n        return _executionAdmin;\\n    }\\n\\n    /// @notice change the execution adminstrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeExecutionAdmin(address newAdmin) external {\\n        require(msg.sender == _executionAdmin, \\\"only executionAdmin can change executionAdmin\\\");\\n        emit ExecutionAdminAdminChanged(_executionAdmin, newAdmin);\\n        _executionAdmin = newAdmin;\\n    }\\n\\n    mapping(address => bool) internal _executionOperators;\\n    event ExecutionOperator(address executionOperator, bool enabled);\\n\\n    /// @notice set `executionOperator` as executionOperator: `enabled`.\\n    /// @param executionOperator address that will be given/removed executionOperator right.\\n    /// @param enabled set whether the executionOperator is enabled or disabled.\\n    function setExecutionOperator(address executionOperator, bool enabled) external {\\n        require(\\n            msg.sender == _executionAdmin,\\n            \\\"only execution admin is allowed to add execution operators\\\"\\n        );\\n        _executionOperators[executionOperator] = enabled;\\n        emit ExecutionOperator(executionOperator, enabled);\\n    }\\n\\n    /// @notice check whether address `who` is given executionOperator rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has executionOperator rights.\\n    function isExecutionOperator(address who) public view returns (bool) {\\n        return _executionOperators[who];\\n    }\\n\\n    /// @notice execute on behalf of the contract.\\n    /// @param to destination address fo the call.\\n    /// @param gasLimit exact amount of gas to be passed to the call.\\n    /// @param data the bytes sent to the destination address.\\n    /// @return success whether the execution was successful.\\n    /// @return returnData data resulting from the execution.\\n    function executeWithSpecificGas(address to, uint256 gasLimit, bytes calldata data) external returns (bool success, bytes memory returnData) {\\n        require(_executionOperators[msg.sender], \\\"only execution operators allowed to execute on SAND behalf\\\");\\n        (success, returnData) = to.call.gas(gasLimit)(data);\\n        assert(gasleft() > gasLimit / 63); // not enough gas provided, assert to throw all gas // TODO use EIP-1930\\n    }\\n\\n    /// @notice approve a specific amount of token for `from` and execute on behalf of the contract.\\n    /// @param from address of which token will be transfered.\\n    /// @param to destination address fo the call.\\n    /// @param amount number of tokens allowed that can be transfer by the code at `to`.\\n    /// @param gasLimit exact amount of gas to be passed to the call.\\n    /// @param data the bytes sent to the destination address.\\n    /// @return success whether the execution was successful.\\n    /// @return returnData data resulting from the execution.\\n    function approveAndExecuteWithSpecificGas(\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 gasLimit,\\n        bytes calldata data\\n    ) external returns (bool success, bytes memory returnData) {\\n        require(_executionOperators[msg.sender], \\\"only execution operators allowed to execute on SAND behalf\\\");\\n        return _approveAndExecuteWithSpecificGas(from, to, amount, gasLimit, data);\\n    }\\n\\n    /// @dev the reason for this function is that charging for gas here is more gas-efficient than doing it in the caller.\\n    /// @notice approve a specific amount of token for `from` and execute on behalf of the contract. Plus charge the gas required to perform it.\\n    /// @param from address of which token will be transfered.\\n    /// @param to destination address fo the call.\\n    /// @param amount number of tokens allowed that can be transfer by the code at `to`.\\n    /// @param gasLimit exact amount of gas to be passed to the call.\\n    /// @param tokenGasPrice price in token for the gas to be charged.\\n    /// @param baseGasCharge amount of gas charged on top of the gas used for the call.\\n    /// @param tokenReceiver recipient address of the token charged for the gas used.\\n    /// @param data the bytes sent to the destination address.\\n    /// @return success whether the execution was successful.\\n    /// @return returnData data resulting from the execution.\\n    function approveAndExecuteWithSpecificGasAndChargeForIt(\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 baseGasCharge,\\n        address tokenReceiver,\\n        bytes calldata data\\n    ) external returns (bool success, bytes memory returnData) {\\n        uint256 initialGas = gasleft();\\n        require(_executionOperators[msg.sender], \\\"only execution operators allowed to execute on SAND behalf\\\");\\n        (success, returnData) = _approveAndExecuteWithSpecificGas(from, to, amount, gasLimit, data);\\n        if (tokenGasPrice > 0) {\\n            _charge(from, gasLimit, tokenGasPrice, initialGas, baseGasCharge, tokenReceiver);\\n        }\\n    }\\n\\n    /// @notice transfer 1amount1 token from `from` to `to` and charge the gas required to perform that transfer.\\n    /// @param from address of which token will be transfered.\\n    /// @param to destination address fo the call.\\n    /// @param amount number of tokens allowed that can be transfer by the code at `to`.\\n    /// @param gasLimit exact amount of gas to be passed to the call.\\n    /// @param tokenGasPrice price in token for the gas to be charged.\\n    /// @param baseGasCharge amount of gas charged on top of the gas used for the call.\\n    /// @param tokenReceiver recipient address of the token charged for the gas used.\\n    /// @return whether the transfer was successful.\\n    function transferAndChargeForGas(\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 baseGasCharge,\\n        address tokenReceiver\\n    ) external returns (bool) {\\n        uint256 initialGas = gasleft();\\n        require(_executionOperators[msg.sender], \\\"only execution operators allowed to perfrom transfer and charge\\\");\\n        _transfer(from, to, amount);\\n        if (tokenGasPrice > 0) {\\n            _charge(from, gasLimit, tokenGasPrice, initialGas, baseGasCharge, tokenReceiver);\\n        }\\n        return true;\\n    }\\n\\n    function _charge(\\n        address from,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 initialGas,\\n        uint256 baseGasCharge,\\n        address tokenReceiver\\n    ) internal {\\n        uint256 gasCharge = initialGas - gasleft();\\n        if(gasCharge > gasLimit) {\\n            gasCharge = gasLimit;\\n        }\\n        gasCharge += baseGasCharge;\\n        uint256 tokensToCharge = gasCharge * tokenGasPrice;\\n        require(tokensToCharge / gasCharge == tokenGasPrice, \\\"overflow\\\");\\n        _transfer(from, tokenReceiver, tokensToCharge);\\n    }\\n\\n    function _approveAndExecuteWithSpecificGas(\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 gasLimit,\\n        bytes memory data\\n    ) internal returns (bool success, bytes memory returnData) {\\n\\n        if (amount > 0) {\\n            _addAllowanceIfNeeded(from, to, amount);\\n        }\\n        (success, returnData) = to.call.gas(gasLimit)(data);\\n        assert(gasleft() > gasLimit / 63); // not enough gas provided, assert to throw all gas // TODO use EIP-1930\\n    }\\n\\n\\n    function _transfer(address from, address to, uint256 amount) internal;\\n    function _addAllowanceIfNeeded(address owner, address spender, uint256 amountNeeded) internal;\\n}\",\"keccak256\":\"0x4b9a75299ab80e84aa287f2ecf2ef175e0feb074764e4a670f9397a2d2d4bda8\"},\"src/TheSandbox712.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport {\\n    ProxyImplementation\\n} from \\\"../contracts_common/src/BaseWithStorage/ProxyImplementation.sol\\\";\\n\\ncontract TheSandbox712 is ProxyImplementation {\\n    bytes32 constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,address verifyingContract)\\\"\\n    );\\n    bytes32 DOMAIN_SEPARATOR;\\n\\n    function init712() public phase(\\\"712\\\") {\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(\\\"The Sandbox 3D\\\"),\\n                keccak256(\\\"1\\\"),\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    function domainSeparator() internal view returns (bytes32) {\\n        return DOMAIN_SEPARATOR;\\n    }\\n}\\n\",\"keccak256\":\"0x76f0233c0b532620a8d3a129d30b6551869be42514cbe2b03004400ea230de54\"}},\"version\":1}",
    "userdoc": {
      "methods": {
        "cancelSellerOffer(uint256)": {
          "notice": "cancel a offer previously signed, new offer need to use a id not used yet"
        },
        "changeAdmin(address)": {
          "notice": "change the administrator to be `newAdmin`."
        },
        "claimSellerOffer(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)": {
          "notice": "claim offer using EIP712"
        },
        "claimSellerOfferUsingBasicSig(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)": {
          "notice": "claim offer using Basic Signature"
        },
        "claimSellerOfferUsingBasicSigViaEIP1271(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)": {
          "notice": "claim offer using Basic Signature and EIP1271 signature verification scheme"
        },
        "claimSellerOfferUsingBasicSigViaEIP1654(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)": {
          "notice": "claim offer using Basic Signature and EIP1654 signature verification scheme"
        },
        "claimSellerOfferViaEIP1271(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)": {
          "notice": "claim offer using EIP712 and EIP1271 signature verification scheme"
        },
        "claimSellerOfferViaEIP1654(address,address,address,uint256[],uint256[],uint256[],uint256[],bytes)": {
          "notice": "claim offer using EIP712 and EIP1654 signature verification scheme"
        },
        "getAdmin()": {
          "notice": "gives the current administrator of this contract."
        },
        "isMetaTransactionProcessor(address)": {
          "notice": "check whether address `who` is given meta-transaction execution rights."
        },
        "setFee(address,uint256)": {
          "notice": "set fee parameters"
        },
        "setMetaTransactionProcessor(address,bool)": {
          "notice": "Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights)."
        }
      }
    }
  },
  "args": [
    "0x8ae33DEF94843d558175FF2E011F55f1cf41e24f",
    "0xcbc70EcCd52bF3910CDC1455E6D2Bd45725F573D",
    "0xCc933a862fc15379E441F2A16Cb943D385a4695f",
    "0xcbc70EcCd52bF3910CDC1455E6D2Bd45725F573D",
    0
  ],
  "address": "0x9e63b8b81F4B815f113F23fAc0Fd5ABbC033569c",
  "transactionHash": "0xdbc2fc90357c46a0095fc6d55f19ddbcfacd727d99e7cbd21c31edfe2c144440"
}