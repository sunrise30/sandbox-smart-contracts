{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract CatalystValue",
          "name": "catalystValue",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "catalystId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "seed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gemIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "blockNumber",
          "type": "uint64"
        }
      ],
      "name": "CatalystApplied",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "seed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gemIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "blockNumber",
          "type": "uint64"
        }
      ],
      "name": "GemsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMinter",
          "type": "address"
        }
      ],
      "name": "Minter",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "gemIds",
          "type": "uint256[]"
        }
      ],
      "name": "addGems",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "getCatalyst",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "catalystId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "catalystId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "seed",
          "type": "uint256"
        },
        {
          "internalType": "uint32[]",
          "name": "gemIds",
          "type": "uint32[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "blockHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "getValues",
      "outputs": [
        {
          "internalType": "uint32[]",
          "name": "values",
          "type": "uint32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "catalystId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxGems",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "gemIds",
          "type": "uint256[]"
        }
      ],
      "name": "setCatalyst",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "setMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "receipt": {
    "to": null,
    "from": "0x61c461EcC993aaDEB7e4b47E96d1B8cC37314B20",
    "contractAddress": "0x4F2ffE61feE43EB7aEeb14e673165151f4C5EC7A",
    "transactionIndex": 12,
    "gasUsed": "926698",
    "logsBloom": "0x
    "blockHash": "0x56341951c2f598c040711b0939bdc497e52425abee3450db13e94ca63648574d",
    "transactionHash": "0xad5d78e60d2658483b090f27a3cb564d83b9182e316d97c39ecb3df025712950",
    "logs": [],
    "blockNumber": 6913069,
    "cumulativeGasUsed": "4875051",
    "status": 1,
    "byzantium": true
  },
  "address": "0x4F2ffE61feE43EB7aEeb14e673165151f4C5EC7A",
  "args": [
    "0xC02922f8Cf82A91261798eC099189921bE634c5C",
    "0x61c461EcC993aaDEB7e4b47E96d1B8cC37314B20"
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract CatalystValue\",\"name\":\"catalystValue\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"catalystId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"gemIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"}],\"name\":\"CatalystApplied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"gemIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"}],\"name\":\"GemsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"Minter\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"gemIds\",\"type\":\"uint256[]\"}],\"name\":\"addGems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getCatalyst\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"catalystId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"catalystId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"uint32[]\",\"name\":\"gemIds\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"blockHashes\",\"type\":\"bytes32[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"values\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"catalystId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxGems\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"gemIds\",\"type\":\"uint256[]\"}],\"name\":\"setCatalyst\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"changeAdmin(address)\":{\"details\":\"change the administrator to be `newAdmin`.\",\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"getAdmin()\":{\"details\":\"gives the current administrator of this contract.\",\"returns\":{\"_0\":\"the current administrator of this contract.\"}},\"getMinter()\":{\"details\":\"return the current minter\"},\"setMinter(address)\":{\"details\":\"Set the Minter that will be the only address able to create Estate\",\"params\":{\"minter\":\"address of the minter\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/CatalystRegistry.sol\":\"CatalystRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"src/Catalyst/CatalystValue.sol\":{\"content\":\"pragma solidity 0.6.5;\\npragma experimental ABIEncoderV2;\\n\\n\\ninterface CatalystValue {\\n    function getValues(\\n        uint256 catalystId,\\n        uint256 seed,\\n        uint32[] calldata gemIds,\\n        bytes32[] calldata blockHashes\\n    ) external view returns (uint32[] memory);\\n}\\n\",\"keccak256\":\"0x864386a2aae072b74b765884be210ed738dde696e34207fe45a21ae0b8242242\"},\"src/CatalystRegistry.sol\":{\"content\":\"pragma solidity 0.6.5;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./Interfaces/AssetToken.sol\\\";\\nimport \\\"./contracts_common/src/BaseWithStorage/Admin.sol\\\";\\nimport \\\"./Catalyst/CatalystValue.sol\\\";\\n\\n\\ncontract CatalystRegistry is Admin, CatalystValue {\\n    event Minter(address indexed newMinter);\\n    event CatalystApplied(uint256 indexed assetId, uint256 indexed catalystId, uint256 seed, uint256[] gemIds, uint64 blockNumber);\\n    event GemsAdded(uint256 indexed assetId, uint256 seed, uint256 startIndex, uint256[] gemIds, uint64 blockNumber);\\n\\n    function getCatalyst(uint256 assetId) external view returns (bool exists, uint256 catalystId) {\\n        CatalystStored memory catalyst = _catalysts[assetId];\\n        if (catalyst.set != 0) {\\n            return (true, catalyst.catalystId);\\n        }\\n        if (assetId & IS_NFT != 0) {\\n            catalyst = _catalysts[_getCollectionId(assetId)];\\n            return (catalyst.set != 0, catalyst.catalystId);\\n        }\\n        return (false, 0);\\n    }\\n\\n    function setCatalyst(\\n        uint256 assetId,\\n        uint256 catalystId,\\n        uint256 maxGems,\\n        uint256[] calldata gemIds\\n    ) external {\\n        require(msg.sender == _minter, \\\"NOT_AUTHORIZED_MINTER\\\");\\n        require(gemIds.length <= maxGems, \\\"INVALID_GEMS_TOO_MANY\\\");\\n        uint256 emptySockets = maxGems - gemIds.length;\\n        uint256 index = gemIds.length;\\n        _catalysts[assetId] = CatalystStored(uint64(emptySockets), uint64(index), uint64(catalystId), 1);\\n        uint64 blockNumber = _getBlockNumber();\\n        emit CatalystApplied(assetId, catalystId, assetId, gemIds, blockNumber);\\n    }\\n\\n    function addGems(uint256 assetId, uint256[] calldata gemIds) external {\\n        require(msg.sender == _minter, \\\"NOT_AUTHORIZED_MINTER\\\");\\n        require(assetId & IS_NFT != 0, \\\"INVALID_NOT_NFT\\\");\\n        require(gemIds.length != 0, \\\"INVALID_GEMS_0\\\");\\n        (uint256 emptySockets, uint256 index, uint256 seed) = _getSocketData(assetId);\\n        uint256 startIndex = index;\\n        require(emptySockets >= gemIds.length, \\\"INVALID_GEMS_TOO_MANY\\\");\\n        emptySockets -= gemIds.length;\\n        index += gemIds.length;\\n        _catalysts[assetId].emptySockets = uint64(emptySockets);\\n        _catalysts[assetId].index = uint64(index);\\n        uint64 blockNumber = _getBlockNumber();\\n        emit GemsAdded(assetId, seed, startIndex, gemIds, blockNumber);\\n    }\\n\\n    /// @dev Set the Minter that will be the only address able to create Estate\\n    /// @param minter address of the minter\\n    function setMinter(address minter) external {\\n        require(msg.sender == _admin, \\\"NOT_AUTHORIZED_ADMIN\\\");\\n        require(minter != _minter, \\\"INVALID_MINTER_SAME_ALREADY_SET\\\");\\n        _minter = minter;\\n        emit Minter(minter);\\n    }\\n\\n    /// @dev return the current minter\\n    function getMinter() external view returns (address) {\\n        return _minter;\\n    }\\n\\n    function getValues(\\n        uint256 catalystId,\\n        uint256 seed,\\n        uint32[] calldata gemIds,\\n        bytes32[] calldata blockHashes\\n    ) external override view returns (uint32[] memory values) {\\n        return _catalystValue.getValues(catalystId, seed, gemIds, blockHashes);\\n    }\\n\\n    // ///////// INTERNAL ////////////\\n\\n    uint256 private constant IS_NFT = 0x0000000000000000000000000000000000000000800000000000000000000000;\\n    uint256 private constant NOT_IS_NFT = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFF;\\n    uint256 private constant NOT_NFT_INDEX = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000007FFFFFFFFFFFFFFF;\\n\\n    function _getSocketData(uint256 assetId)\\n        internal\\n        view\\n        returns (\\n            uint256 emptySockets,\\n            uint256 index,\\n            uint256 seed\\n        )\\n    {\\n        seed = assetId;\\n        CatalystStored memory catalyst = _catalysts[assetId];\\n        if (catalyst.set != 0) {\\n            // the gems are added to an asset who already get a specific catalyst.\\n            // the seed is its id\\n            return (catalyst.emptySockets, catalyst.index, seed);\\n        }\\n        // else the asset is only adding gems while keeping the sane seed (that of the original assetId)\\n        seed = _getCollectionId(assetId);\\n        catalyst = _catalysts[seed];\\n        return (catalyst.emptySockets, catalyst.index, seed);\\n    }\\n\\n    function _getBlockNumber() internal view returns (uint64 blockNumber) {\\n        blockNumber = uint64(block.number + 1);\\n    }\\n\\n    function _getCollectionId(uint256 assetId) internal pure returns (uint256) {\\n        return assetId & NOT_NFT_INDEX & NOT_IS_NFT; // compute the same as Asset to get collectionId\\n    }\\n\\n    // CONSTRUCTOR ////\\n    constructor(CatalystValue catalystValue, address admin) public {\\n        _admin = admin;\\n        _catalystValue = catalystValue;\\n    }\\n\\n    /// DATA ////////\\n\\n    struct CatalystStored {\\n        uint64 emptySockets;\\n        uint64 index;\\n        uint64 catalystId;\\n        uint64 set;\\n    }\\n    address internal _minter;\\n    CatalystValue internal immutable _catalystValue;\\n    mapping(uint256 => CatalystStored) internal _catalysts;\\n}\\n\",\"keccak256\":\"0x2d5e41ee82b4a3601ac89f4d95a02df958734b15357015fde8a1b8c5072bd765\"},\"src/Interfaces/AssetToken.sol\":{\"content\":\"pragma solidity 0.6.5;\\n\\n\\ninterface AssetToken {\\n    function mint(\\n        address creator,\\n        uint40 packId,\\n        bytes32 hash,\\n        uint256 supply,\\n        uint8 rarity,\\n        address owner,\\n        bytes calldata data\\n    ) external returns (uint256 id);\\n\\n    function mintMultiple(\\n        address creator,\\n        uint40 packId,\\n        bytes32 hash,\\n        uint256[] calldata supplies,\\n        bytes calldata rarityPack,\\n        address owner,\\n        bytes calldata data\\n    ) external returns (uint256[] memory ids);\\n\\n    // fails on non-NFT or nft who do not have collection (was a mistake)\\n    function collectionOf(uint256 id) external view returns (uint256);\\n\\n    // return true for Non-NFT ERC1155 tokens which exists\\n    function isCollection(uint256 id) external view returns (bool);\\n\\n    function collectionIndexOf(uint256 id) external view returns (uint256);\\n\\n    function extractERC721From(\\n        address sender,\\n        uint256 id,\\n        address to\\n    ) external returns (uint256 newId);\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) external;\\n}\\n\",\"keccak256\":\"0x23a2eb8029ccf2a04ac6702e78bed1857e373cdeab30972efa0fe54a7b327fc7\"},\"src/contracts_common/src/BaseWithStorage/Admin.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n\\ncontract Admin {\\n    address internal _admin;\\n\\n    /// @dev emitted when the contract administrator is changed.\\n    /// @param oldAdmin address of the previous administrator.\\n    /// @param newAdmin address of the new administrator.\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @dev gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @dev change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe5606264fdcdb48191f172743be4fac889f183ce97e907dba4cc5b3fe41b7f9a\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063b07fdd1f1161005b578063b07fdd1f146100f4578063f366751714610107578063fca3b5aa1461010f578063ffaa8b811461012257610088565b80631b74ea651461008d5780636e9960c3146100a25780637a528ea5146100c05780638f283970146100e1575b600080fd5b6100a061009b366004610b3e565b610142565b005b6100aa6102d9565b6040516100b79190610bea565b60405180910390f35b6100d36100ce366004610a5c565b6102e8565b6040516100b7929190610c62565b6100a06100ef36600461098e565b61040f565b6100a0610102366004610a74565b6104ba565b6100aa610623565b6100a061011d36600461098e565b610632565b610135610130366004610abe565b6106ec565b6040516100b79190610c18565b6001546001600160a01b031633146101755760405162461bcd60e51b815260040161016c90610dbc565b60405180910390fd5b828111156101955760405162461bcd60e51b815260040161016c90610d4e565b6040805160808101825282850367ffffffffffffffff8181168352848116602080850191825289831685870190815260016060870190815260008d815260029093529682209551865493519151975167ffffffffffffffff19909416908516177fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff166801000000000000000091851691909102177fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff16600160801b968416969096029590951777ffffffffffffffffffffffffffffffffffffffffffffffff16600160c01b91909216021790915590829061028e6107db565b905086887fafece0d710ade702a82d755ffd5b7a46d2705b9845a3be706736bb8aab7cde138a8888866040516102c79493929190610df3565b60405180910390a35050505050505050565b6000546001600160a01b031690565b6000806102f361090d565b506000838152600260209081526040918290208251608081018452905467ffffffffffffffff8082168352680100000000000000008204811693830193909352600160801b8104831693820193909352600160c01b90920416606082018190521561037157604001516001925067ffffffffffffffff16905061040a565b6b8000000000000000000000008416156104015760026000610392866107e2565b815260208082019290925260409081016000208151608081018352905467ffffffffffffffff8082168352680100000000000000008204811694830194909452600160801b81048416928201839052600160c01b900490921660609092018290529015159350915061040a9050565b50600091508190505b915091565b6000546001600160a01b031633146104395760405162461bcd60e51b815260040161016c90610d85565b6000546040517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f91610478916001600160a01b03909116908490610bfe565b60405180910390a1600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6001546001600160a01b031633146104e45760405162461bcd60e51b815260040161016c90610dbc565b6b800000000000000000000000831661050f5760405162461bcd60e51b815260040161016c90610c72565b8061052c5760405162461bcd60e51b815260040161016c90610d17565b600080600061053a86610807565b9194509250905081848410156105625760405162461bcd60e51b815260040161016c90610d4e565b6000878152600260205260408120805467ffffffffffffffff95880186811668010000000000000000027fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff988a900397881667ffffffffffffffff1990931692909217979097161790559293926105d76107db565b9050877faa3af5c57d5123b5d31b14f24fe8a4d03ef9177f3fa13f1abea6a558ba99062f84848a8a86604051610611959493929190610e28565b60405180910390a25050505050505050565b6001546001600160a01b031690565b6000546001600160a01b0316331461065c5760405162461bcd60e51b815260040161016c90610ce0565b6001546001600160a01b038281169116141561068a5760405162461bcd60e51b815260040161016c90610ca9565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f21ffb9a0b86ae3fac1c74b9687a1f60074ca118d66f641fb58ec34d8611dc24c90600090a250565b6040517fffaa8b810000000000000000000000000000000000000000000000000000000081526060906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ffaa8b819061075e908a908a908a908a908a908a90600401610e64565b60006040518083038186803b15801561077657600080fd5b505afa15801561078a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107d091908101906109bc565b979650505050505050565b6001430190565b7fffffffffffffffffffffffffffffffffffffffff000000007fffffffffffffff1690565b6000808261081361090d565b506000848152600260209081526040918290208251608081018452905467ffffffffffffffff8082168352680100000000000000008204811693830193909352600160801b8104831693820193909352600160c01b90920416606082018190521561089657805160209091015167ffffffffffffffff9182169450169150610906565b61089f856107e2565b6000818152600260209081526040918290208251608081018452905467ffffffffffffffff8082168084526801000000000000000083048216948401859052600160801b8304821695840195909552600160c01b9091041660609091015290955093509150505b9193909250565b60408051608081018252600080825260208201819052918101829052606081019190915290565b60008083601f840112610945578182fd5b50813567ffffffffffffffff81111561095c578182fd5b602083019150836020808302850101111561097657600080fd5b9250929050565b805161098881610f1d565b92915050565b60006020828403121561099f578081fd5b81356001600160a01b03811681146109b5578182fd5b9392505050565b600060208083850312156109ce578182fd5b825167ffffffffffffffff8111156109e4578283fd5b80840185601f8201126109f5578384fd5b80519150610a0a610a0583610efd565b610ed6565b8281528381019082850185850284018601891015610a26578687fd5b8693505b84841015610a5057610a3c898261097d565b835260019390930192918501918501610a2a565b50979650505050505050565b600060208284031215610a6d578081fd5b5035919050565b600080600060408486031215610a88578182fd5b83359250602084013567ffffffffffffffff811115610aa5578283fd5b610ab186828701610934565b9497909650939450505050565b60008060008060008060808789031215610ad6578182fd5b8635955060208701359450604087013567ffffffffffffffff80821115610afb578384fd5b610b078a838b01610934565b90965094506060890135915080821115610b1f578384fd5b50610b2c89828a01610934565b979a9699509497509295939492505050565b600080600080600060808688031215610b55578081fd5b853594506020860135935060408601359250606086013567ffffffffffffffff811115610b80578182fd5b610b8c88828901610934565b969995985093965092949392505050565b60008284527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610bce578081fd5b6020830280836020870137939093016020019283525090919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015610c5657835163ffffffff1683529284019291840191600101610c34565b50909695505050505050565b9115158252602082015260400190565b6020808252600f908201527f494e56414c49445f4e4f545f4e46540000000000000000000000000000000000604082015260600190565b6020808252601f908201527f494e56414c49445f4d494e5445525f53414d455f414c52454144595f53455400604082015260600190565b60208082526014908201527f4e4f545f415554484f52495a45445f41444d494e000000000000000000000000604082015260600190565b6020808252600e908201527f494e56414c49445f47454d535f30000000000000000000000000000000000000604082015260600190565b60208082526015908201527f494e56414c49445f47454d535f544f4f5f4d414e590000000000000000000000604082015260600190565b6020808252601b908201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604082015260600190565b60208082526015908201527f4e4f545f415554484f52495a45445f4d494e5445520000000000000000000000604082015260600190565b600085825260606020830152610e0d606083018587610b9d565b905067ffffffffffffffff8316604083015295945050505050565b600086825285602083015260806040830152610e48608083018587610b9d565b905067ffffffffffffffff831660608301529695505050505050565b86815260208082018790526080604083018190528201859052600090869060a08401835b88811015610eb3578335610e9b81610f1d565b63ffffffff1682529282019290820190600101610e88565b508481036060860152610ec7818789610b9d565b9b9a5050505050505050505050565b60405181810167ffffffffffffffff81118282101715610ef557600080fd5b604052919050565b600067ffffffffffffffff821115610f13578081fd5b5060209081020190565b63ffffffff81168114610f2f57600080fd5b5056fea26469706673582212209058baffef45da388086a69b724b115bd3f381441e662db71856ff571b8b8f0b64736f6c63430006050033",
  "devdoc": {
    "methods": {
      "changeAdmin(address)": {
        "details": "change the administrator to be `newAdmin`.",
        "params": {
          "newAdmin": "address of the new administrator."
        }
      },
      "getAdmin()": {
        "details": "gives the current administrator of this contract.",
        "returns": {
          "_0": "the current administrator of this contract."
        }
      },
      "getMinter()": {
        "details": "return the current minter"
      },
      "setMinter(address)": {
        "details": "Set the Minter that will be the only address able to create Estate",
        "params": {
          "minter": "address of the minter"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13208,
        "contract": "src/CatalystRegistry.sol:CatalystRegistry",
        "label": "_admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 8368,
        "contract": "src/CatalystRegistry.sol:CatalystRegistry",
        "label": "_minter",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 8374,
        "contract": "src/CatalystRegistry.sol:CatalystRegistry",
        "label": "_catalysts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(CatalystStored)8366_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_struct(CatalystStored)8366_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CatalystRegistry.CatalystStored)",
        "numberOfBytes": "32",
        "value": "t_struct(CatalystStored)8366_storage"
      },
      "t_struct(CatalystStored)8366_storage": {
        "encoding": "inplace",
        "label": "struct CatalystRegistry.CatalystStored",
        "members": [
          {
            "astId": 8359,
            "contract": "src/CatalystRegistry.sol:CatalystRegistry",
            "label": "emptySockets",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 8361,
            "contract": "src/CatalystRegistry.sol:CatalystRegistry",
            "label": "index",
            "offset": 8,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 8363,
            "contract": "src/CatalystRegistry.sol:CatalystRegistry",
            "label": "catalystId",
            "offset": 16,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 8365,
            "contract": "src/CatalystRegistry.sol:CatalystRegistry",
            "label": "set",
            "offset": 24,
            "slot": "0",
            "type": "t_uint64"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}