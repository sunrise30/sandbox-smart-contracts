{
  "contractInfo": {
    "abi": [
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          },
          {
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function",
        "signature": "0x00fdd58e"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "id",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function",
        "signature": "0x01ffc9a7"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_ids",
            "type": "uint256[]"
          },
          {
            "name": "_values",
            "type": "uint256[]"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "safeBatchTransferFrom",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0x2eb2c2d6"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owners",
            "type": "address[]"
          },
          {
            "name": "_tokenIds",
            "type": "uint256[]"
          }
        ],
        "name": "balanceOfBatch",
        "outputs": [
          {
            "name": "",
            "type": "uint256[]"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function",
        "signature": "0x4e1273f4"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "who",
            "type": "address"
          }
        ],
        "name": "isSuperOperator",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function",
        "signature": "0x654b748a"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "getAdmin",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function",
        "signature": "0x6e9960c3"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_id",
            "type": "uint256"
          }
        ],
        "name": "supplyOf",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function",
        "signature": "0x8806792f"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "newAdmin",
            "type": "address"
          }
        ],
        "name": "changeAdmin",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0x8f283970"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_operator",
            "type": "address"
          },
          {
            "name": "_approved",
            "type": "bool"
          }
        ],
        "name": "setApprovalForAll",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0xa22cb465"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "superOperator",
            "type": "address"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ],
        "name": "setSuperOperator",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0xac9fe421"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          },
          {
            "name": "_operator",
            "type": "address"
          }
        ],
        "name": "isApprovedForAll",
        "outputs": [
          {
            "name": "isOperator",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function",
        "signature": "0xe985e9c5"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_sender",
            "type": "address"
          },
          {
            "name": "_operator",
            "type": "address"
          },
          {
            "name": "_approved",
            "type": "bool"
          }
        ],
        "name": "setApprovalForAllFor",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0xeeb5a5d1"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_id",
            "type": "uint256"
          },
          {
            "name": "_value",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0xf242432a"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_id",
            "type": "uint256"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0xfe99049a"
      },
      {
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "supply0",
            "type": "uint256"
          },
          {
            "name": "supply1",
            "type": "uint256"
          },
          {
            "name": "supply2",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor",
        "signature": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "orb",
            "type": "address"
          }
        ],
        "name": "ORB",
        "type": "event",
        "signature": "0x797f9608c1a606e4ca32e6580ed348493481d23f4cf19a914ca4edd2a25f2042"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "operator",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "id",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "TransferSingle",
        "type": "event",
        "signature": "0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "operator",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "indexed": false,
            "name": "values",
            "type": "uint256[]"
          }
        ],
        "name": "TransferBatch",
        "type": "event",
        "signature": "0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "operator",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "approved",
            "type": "bool"
          }
        ],
        "name": "ApprovalForAll",
        "type": "event",
        "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "value",
            "type": "string"
          },
          {
            "indexed": true,
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "URI",
        "type": "event",
        "signature": "0x6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "superOperator",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "enabled",
            "type": "bool"
          }
        ],
        "name": "SuperOperator",
        "type": "event",
        "signature": "0x44f92d27abdf4cfb6a7d712c3af68f3be086d4ca747ab802c36f67d6790060d8"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "oldAdmin",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "newAdmin",
            "type": "address"
          }
        ],
        "name": "AdminChanged",
        "type": "event",
        "signature": "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
      }
    ],
    "evm": {
      "bytecode": {
        "linkReferences": {},
        "object": "60806040523480156200001157600080fd5b5060405162002daf38038062002daf833981810160405260808110156200003757600080fd5b508051602082015160408301516060909301519192909162000065600084866001600160e01b036200009d16565b6200007c600183866001600160e01b036200009d16565b62000093600282866001600160e01b036200009d16565b5050505062000535565b60003084604051620000af9062000527565b6001600160a01b03909216825260ff166020820152604080519182900301906000f080158015620000e4573d6000803e3d6000fd5b506001600160a01b03831660009081526002602081815260409092205492935062000120929160ff8816918791620018e56200023f821b17901c565b6001600160a01b03831660009081526002602052604090205582600560ff8616600381106200014b57fe5b0155604080517fa6d49dca0000000000000000000000000000000000000000000000000000000081526000600482018190526001600160a01b0385811660248401526044830187905292519284169263a6d49dca92606480820193929182900301818387803b158015620001be57600080fd5b505af1158015620001d3573d6000803e3d6000fd5b505050508060088560ff1660038110620001e957fe5b0180546001600160a01b0319166001600160a01b03928316179055604080519183168252517f797f9608c1a606e4ca32e6580ed348493481d23f4cf19a914ca4edd2a25f2042916020908290030190a150505050565b600080808360028111156200025057fe5b1415620002a5576200026c86866001600160e01b036200038e16565b90506200029d86866200028e8785620003ab60201b62001a971790919060201c565b6001600160e01b036200042416565b915062000385565b6001836002811115620002b457fe5b1415620002f257620002d086866001600160e01b036200038e16565b90506200029d86866200028e8785620004af60201b62001b5f1790919060201c565b60028360028111156200030157fe5b14156200031e576200029d8686866001600160e01b036200042416565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c6964206f7065726174696f6e000000000000000000000000000000604482015290519081900360640190fd5b50949350505050565b600181016040026101000382901c6001600160401b031692915050565b818101828110156200041e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6f766572666c6f77000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b92915050565b600068010000000000000000821062000489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018062002d8c6023913960400191505060405180910390fd5b506001600160401b03600183016040026101000390811b1984169082901b179392505050565b6000828211156200052157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f756e6465666c6f77000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b50900390565b610bab80620021e183390190565b611c9c80620005456000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c80638f2839701161008c578063e985e9c511610066578063e985e9c5146104a9578063eeb5a5d1146104d7578063f242432a1461050f578063fe99049a146105a4576100e9565b80638f28397014610427578063a22cb4651461044d578063ac9fe4211461047b576100e9565b80634e1273f4116100c85780634e1273f4146102ae578063654b748a146103c05780636e9960c3146103e65780638806792f1461040a576100e9565b8062fdd58e146100ee57806301ffc9a71461012c5780632eb2c2d61461017f575b600080fd5b61011a6004803603604081101561010457600080fd5b506001600160a01b0381351690602001356105e0565b60408051918252519081900360200190f35b61016b6004803603602081101561014257600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610625565b604080519115158252519081900360200190f35b6102ac600480360360a081101561019557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156101c957600080fd5b8201836020820111156101db57600080fd5b803590602001918460208302840111640100000000831117156101fd57600080fd5b91939092909160208101903564010000000081111561021b57600080fd5b82018360208201111561022d57600080fd5b8035906020019184602083028401116401000000008311171561024f57600080fd5b91939092909160208101903564010000000081111561026d57600080fd5b82018360208201111561027f57600080fd5b803590602001918460018302840111640100000000831117156102a157600080fd5b5090925090506106c0565b005b610370600480360360408110156102c457600080fd5b8101906020810181356401000000008111156102df57600080fd5b8201836020820111156102f157600080fd5b8035906020019184602083028401116401000000008311171561031357600080fd5b91939092909160208101903564010000000081111561033157600080fd5b82018360208201111561034357600080fd5b8035906020019184602083028401116401000000008311171561036557600080fd5b509092509050610805565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103ac578181015183820152602001610394565b505050509050019250505060405180910390f35b61016b600480360360208110156103d657600080fd5b50356001600160a01b03166108df565b6103ee6108fd565b604080516001600160a01b039092168252519081900360200190f35b61011a6004803603602081101561042057600080fd5b503561090c565b6102ac6004803603602081101561043d57600080fd5b50356001600160a01b0316610934565b6102ac6004803603604081101561046357600080fd5b506001600160a01b0381351690602001351515610a15565b6102ac6004803603604081101561049157600080fd5b506001600160a01b0381351690602001351515610a24565b61016b600480360360408110156104bf57600080fd5b506001600160a01b0381358116916020013516610ad1565b6102ac600480360360608110156104ed57600080fd5b506001600160a01b038135811691602081013590911690604001351515610b23565b6102ac600480360360a081101561052557600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561056557600080fd5b82018360208201111561057757600080fd5b8035906020019184600183028401116401000000008311171561059957600080fd5b509092509050610bc4565b6102ac600480360360808110156105ba57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610c8c565b600060028211156105f35750600061061f565b6001600160a01b03831660009081526002602052604090205461061c908363ffffffff610d9816565b90505b92915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614806106b857507fd9b67a26000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b90505b919050565b61072f888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a918291850190849080828437600092019190915250610db692505050565b336000908152600460205260409020546107f29060ff166107505733610752565b885b898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a91508990819084018382808284376000920191909152506111a292505050565b6107fb57600080fd5b5050505050505050565b60608382146108455760405162461bcd60e51b8152600401808060200182810382526026815260200180611bbd6026913960400191505060405180910390fd5b604080518381526020808502820101909152606090838015610871578160200160208202803883390190505b50905060005b838110156108d5576108b687878381811061088e57fe5b905060200201356001600160a01b03168686848181106108aa57fe5b905060200201356105e0565b8282815181106108c257fe5b6020908102919091010152600101610877565b5095945050505050565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b031690565b6000600282111561091f575060006106bb565b6005826003811061092c57fe5b015492915050565b6000546001600160a01b03163314610993576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b600054604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a1600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b610a203383836113aa565b5050565b6000546001600160a01b03163314610a6d5760405162461bcd60e51b815260040180806020018281038252602c815260200180611c3c602c913960400191505060405180910390fd5b6001600160a01b038216600081815260016020908152604091829020805460ff191685151590811790915582519384529083015280517f44f92d27abdf4cfb6a7d712c3af68f3be086d4ca747ab802c36f67d6790060d89281900390910190a15050565b6001600160a01b03808316600090815260036020908152604080832093851683529290529081205460ff168061061c5750506001600160a01b031660009081526001602052604090205460ff16919050565b336001600160a01b0384161480610b4957503360009081526004602052604090205460ff165b80610b6357503360009081526001602052604090205460ff165b610bb4576040805162461bcd60e51b815260206004820152601560248201527f72657175697265206d65746120617070726f76616c0000000000000000000000604482015290519081900360640190fd5b610bbf8383836113aa565b505050565b610bd086868686611470565b33600090815260046020526040902054610c339060ff16610bf15733610bf3565b865b8787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250611735915050565b610c84576040805162461bcd60e51b815260206004820152600960248201527f6661696c436865636b0000000000000000000000000000000000000000000000604482015290519081900360640190fd5b505050505050565b60088260038110610c9957fe5b01546001600160a01b03163314610cf7576040805162461bcd60e51b815260206004820152600e60248201527f6f6e6c7920737562206572633230000000000000000000000000000000000000604482015290519081900360640190fd5b610d0384848484611470565b33600090815260046020526040902054610d419060ff16610d245733610d26565b845b85858585604051806020016040528060008152506001611735565b610d92576040805162461bcd60e51b815260206004820152600960248201527f6661696c436865636b0000000000000000000000000000000000000000000000604482015290519081900360640190fd5b50505050565b600181016040026101000382901c67ffffffffffffffff1692915050565b8051825114610df65760405162461bcd60e51b8152600401808060200182810382526026815260200180611bbd6026913960400191505060405180910390fd5b6001600160a01b038316610e51576040805162461bcd60e51b815260206004820152601160248201527f496e76616c696420726563697069656e74000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038416331480610e7757503360009081526001602052604090205460ff165b80610ea557506001600160a01b038416600090815260036020908152604080832033845290915290205460ff165b80610ebf57503360009081526004602052604090205460ff165b610f10576040805162461bcd60e51b815260206004820152600e60248201527f6e6f7420617574686f72697a6564000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03808516600090815260026020526040808220549286168252812054905b845181101561108f5760006008868381518110610f4e57fe5b602002602001015160038110610f6057fe5b015486516001600160a01b039091169150610fa6908590889085908110610f8357fe5b6020026020010151878581518110610f9757fe5b602002602001015160016118e5565b9350610fdb83878481518110610fb857fe5b6020026020010151878581518110610fcc57fe5b602002602001015160006118e5565b9250806001600160a01b031663a6d49dca8989888681518110610ffa57fe5b60200260200101516040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b031681526020018281526020019350505050600060405180830381600087803b15801561106a57600080fd5b505af115801561107e573d6000803e3d6000fd5b505060019093019250610f35915050565b506001600160a01b03808716600081815260026020908152604080832087905593891680835284832086905533835260049091529290205460ff166110d457336110d6565b875b6001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561114657818101518382015260200161112e565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561118557818101518382015260200161116d565b5050505090500194505050505060405180910390a4505050505050565b60006111b6856001600160a01b03166119d2565b6111c2575060016113a0565b6000856001600160a01b031663bc197c8189898888886040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561125f578181015183820152602001611247565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561129e578181015183820152602001611286565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156112da5781810151838201526020016112c2565b50505050905090810190601f1680156113075780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561132c57600080fd5b505af1158015611340573d6000803e3d6000fd5b505050506040513d602081101561135657600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167fbc197c8100000000000000000000000000000000000000000000000000000000149150505b9695505050505050565b6001600160a01b03821660009081526001602052604090205460ff16156114025760405162461bcd60e51b8152600401808060200182810382526036815260200180611c066036913960400191505060405180910390fd5b6001600160a01b03838116600081815260036020908152604080832094871680845294825291829020805460ff1916861515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b6001600160a01b0383166114cb576040805162461bcd60e51b815260206004820152601260248201527f496e76616c696420746f20616464726573730000000000000000000000000000604482015290519081900360640190fd5b6000600883600381106114da57fe5b01546001600160a01b0390811691508516331480159061150a57503360009081526004602052604090205460ff16155b801561151f5750336001600160a01b03821614155b156115b6573360009081526001602052604090205460ff168061156557506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6115b6576040805162461bcd60e51b815260206004820152601560248201527f4f70657261746f72206e6f7420617070726f7665640000000000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600260205260409020546115e2908484600163ffffffff6118e516565b6001600160a01b038087166000908152600260205260408082209390935590861681529081205461161c918590859063ffffffff6118e516565b6001600160a01b038086166000818152600260209081526040808320959095553382526004905292909220549087169060ff16611659573361165b565b865b6001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628686604051808381526020018281526020019250505060405180910390a4604080517fa6d49dca0000000000000000000000000000000000000000000000000000000081526001600160a01b03878116600483015286811660248301526044820185905291519183169163a6d49dca9160648082019260009290919082900301818387803b15801561171657600080fd5b505af115801561172a573d6000803e3d6000fd5b505050505050505050565b6000611749866001600160a01b03166119d2565b611755575060016118da565b818015611768575061176686611a0e565b155b15611775575060016118da565b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916866001600160a01b031663f23a6e618a8a8989896040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611838578181015183820152602001611820565b50505050905090810190601f1680156118655780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561188857600080fd5b505af115801561189c573d6000803e3d6000fd5b505050506040513d60208110156118b257600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000161490505b979650505050505050565b600080808360028111156118f557fe5b1415611928576119058686610d98565b9050611921868661191c848863ffffffff611a9716565b611aef565b91506119c9565b600183600281111561193657fe5b141561195d576119468686610d98565b9050611921868661191c848863ffffffff611b5f16565b600283600281111561196b57fe5b141561197c57611921868686611aef565b6040805162461bcd60e51b815260206004820152601160248201527f496e76616c6964206f7065726174696f6e000000000000000000000000000000604482015290519081900360640190fd5b50949350505050565b60007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470823f8015801590611a065750818114155b949350505050565b6040517f01ffc9a7000000000000000000000000000000000000000000000000000000008082527f4e2312e00000000000000000000000000000000000000000000000000000000060048301819052600092909190839081906020816024818a612710fa92508051915050609e5a11611a8357fe5b8180156113a0575060011495945050505050565b8181018281101561061f576040805162461bcd60e51b815260206004820152600860248201527f6f766572666c6f77000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000680100000000000000008210611b385760405162461bcd60e51b8152600401808060200182810382526023815260200180611be36023913960400191505060405180910390fd5b5067ffffffffffffffff600183016040026101000390811b1984169082901b179392505050565b600082821115611bb6576040805162461bcd60e51b815260206004820152600860248201527f756e6465666c6f77000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5090039056fe496e636f6e73697374656e74206172726179206c656e677468206265747765656e2061726773416d6f756e7420746f20777269746520696e2062696e20697320746f6f206c617267657375706572206f70657261746f722063616e2774206861766520746865697220617070726f76616c466f72416c6c206368616e6765646f6e6c792061646d696e20697320616c6c6f77656420746f20616464207375706572206f70657261746f7273a265627a7a723058200b97030453ca4bb388feb15f1ba37ad8c0599c1daaafef2fa6d44508adcd0ce464736f6c63430005090032608060405234801561001057600080fd5b50604051610bab380380610bab8339818101604052604081101561003357600080fd5b508051602091820151604080518082019091526001600160a01b0390921680835260ff90911691909201819052600280546001600160a01b03191690921760ff60a01b191674010000000000000000000000000000000000000000909102179055610b08806100a36000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636e9960c31161008c578063a6d49dca11610066578063a6d49dca14610260578063a9059cbb14610296578063ac9fe421146102c2578063dd62ed3e146102f0576100df565b80636e9960c3146101ee57806370a08231146102125780638f28397014610238576100df565b80632b991746116100bd5780632b99174614610174578063313ce567146101aa578063654b748a146101c8576100df565b8063095ea7b3146100e457806318160ddd1461012457806323b872dd1461013e575b600080fd5b610110600480360360408110156100fa57600080fd5b506001600160a01b03813516906020013561031e565b604080519115158252519081900360200190f35b61012c610334565b60408051918252519081900360200190f35b6101106004803603606081101561015457600080fd5b506001600160a01b038135811691602081013590911690604001356103e3565b6101106004803603606081101561018a57600080fd5b506001600160a01b038135811691602081013590911690604001356104ff565b6101b261056d565b6040805160ff9092168252519081900360200190f35b610110600480360360208110156101de57600080fd5b50356001600160a01b0316610572565b6101f6610590565b604080516001600160a01b039092168252519081900360200190f35b61012c6004803603602081101561022857600080fd5b50356001600160a01b031661059f565b61025e6004803603602081101561024e57600080fd5b50356001600160a01b0316610659565b005b61025e6004803603606081101561027657600080fd5b506001600160a01b0381358116916020810135909116906040013561073a565b610110600480360360408110156102ac57600080fd5b506001600160a01b0381351690602001356107e9565b61025e600480360360408110156102d857600080fd5b506001600160a01b03813516906020013515156107f6565b61012c6004803603604081101561030657600080fd5b506001600160a01b03813581169160200135166108c1565b600061032b3384846108ec565b50600192915050565b600254604080517f8806792f00000000000000000000000000000000000000000000000000000000815260ff74010000000000000000000000000000000000000000840416600482015290516000926001600160a01b031691638806792f916024808301926020929190829003018186803b1580156103b257600080fd5b505afa1580156103c6573d6000803e3d6000fd5b505050506040513d60208110156103dc57600080fd5b5051905090565b6000336001600160a01b0385161480159061040e57503360009081526001602052604090205460ff16155b156104ea576001600160a01b03841660009081526003602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146104e857828110156104b3576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b6104c3818463ffffffff6109bf16565b6001600160a01b03861660009081526003602090815260408083203384529091529020555b505b6104f58484846109d1565b5060019392505050565b6000336001600160a01b038516148061052757503360009081526001602052604090205460ff165b6105625760405162461bcd60e51b8152600401808060200182810382526023815260200180610ab16023913960400191505060405180910390fd5b6104f58484846108ec565b601290565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b031690565b600254604080517efdd58e0000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015260ff7401000000000000000000000000000000000000000085041660248301529151600093929092169162fdd58e91604480820192602092909190829003018186803b15801561062757600080fd5b505afa15801561063b573d6000803e3d6000fd5b505050506040513d602081101561065157600080fd5b505192915050565b6000546001600160a01b031633146106b8576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c792061646d696e2063616e206368616e67652061646d696e0000000000604482015290519081900360640190fd5b600054604080516001600160a01b039283168152918316602083015280517f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9281900390910190a1600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6002546001600160a01b03163314610799576040805162461bcd60e51b815260206004820152600960248201527f6f6e6c7920636f72650000000000000000000000000000000000000000000000604482015290519081900360640190fd5b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600061032b3384846109d1565b6000546001600160a01b0316331461083f5760405162461bcd60e51b815260040180806020018281038252602c815260200180610a85602c913960400191505060405180910390fd5b6001600160a01b03821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517f44f92d27abdf4cfb6a7d712c3af68f3be086d4ca747ab802c36f67d6790060d89281900390910190a15050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6001600160a01b0383161580159061090c57506001600160a01b03821615155b61095d576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420617070726f7665207769746820307830000000000000000000604482015290519081900360640190fd5b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000828211156109cb57fe5b50900390565b600254604080517ffe99049a0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152858116602483015260ff740100000000000000000000000000000000000000008504166044830152606482018590529151919092169163fe99049a91608480830192600092919082900301818387803b158015610a6757600080fd5b505af1158015610a7b573d6000803e3d6000fd5b5050505050505056fe6f6e6c792061646d696e20697320616c6c6f77656420746f20616464207375706572206f70657261746f72736d73672e73656e64657220213d2066726f6d207c7c2073757065724f70657261746f72a265627a7a723058205e893d0e2fcbd7a2e28e2f371590cd5e89381c873200158ade849d8e9fd6ed9b64736f6c63430005090032416d6f756e7420746f20777269746520696e2062696e20697320746f6f206c61726765",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2DAF CODESIZE SUB DUP1 PUSH3 0x2DAF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH3 0x65 PUSH1 0x0 DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x9D AND JUMP JUMPDEST PUSH3 0x7C PUSH1 0x1 DUP4 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x9D AND JUMP JUMPDEST PUSH3 0x93 PUSH1 0x2 DUP3 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x9D AND JUMP JUMPDEST POP POP POP POP PUSH3 0x535 JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP5 PUSH1 0x40 MLOAD PUSH3 0xAF SWAP1 PUSH3 0x527 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD SWAP3 SWAP4 POP PUSH3 0x120 SWAP3 SWAP2 PUSH1 0xFF DUP9 AND SWAP2 DUP8 SWAP2 PUSH3 0x18E5 PUSH3 0x23F DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP3 PUSH1 0x5 PUSH1 0xFF DUP7 AND PUSH1 0x3 DUP2 LT PUSH3 0x14B JUMPI INVALID JUMPDEST ADD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0xA6D49DCA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP8 SWAP1 MSTORE SWAP3 MLOAD SWAP3 DUP5 AND SWAP3 PUSH4 0xA6D49DCA SWAP3 PUSH1 0x64 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x8 DUP6 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH3 0x1E9 JUMPI INVALID JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP4 AND DUP3 MSTORE MLOAD PUSH32 0x797F9608C1A606E4CA32E6580ED348493481D23F4CF19A914CA4EDD2A25F2042 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x250 JUMPI INVALID JUMPDEST EQ ISZERO PUSH3 0x2A5 JUMPI PUSH3 0x26C DUP7 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x38E AND JUMP JUMPDEST SWAP1 POP PUSH3 0x29D DUP7 DUP7 PUSH3 0x28E DUP8 DUP6 PUSH3 0x3AB PUSH1 0x20 SHL PUSH3 0x1A97 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x424 AND JUMP JUMPDEST SWAP2 POP PUSH3 0x385 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x2B4 JUMPI INVALID JUMPDEST EQ ISZERO PUSH3 0x2F2 JUMPI PUSH3 0x2D0 DUP7 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x38E AND JUMP JUMPDEST SWAP1 POP PUSH3 0x29D DUP7 DUP7 PUSH3 0x28E DUP8 DUP6 PUSH3 0x4AF PUSH1 0x20 SHL PUSH3 0x1B5F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x301 JUMPI INVALID JUMPDEST EQ ISZERO PUSH3 0x31E JUMPI PUSH3 0x29D DUP7 DUP7 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x424 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F7065726174696F6E000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 ADD PUSH1 0x40 MUL PUSH2 0x100 SUB DUP3 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH3 0x41E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F766572666C6F77000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH9 0x10000000000000000 DUP3 LT PUSH3 0x489 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x2D8C PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 DUP4 ADD PUSH1 0x40 MUL PUSH2 0x100 SUB SWAP1 DUP2 SHL NOT DUP5 AND SWAP1 DUP3 SWAP1 SHL OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH3 0x521 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x756E6465666C6F77000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0xBAB DUP1 PUSH3 0x21E1 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x1C9C DUP1 PUSH3 0x545 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F283970 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xEEB5A5D1 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xFE99049A EQ PUSH2 0x5A4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x8F283970 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xAC9FE421 EQ PUSH2 0x47B JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x654B748A EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x6E9960C3 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x8806792F EQ PUSH2 0x40A JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x17F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x6C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x394 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x90C JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x934 JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 GT ISZERO PUSH2 0x5F3 JUMPI POP PUSH1 0x0 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x61C SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xD98 AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x6B8 JUMPI POP PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x72F DUP9 DUP9 DUP9 DUP9 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP13 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP12 DUP3 MSTORE SWAP1 SWAP4 POP DUP12 SWAP3 POP DUP11 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xDB6 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7F2 SWAP1 PUSH1 0xFF AND PUSH2 0x750 JUMPI CALLER PUSH2 0x752 JUMP JUMPDEST DUP9 JUMPDEST DUP10 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x11A2 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 DUP3 EQ PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BBD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 MUL DUP3 ADD ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP1 DUP4 DUP1 ISZERO PUSH2 0x871 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8D5 JUMPI PUSH2 0x8B6 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x88E JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x8AA JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x5E0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8C2 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x877 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 GT ISZERO PUSH2 0x91F JUMPI POP PUSH1 0x0 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x5 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x92C JUMPI INVALID JUMPDEST ADD SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x993 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E2063616E206368616E67652061646D696E0000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA20 CALLER DUP4 DUP4 PUSH2 0x13AA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C3C PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x44F92D27ABDF4CFB6A7D712C3AF68F3BE086D4CA747AB802C36F67D6790060D8 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x61C JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ DUP1 PUSH2 0xB49 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xB63 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xBB4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72657175697265206D65746120617070726F76616C0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xBBF DUP4 DUP4 DUP4 PUSH2 0x13AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBD0 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1470 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC33 SWAP1 PUSH1 0xFF AND PUSH2 0xBF1 JUMPI CALLER PUSH2 0xBF3 JUMP JUMPDEST DUP7 JUMPDEST DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP PUSH2 0x1735 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC84 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C436865636B0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0xC99 JUMPI INVALID JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920737562206572633230000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xD03 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1470 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD41 SWAP1 PUSH1 0xFF AND PUSH2 0xD24 JUMPI CALLER PUSH2 0xD26 JUMP JUMPDEST DUP5 JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0xD92 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C436865636B0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 ADD PUSH1 0x40 MUL PUSH2 0x100 SUB DUP3 SWAP1 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BBD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE51 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ DUP1 PUSH2 0xE77 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xEA5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xEBF JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xF10 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x108F JUMPI PUSH1 0x0 PUSH1 0x8 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF4E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 LT PUSH2 0xF60 JUMPI INVALID JUMPDEST ADD SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP PUSH2 0xFA6 SWAP1 DUP6 SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xF83 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xF97 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH2 0x18E5 JUMP JUMPDEST SWAP4 POP PUSH2 0xFDB DUP4 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xFB8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xFCC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA6D49DCA DUP10 DUP10 DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xFFA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x106A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x107E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0xF35 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 SWAP1 SSTORE SWAP4 DUP10 AND DUP1 DUP4 MSTORE DUP5 DUP4 KECCAK256 DUP7 SWAP1 SSTORE CALLER DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10D4 JUMPI CALLER PUSH2 0x10D6 JUMP JUMPDEST DUP8 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1146 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x112E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1185 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x116D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B6 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x11C2 JUMPI POP PUSH1 0x1 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP10 DUP10 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x125F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1247 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x129E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1286 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12DA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12C2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1307 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x132C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C06 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F20616464726573730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x14DA JUMPI INVALID JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 POP DUP6 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x150A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x151F JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x15B6 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1565 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x15B6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F70657261746F72206E6F7420617070726F7665640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x15E2 SWAP1 DUP5 DUP5 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x18E5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 SLOAD PUSH2 0x161C SWAP2 DUP6 SWAP1 DUP6 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x18E5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE CALLER DUP3 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SLOAD SWAP1 DUP8 AND SWAP1 PUSH1 0xFF AND PUSH2 0x1659 JUMPI CALLER PUSH2 0x165B JUMP JUMPDEST DUP7 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH32 0xA6D49DCA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP4 AND SWAP2 PUSH4 0xA6D49DCA SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x172A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1749 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x1755 JUMPI POP PUSH1 0x1 PUSH2 0x18DA JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1768 JUMPI POP PUSH2 0x1766 DUP7 PUSH2 0x1A0E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1775 JUMPI POP PUSH1 0x1 PUSH2 0x18DA JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP11 DUP11 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1838 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1820 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1865 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x189C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 POP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18F5 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1928 JUMPI PUSH2 0x1905 DUP7 DUP7 PUSH2 0xD98 JUMP JUMPDEST SWAP1 POP PUSH2 0x1921 DUP7 DUP7 PUSH2 0x191C DUP5 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x1A97 AND JUMP JUMPDEST PUSH2 0x1AEF JUMP JUMPDEST SWAP2 POP PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1936 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x195D JUMPI PUSH2 0x1946 DUP7 DUP7 PUSH2 0xD98 JUMP JUMPDEST SWAP1 POP PUSH2 0x1921 DUP7 DUP7 PUSH2 0x191C DUP5 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x1B5F AND JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x196B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x197C JUMPI PUSH2 0x1921 DUP7 DUP7 DUP7 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F7065726174696F6E000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP3 EXTCODEHASH DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1A06 JUMPI POP DUP2 DUP2 EQ ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP11 PUSH2 0x2710 STATICCALL SWAP3 POP DUP1 MLOAD SWAP2 POP POP PUSH1 0x9E GAS GT PUSH2 0x1A83 JUMPI INVALID JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x13A0 JUMPI POP PUSH1 0x1 EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x61F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F766572666C6F77000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1B38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BE3 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x1 DUP4 ADD PUSH1 0x40 MUL PUSH2 0x100 SUB SWAP1 DUP2 SHL NOT DUP5 AND SWAP1 DUP3 SWAP1 SHL OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1BB6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x756E6465666C6F77000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP INVALID 0x49 PUSH15 0x636F6E73697374656E742061727261 PUSH26 0x206C656E677468206265747765656E2061726773416D6F756E74 KECCAK256 PUSH21 0x6F20777269746520696E2062696E20697320746F6F KECCAK256 PUSH13 0x617267657375706572206F7065 PUSH19 0x61746F722063616E2774206861766520746865 PUSH10 0x7220617070726F76616C 0x46 PUSH16 0x72416C6C206368616E6765646F6E6C79 KECCAK256 PUSH2 0x646D PUSH10 0x6E20697320616C6C6F77 PUSH6 0x6420746F2061 PUSH5 0x6420737570 PUSH6 0x72206F706572 PUSH2 0x746F PUSH19 0x73A265627A7A723058200B97030453CA4BB388 INVALID 0xb1 0x5f SHL LOG3 PUSH27 0xD8C0599C1DAAAFEF2FA6D44508ADCD0CE464736F6C634300050900 ORIGIN PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBAB CODESIZE SUB DUP1 PUSH2 0xBAB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP3 OR PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH2 0xB08 DUP1 PUSH2 0xA3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E9960C3 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA6D49DCA GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA6D49DCA EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xAC9FE421 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F0 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x6E9960C3 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x238 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x2B991746 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x654B748A EQ PUSH2 0x1C8 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x12C PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x572 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x59F JUMP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x659 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x73A JUMP JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B CALLER DUP5 DUP5 PUSH2 0x8EC JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8806792F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xFF PUSH21 0x10000000000000000000000000000000000000000 DUP5 DIV AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x8806792F SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x40E JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x4EA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x4E8 JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4C3 DUP2 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x9BF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x4F5 DUP5 DUP5 DUP5 PUSH2 0x9D1 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 PUSH2 0x527 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAB1 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F5 DUP5 DUP5 DUP5 PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH31 0xFDD58E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0xFF PUSH21 0x10000000000000000000000000000000000000000 DUP6 DIV AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH3 0xFDD58E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E2063616E206368616E67652061646D696E0000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x799 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920636F72650000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B CALLER DUP5 DUP5 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA85 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x44F92D27ABDF4CFB6A7D712C3AF68F3BE086D4CA747AB802C36F67D6790060D8 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x90C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x95D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F7665207769746820307830000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x9CB JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFE99049A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0xFF PUSH21 0x10000000000000000000000000000000000000000 DUP6 DIV AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xFE99049A SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP INVALID PUSH16 0x6E6C792061646D696E20697320616C6C PUSH16 0x77656420746F20616464207375706572 KECCAK256 PUSH16 0x70657261746F72736D73672E73656E64 PUSH6 0x7220213D2066 PUSH19 0x6F6D207C7C2073757065724F70657261746F72 LOG2 PUSH6 0x627A7A723058 KECCAK256 0x5e DUP10 RETURNDATASIZE 0xe 0x2f 0xcb 0xd7 LOG2 0xe2 DUP15 0x2f CALLDATACOPY ISZERO SWAP1 0xcd 0x5e DUP10 CODESIZE SHR DUP8 ORIGIN STOP ISZERO DUP11 0xde DUP5 SWAP14 DUP15 SWAP16 0xd6 0xed SWAP12 PUSH5 0x736F6C6343 STOP SDIV MULMOD STOP ORIGIN COINBASE PUSH14 0x6F756E7420746F20777269746520 PUSH10 0x6E2062696E2069732074 PUSH16 0x6F206C61726765000000000000000000 ",
        "sourceMap": "505:10598:66:-;;;1005:210;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:210:66;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1005:210:66;;;;;;;;;;;;;;;;;;;1110:26;1120:1;1005:210;;-1:-1:-1;;;;;1110:9:66;:26;:::i;:::-;1146;1156:1;1159:7;1168:3;-1:-1:-1;;;;;1146:9:66;:26;:::i;:::-;1182;1192:1;1195:7;1204:3;-1:-1:-1;;;;;1182:9:66;:26;:::i;:::-;1005:210;;;;505:10598;;1221:448;1301:12;1329:4;1335:5;1316:25;;;;;:::i;:::-;-1:-1:-1;;;;;1316:25:66;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1316:25:66;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;;;;1378:23:66;;;;;;1473:30;1378:23;;;;;;;;;1301:40;;-1:-1:-1;1378:135:66;;:23;:135;;;;1453:6;;1378:42;;;;;:135;;:::i;:::-;-1:-1:-1;;;;;1352:23:66;;;;;;:18;:23;;;;;:161;1546:6;1523:13;:20;;;;;;;;;;;:29;1563:46;;;;;;1593:1;1563:46;;;;;;-1:-1:-1;;;;;1563:46:66;;;;;;;;;;;;;;;:21;;;;;;:46;;;;;1593:1;1563:46;;;;;;1593:1;1563:21;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;1563:46:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1563:46:66;;;;1636:3;1620:6;1627:5;1620:13;;;;;;;;;;:19;;-1:-1:-1;;;;;;1620:19:66;-1:-1:-1;;;;;1620:19:66;;;;;;1654:8;;;;;;;;;;;;;;;;;;;1221:448;;;;:::o;1371:1018:35:-;1538:21;;;1610:10;:28;;;;;;;;;1606:746;;;1670:35;1684:12;1698:6;-1:-1:-1;;;;;1670:13:35;:35;:::i;:::-;1654:51;;1735:127;1768:12;1798:6;1822:26;1840:7;1822:13;:17;;;;;;:26;;;;:::i;:::-;-1:-1:-1;;;;;1735:15:35;:127;:::i;:::-;1719:143;;1606:746;;;1897:14;1883:10;:28;;;;;;;;;1879:473;;;1943:35;1957:12;1971:6;-1:-1:-1;;;;;1943:13:35;:35;:::i;:::-;1927:51;;2008:127;2041:12;2071:6;2095:26;2113:7;2095:13;:17;;;;;;:26;;;;:::i;1879:473::-;2170:18;2156:10;:32;;;;;;;;;2152:200;;;2220:46;2236:12;2250:6;2258:7;-1:-1:-1;;;;;2220:15:35;:46;:::i;2152:200::-;2297:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2152:200;-1:-1:-1;1371:1018:35;;;;;;:::o;2633:379::-;2863:1;2945:10;;272:2;2926:30;2920:3;:36;2974:23;;;-1:-1:-1;;;;;2973:32:35;2633:379;;;;:::o;1340:150:38:-;1423:5;;;1446:6;;;;1438:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:150;;;;:::o;3326:545:35:-;3450:7;3504:18;3494:28;;3473:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3696:1:35;3777:10;;272:2;3758:30;3752:3;:36;3820:17;;;3818:20;3806:32;;3843:20;;;;3805:59;3326:545;;;;;:::o;1137:133:38:-;1195:7;1227:1;1222;:6;;1214:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1258:5:38;;;1137:133::o;505:10598:66:-;;;;;;;;:::o;:::-;;;;;;;"
      },
      "deployedBytecode": {
        "linkReferences": {},
        "object": "",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F283970 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xEEB5A5D1 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xFE99049A EQ PUSH2 0x5A4 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x8F283970 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xAC9FE421 EQ PUSH2 0x47B JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x654B748A EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x6E9960C3 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x8806792F EQ PUSH2 0x40A JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x17F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x6C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x394 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x90C JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x934 JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 GT ISZERO PUSH2 0x5F3 JUMPI POP PUSH1 0x0 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x61C SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xD98 AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x6B8 JUMPI POP PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x72F DUP9 DUP9 DUP9 DUP9 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP13 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP12 DUP3 MSTORE SWAP1 SWAP4 POP DUP12 SWAP3 POP DUP11 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xDB6 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7F2 SWAP1 PUSH1 0xFF AND PUSH2 0x750 JUMPI CALLER PUSH2 0x752 JUMP JUMPDEST DUP9 JUMPDEST DUP10 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP14 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP13 DUP3 MSTORE SWAP1 SWAP4 POP DUP13 SWAP3 POP DUP12 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP3 POP DUP11 SWAP2 POP DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x11A2 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 DUP3 EQ PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BBD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 MUL DUP3 ADD ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP1 DUP4 DUP1 ISZERO PUSH2 0x871 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8D5 JUMPI PUSH2 0x8B6 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x88E JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x8AA JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x5E0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8C2 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x877 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 GT ISZERO PUSH2 0x91F JUMPI POP PUSH1 0x0 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x5 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x92C JUMPI INVALID JUMPDEST ADD SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x993 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E2063616E206368616E67652061646D696E0000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA20 CALLER DUP4 DUP4 PUSH2 0x13AA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C3C PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x44F92D27ABDF4CFB6A7D712C3AF68F3BE086D4CA747AB802C36F67D6790060D8 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x61C JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ DUP1 PUSH2 0xB49 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xB63 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xBB4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72657175697265206D65746120617070726F76616C0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xBBF DUP4 DUP4 DUP4 PUSH2 0x13AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBD0 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1470 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC33 SWAP1 PUSH1 0xFF AND PUSH2 0xBF1 JUMPI CALLER PUSH2 0xBF3 JUMP JUMPDEST DUP7 JUMPDEST DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP PUSH2 0x1735 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC84 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C436865636B0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0xC99 JUMPI INVALID JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920737562206572633230000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xD03 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1470 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD41 SWAP1 PUSH1 0xFF AND PUSH2 0xD24 JUMPI CALLER PUSH2 0xD26 JUMP JUMPDEST DUP5 JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0xD92 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C436865636B0000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 ADD PUSH1 0x40 MUL PUSH2 0x100 SUB DUP3 SWAP1 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BBD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE51 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ DUP1 PUSH2 0xE77 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xEA5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xEBF JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xF10 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x108F JUMPI PUSH1 0x0 PUSH1 0x8 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF4E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 LT PUSH2 0xF60 JUMPI INVALID JUMPDEST ADD SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP PUSH2 0xFA6 SWAP1 DUP6 SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xF83 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xF97 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH2 0x18E5 JUMP JUMPDEST SWAP4 POP PUSH2 0xFDB DUP4 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xFB8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xFCC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA6D49DCA DUP10 DUP10 DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xFFA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x106A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x107E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0xF35 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 SWAP1 SSTORE SWAP4 DUP10 AND DUP1 DUP4 MSTORE DUP5 DUP4 KECCAK256 DUP7 SWAP1 SSTORE CALLER DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10D4 JUMPI CALLER PUSH2 0x10D6 JUMP JUMPDEST DUP8 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1146 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x112E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1185 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x116D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B6 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x11C2 JUMPI POP PUSH1 0x1 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP10 DUP10 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x125F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1247 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x129E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1286 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12DA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12C2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1307 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x132C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C06 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F20616464726573730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x14DA JUMPI INVALID JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 POP DUP6 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x150A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x151F JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x15B6 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1565 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x15B6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F70657261746F72206E6F7420617070726F7665640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x15E2 SWAP1 DUP5 DUP5 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x18E5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 SLOAD PUSH2 0x161C SWAP2 DUP6 SWAP1 DUP6 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x18E5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE CALLER DUP3 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SLOAD SWAP1 DUP8 AND SWAP1 PUSH1 0xFF AND PUSH2 0x1659 JUMPI CALLER PUSH2 0x165B JUMP JUMPDEST DUP7 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH32 0xA6D49DCA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP4 AND SWAP2 PUSH4 0xA6D49DCA SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x172A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1749 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x1755 JUMPI POP PUSH1 0x1 PUSH2 0x18DA JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1768 JUMPI POP PUSH2 0x1766 DUP7 PUSH2 0x1A0E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1775 JUMPI POP PUSH1 0x1 PUSH2 0x18DA JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP11 DUP11 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1838 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1820 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1865 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x189C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 POP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18F5 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1928 JUMPI PUSH2 0x1905 DUP7 DUP7 PUSH2 0xD98 JUMP JUMPDEST SWAP1 POP PUSH2 0x1921 DUP7 DUP7 PUSH2 0x191C DUP5 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x1A97 AND JUMP JUMPDEST PUSH2 0x1AEF JUMP JUMPDEST SWAP2 POP PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1936 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x195D JUMPI PUSH2 0x1946 DUP7 DUP7 PUSH2 0xD98 JUMP JUMPDEST SWAP1 POP PUSH2 0x1921 DUP7 DUP7 PUSH2 0x191C DUP5 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x1B5F AND JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x196B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x197C JUMPI PUSH2 0x1921 DUP7 DUP7 DUP7 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F7065726174696F6E000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP3 EXTCODEHASH DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1A06 JUMPI POP DUP2 DUP2 EQ ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP11 PUSH2 0x2710 STATICCALL SWAP3 POP DUP1 MLOAD SWAP2 POP POP PUSH1 0x9E GAS GT PUSH2 0x1A83 JUMPI INVALID JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x13A0 JUMPI POP PUSH1 0x1 EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x61F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F766572666C6F77000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1B38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BE3 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x1 DUP4 ADD PUSH1 0x40 MUL PUSH2 0x100 SUB SWAP1 DUP2 SHL NOT DUP5 AND SWAP1 DUP3 SWAP1 SHL OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1BB6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x756E6465666C6F77000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP INVALID 0x49 PUSH15 0x636F6E73697374656E742061727261 PUSH26 0x206C656E677468206265747765656E2061726773416D6F756E74 KECCAK256 PUSH21 0x6F20777269746520696E2062696E20697320746F6F KECCAK256 PUSH13 0x617267657375706572206F7065 PUSH19 0x61746F722063616E2774206861766520746865 PUSH10 0x7220617070726F76616C 0x46 PUSH16 0x72416C6C206368616E6765646F6E6C79 KECCAK256 PUSH2 0x646D PUSH10 0x6E20697320616C6C6F77 PUSH6 0x6420746F2061 PUSH5 0x6420737570 PUSH6 0x72206F706572 PUSH2 0x746F PUSH19 0x73A265627A7A723058200B97030453CA4BB388 INVALID 0xb1 0x5f SHL LOG3 PUSH27 0xD8C0599C1DAAAFEF2FA6D44508ADCD0CE464736F6C634300050900 ORIGIN ",
        "sourceMap": "505:10598:66:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:10598:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6332:245;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6332:245:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8242:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8242:166:66;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4247:568;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;4247:568:66;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4247:568:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4247:568:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4247:568:66;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4247:568:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4247:568:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4247:568:66;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4247:568:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4247:568:66;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;4247:568:66;;-1:-1:-1;4247:568:66;-1:-1:-1;4247:568:66;:::i;:::-;;6583:505;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6583:505:66;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6583:505:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6583:505:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6583:505:66;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6583:505:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6583:505:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;6583:505:66;;-1:-1:-1;6583:505:66;-1:-1:-1;6583:505:66;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6583:505:66;;;;;;;;;;;;;;;;;970:109:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;970:109:7;-1:-1:-1;;;;;970:109:7;;:::i;264:82:1:-;;;:::i;:::-;;;;-1:-1:-1;;;;;264:82:1;;;;;;;;;;;;;;1675:160:66;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1675:160:66;;:::i;469:197:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;469:197:1;-1:-1:-1;;;;;469:197:1;;:::i;7488:140:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7488:140:66;;;;;;;;;;:::i;484:302:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;484:302:7;;;;;;;;;;:::i;8019:217:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8019:217:66;;;;;;;;;;:::i;7094:389::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7094:389:66;;;;;;;;;;;;;;;;;;;:::i;3570:573::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;3570:573:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3570:573:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3570:573:66;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3570:573:66;;-1:-1:-1;3570:573:66;-1:-1:-1;3570:573:66;:::i;1841:606::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;1841:606:66;;;;;;;;;;;;;;;;;;;;;;:::i;6332:245::-;6430:7;6468:1;6457:8;:12;6453:51;;;-1:-1:-1;6492:1:66;6485:8;;6453:51;-1:-1:-1;;;;;6520:26:66;;;;;;:18;:26;;;;;;:50;;6561:8;6520:50;:40;:50;:::i;:::-;6513:57;;6332:245;;;;;:::o;8242:166::-;8303:4;8365:16;;;;;;:36;;-1:-1:-1;8385:16:66;;;;;8365:36;8358:43;;8242:166;;;;:::o;4247:568::-;4446:45;4465:5;4472:3;4477:4;;4446:45;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;4446:45:66;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4483:7:66;;-1:-1:-1;4483:7:66;;;;4446:45;;;4483:7;;4446:45;4483:7;4446:45;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;4446:18:66;;-1:-1:-1;;;4446:45:66:i;:::-;4638:10;4613:36;;;;:24;:36;;;;;;4558:240;;4613:36;;:57;;4660:10;4613:57;;;4652:5;4613:57;4688:5;4711:3;4732:4;;4558:240;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;4558:240:66;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4754:7:66;;-1:-1:-1;4754:7:66;;;;4558:240;;;4754:7;;4558:240;4754:7;4558:240;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;4558:240:66;;;;137:4:-1;4558:240:66;;;;;;;;;;;;;;;;;;-1:-1:-1;4779:5:66;;-1:-1:-1;4779:5:66;;;;4558:240;;4779:5;;;;4558:240;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;4558:37:66;;-1:-1:-1;;;4558:240:66:i;:::-;4501:307;;;;;;4247:568;;;;;;;;:::o;6583:505::-;6710:16;6759:34;;;6738:119;;;;-1:-1:-1;;;6738:119:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6895:31;;;;;;;;;;;;;;;;6867:25;;6909:9;6895:31;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6895:31:66;-1:-1:-1;6867:59:66;-1:-1:-1;6941:9:66;6936:121;6956:20;;;6936:121;;;7011:35;7021:7;;7029:1;7021:10;;;;;;;;;;;;;-1:-1:-1;;;;;7021:10:66;7033:9;;7043:1;7033:12;;;;;;;;;;;;;7011:9;:35::i;:::-;6997:8;7006:1;6997:11;;;;;;;;;;;;;;;;;:49;6978:3;;6936:121;;;-1:-1:-1;7073:8:66;6583:505;-1:-1:-1;;;;;6583:505:66:o;970:109:7:-;-1:-1:-1;;;;;1052:20:7;1029:4;1052:20;;;:15;:20;;;;;;;;;970:109::o;264:82:1:-;307:7;333:6;-1:-1:-1;;;;;333:6:1;264:82;:::o;1675:160:66:-;1729:7;1758:1;1752:3;:7;1748:46;;;-1:-1:-1;1782:1:66;1775:8;;1748:46;1810:13;1824:3;1810:18;;;;;;;;;;1675:160;-1:-1:-1;;1675:160:66:o;469:197:1:-;549:6;;-1:-1:-1;;;;;549:6:1;535:10;:20;527:60;;;;;-1:-1:-1;;;527:60:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;615:6;;602:30;;;-1:-1:-1;;;;;615:6:1;;;602:30;;;;;;;;;;;;;;;;;;;;;642:6;:17;;;;-1:-1:-1;;;;;642:17:1;;;;;;;;;;469:197::o;7488:140:66:-;7569:52;7588:10;7600:9;7611;7569:18;:52::i;:::-;7488:140;;:::o;484:302:7:-;601:6;;-1:-1:-1;;;;;601:6:7;587:10;:20;566:111;;;;-1:-1:-1;;;566:111:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;687:30:7;;;;;;:15;:30;;;;;;;;;:40;;-1:-1:-1;;687:40:7;;;;;;;;;;742:37;;;;;;;;;;;;;;;;;;;;;484:302;;:::o;8019:217:66:-;-1:-1:-1;;;;;8165:23:66;;;8127:15;8165:23;;;:15;:23;;;;;;;;:34;;;;;;;;;;;;;;;:64;;-1:-1:-1;;;;;;;8203:26:66;;;;;:15;:26;;;;;;;;;8019:217;-1:-1:-1;8019:217:66:o;7094:389::-;7246:10;-1:-1:-1;;;;;7246:21:66;;;;:77;;-1:-1:-1;7312:10:66;7287:36;;;;:24;:36;;;;;;;;7246:77;:124;;;-1:-1:-1;7359:10:66;7343:27;;;;:15;:27;;;;;;;;7246:124;7225:192;;;;;-1:-1:-1;;;7225:192:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;7427:49;7446:7;7455:9;7466;7427:18;:49::i;:::-;7094:389;;;:::o;3570:573::-;3740:38;3754:5;3761:3;3766;3771:6;3740:13;:38::i;:::-;3920:10;3895:36;;;;:24;:36;;;;;;3845:256;;3895:36;;:57;;3942:10;3895:57;;;3934:5;3895:57;3970:5;3993:3;4014;4035:6;4059:5;;3845:256;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;99:1;-1:-1;3845:32:66;;-1:-1:-1;;3845:256:66:i;:::-;3788:348;;;;;-1:-1:-1;;;3788:348:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;3570:573;;;;;;:::o;1841:606::-;2007:6;2014:3;2007:11;;;;;;;;;-1:-1:-1;;;;;2007:11:66;1985:10;:34;1977:61;;;;;-1:-1:-1;;;1977:61:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;2048:38;2062:5;2069:3;2074;2079:6;2048:13;:38::i;:::-;2228:10;2203:36;;;;:24;:36;;;;;;2153:252;;2203:36;;:57;;2250:10;2203:57;;;2242:5;2203:57;2278:5;2301:3;2322;2343:6;2153:252;;;;;;;;;;;;2387:4;2153:32;:252::i;:::-;2096:344;;;;;-1:-1:-1;;;2096:344:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;1841:606;;;;:::o;2633:379:35:-;2863:1;2945:10;;272:2;2926:30;2920:3;:36;2974:23;;;2829:35;2973:32;2633:379;;;;:::o;4821:1505:66:-;5019:7;:14;5004:4;:11;:29;4983:114;;;;-1:-1:-1;;;4983:114:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5115:17:66;;5107:47;;;;;-1:-1:-1;;;5107:47:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5185:19:66;;5194:10;5185:19;;:66;;-1:-1:-1;5240:10:66;5224:27;;;;:15;:27;;;;;;;;5185:66;:120;;;-1:-1:-1;;;;;;5271:22:66;;;;;;:15;:22;;;;;;;;5294:10;5271:34;;;;;;;;;;5185:120;:176;;;-1:-1:-1;5350:10:66;5325:36;;;;:24;:36;;;;;;;;5185:176;5164:237;;;;;-1:-1:-1;;;5164:237:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5430:25:66;;;5412:15;5430:25;;;:18;:25;;;;;;;5481:23;;;;;;;;;5514:536;5538:4;:11;5534:1;:15;5514:536;;;5570:14;5587:6;5594:4;5599:1;5594:7;;;;;;;;;;;;;;5587:15;;;;;;;;;5699:7;;-1:-1:-1;;;;;5587:15:66;;;;-1:-1:-1;5626:166:66;;5674:7;;5699:4;;5704:1;;5699:7;;;;;;;;;;;;5724;5732:1;5724:10;;;;;;;;;;;;;;5752:26;5626:30;:166::i;:::-;5616:176;;5814:164;5862:5;5885:4;5890:1;5885:7;;;;;;;;;;;;;;5910;5918:1;5910:10;;;;;;;;;;;;;;5938:26;5814:30;:164::i;:::-;5806:172;;5992:5;-1:-1:-1;;;;;5992:23:66;;6016:5;6023:3;6028:7;6036:1;6028:10;;;;;;;;;;;;;;5992:47;;;;;;;;;;;;;-1:-1:-1;;;;;5992:47:66;-1:-1:-1;;;;;5992:47:66;;;;;;-1:-1:-1;;;;;5992:47:66;-1:-1:-1;;;;;5992:47:66;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5992:47:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5551:3:66;;;;;-1:-1:-1;5514:536:66;;-1:-1:-1;;5514:536:66;;-1:-1:-1;;;;;;6059:25:66;;;;;;;:18;:25;;;;;;;;:35;;;6104:23;;;;;;;;;:31;;;6202:10;6177:36;;:24;:36;;;;;;;;;:57;;6224:10;6177:57;;;6216:5;6177:57;-1:-1:-1;;;;;6150:169:66;;6284:4;6302:7;6150:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6150:169:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6150:169:66;;;;;;;;;;;;;;;;;;;4821:1505;;;;;;:::o;10549:551::-;10784:4;10805:16;:3;-1:-1:-1;;;;;10805:14:66;;:16::i;:::-;10800:59;;-1:-1:-1;10844:4:66;10837:11;;10800:59;10868:13;10905:3;-1:-1:-1;;;;;10884:48:66;;10946:9;10969:5;10988:4;11006:7;11027:5;10884:158;;;;;;;;;;;;;-1:-1:-1;;;;;10884:158:66;-1:-1:-1;;;;;10884:158:66;;;;;;-1:-1:-1;;;;;10884:158:66;-1:-1:-1;;;;;10884:158:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10884:158:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10884:158:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10884:158:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10884:158:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10884:158:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10884:158:66;11060:32;;11070:22;11060:32;;-1:-1:-1;;10549:551:66;;;;;;;;;:::o;7633:381::-;-1:-1:-1;;;;;7784:26:66;;;;;;:15;:26;;;;;;;;7783:27;7762:128;;;;-1:-1:-1;;;7762:128:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7900:24:66;;;;;;;:15;:24;;;;;;;;:35;;;;;;;;;;;;;:47;;-1:-1:-1;;7900:47:66;;;;;;;;;;7962:45;;;;;;;;;;;;;;;;;7633:381;;;:::o;2453:1111::-;-1:-1:-1;;;;;2598:17:66;;2590:48;;;;;-1:-1:-1;;;2590:48:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;2648:14;2665:6;2672:3;2665:11;;;;;;;;;-1:-1:-1;;;;;2665:11:66;;;;-1:-1:-1;2703:19:66;;2712:10;2703:19;;;;:72;;-1:-1:-1;2764:10:66;2739:36;;;;:24;:36;;;;;;;;2738:37;2703:72;:116;;;;-1:-1:-1;2791:10:66;-1:-1:-1;;;;;2791:28:66;;;;2703:116;2686:334;;;2885:10;2869:27;;;;:15;:27;;;;;;;;;:85;;-1:-1:-1;;;;;;2920:22:66;;;;;;:15;:22;;;;;;;;2943:10;2920:34;;;;;;;;;;2869:85;2844:165;;;;;-1:-1:-1;;;2844:165:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3058:25:66;;;;;;:18;:25;;;;;;:98;;3116:3;3121:6;3129:26;3058:98;:57;:98;:::i;:::-;-1:-1:-1;;;;;3030:25:66;;;;;;;:18;:25;;;;;;:126;;;;3192:23;;;;;;;;;:129;;3248:3;;3265:6;;3192:129;:42;:129;:::i;:::-;-1:-1:-1;;;;;3166:23:66;;;;;;;:18;:23;;;;;;;;:155;;;;3389:10;3364:36;;:24;:36;;;;;;;3336:168;;;;3364:36;;:57;;3411:10;3364:57;;;3403:5;3364:57;-1:-1:-1;;;;;3336:168:66;;3471:3;3488:6;3336:168;;;;;;;;;;;;;;;;;;;;;;;;3514:43;;;;;;-1:-1:-1;;;;;3514:43:66;;;;;;;;;;;;;;;;;;;;;;:23;;;;;;:43;;;;;-1:-1:-1;;3514:43:66;;;;;;;;-1:-1:-1;3514:23:66;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;3514:43:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3514:43:66;;;;2453:1111;;;;;:::o;9876:667::-;10108:4;10129:16;:3;-1:-1:-1;;;;;10129:14:66;;:16::i;:::-;10124:59;;-1:-1:-1;10168:4:66;10161:11;;10124:59;10196:7;:39;;;;;10208:27;10231:3;10208:22;:27::i;:::-;10207:28;10196:39;10192:81;;;-1:-1:-1;10258:4:66;10251:11;;10192:81;8519:10;10520:16;;10301:235;;;10322:3;-1:-1:-1;;;;;10301:43:66;;10366:9;10397:5;10424:3;10449:6;10477:5;10301:199;;;;;;;;;;;;;-1:-1:-1;;;;;10301:199:66;-1:-1:-1;;;;;10301:199:66;;;;;;-1:-1:-1;;;;;10301:199:66;-1:-1:-1;;;;;10301:199:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10301:199:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10301:199:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10301:199:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10301:199:66;:235;;;;-1:-1:-1;9876:667:66;;;;;;;;;;:::o;1371:1018:35:-;1538:21;;;1610:10;:28;;;;;;;;;1606:746;;;1670:35;1684:12;1698:6;1670:13;:35::i;:::-;1654:51;-1:-1:-1;1735:127:35;1768:12;1798:6;1822:26;1654:51;1840:7;1822:26;:17;:26;:::i;:::-;1735:15;:127::i;:::-;1719:143;;1606:746;;;1897:14;1883:10;:28;;;;;;;;;1879:473;;;1943:35;1957:12;1971:6;1943:13;:35::i;:::-;1927:51;-1:-1:-1;2008:127:35;2041:12;2071:6;2095:26;1927:51;2113:7;2095:26;:17;:26;:::i;1879:473::-;2170:18;2156:10;:32;;;;;;;;;2152:200;;;2220:46;2236:12;2250:6;2258:7;2220:15;:46::i;2152:200::-;2297:27;;;-1:-1:-1;;;2297:27:35;;;;;;;;;;;;;;;;;;;;;;;;;;;2152:200;-1:-1:-1;1371:1018:35;;;;;;:::o;195:451:30:-;252:4;350:66;552:17;;596:15;;;;;:42;;;627:11;615:8;:23;;596:42;588:51;195:451;-1:-1:-1;;;;195:451:30:o;8644:1226:66:-;9002:4;8996:11;8836:8;9079:19;;;8789;9174:4;9167:12;;9160:39;;;8742:4;;8789:19;;8836:8;8742:4;;;;9539;8996:11;9429:4;8996:11;9337:9;9303:5;9275:282;9264:293;;9616:1;9610:8;9600:18;;8973:674;9820:3;9808:9;:15;9801:23;;;;9841:7;:22;;;;-1:-1:-1;9862:1:66;9852:11;;9834:29;-1:-1:-1;;;;;8644:1226:66:o;1340:150:38:-;1423:5;;;1446:6;;;;1438:27;;;;;-1:-1:-1;;;1438:27:38;;;;;;;;;;;;;;;;;;;;;;;;;;;3326:545:35;3450:7;3504:18;3494:28;;3473:110;;;;-1:-1:-1;;;3473:110:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3662:35:35;3696:1;3777:10;;272:2;3758:30;3752:3;:36;3820:17;;;3818:20;3806:32;;3843:20;;;;3805:59;3326:545;;;;;:::o;1137:133:38:-;1195:7;1227:1;1222;:6;;1214:27;;;;;-1:-1:-1;;;1214:27:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1258:5:38;;;1137:133::o"
      },
      "methodIdentifiers": {
        "balanceOf(address,uint256)": "00fdd58e",
        "balanceOfBatch(address[],uint256[])": "4e1273f4",
        "changeAdmin(address)": "8f283970",
        "getAdmin()": "6e9960c3",
        "isApprovedForAll(address,address)": "e985e9c5",
        "isSuperOperator(address)": "654b748a",
        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
        "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
        "setApprovalForAll(address,bool)": "a22cb465",
        "setApprovalForAllFor(address,address,bool)": "eeb5a5d1",
        "setSuperOperator(address,bool)": "ac9fe421",
        "supplyOf(uint256)": "8806792f",
        "supportsInterface(bytes4)": "01ffc9a7",
        "transferFrom(address,address,uint256,uint256)": "fe99049a"
      }
    },
    "metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.e560f70d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owners\",\"type\":\"address[]\"},{\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isSuperOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"supplyOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"superOperator\",\"type\":\"address\"},{\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setSuperOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"isOperator\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAllFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"supply0\",\"type\":\"uint256\"},{\"name\":\"supply1\",\"type\":\"uint256\"},{\"name\":\"supply2\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"orb\",\"type\":\"address\"}],\"name\":\"ORB\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"superOperator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"SuperOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"changeAdmin(address)\":{\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"getAdmin()\":{\"return\":\"the current administrator of this contract.\"},\"isSuperOperator(address)\":{\"params\":{\"who\":\"The address to query.\"},\"return\":\"whether the address has superOperator rights.\"},\"setSuperOperator(address,bool)\":{\"params\":{\"enabled\":\"set whether the superOperator is enabled or disabled.\",\"superOperator\":\"address that will be given/removed superOperator right.\"}}}},\"userdoc\":{\"methods\":{\"changeAdmin(address)\":{\"notice\":\"change the administrator to be `newAdmin`.\"},\"getAdmin()\":{\"notice\":\"gives the current administrator of this contract.\"},\"isSuperOperator(address)\":{\"notice\":\"check whether address `who` is given superOperator rights.\"},\"setSuperOperator(address,bool)\":{\"notice\":\"Enable or disable the ability of `superOperator` to transfer tokens of all (superOperator rights).\"}}}},\"settings\":{\"compilationTarget\":{\"src/Orbs/ORBCore.sol\":\"ORBCore\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts_common/src/BaseWithStorage/Admin.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\ncontract Admin {\\n\\n    address internal _admin;\\n\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @notice gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @notice change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require (msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xf3763fa108235379b48cf8fe9a708692fcb077250d9974351fd636ff0baf84bf\"},\"contracts_common/src/BaseWithStorage/SuperOperators.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract SuperOperators is Admin {\\n\\n    mapping(address => bool) internal _superOperators;\\n\\n    event SuperOperator(address superOperator, bool enabled);\\n\\n    /// @notice Enable or disable the ability of `superOperator` to transfer tokens of all (superOperator rights).\\n    /// @param superOperator address that will be given/removed superOperator right.\\n    /// @param enabled set whether the superOperator is enabled or disabled.\\n    function setSuperOperator(address superOperator, bool enabled) external {\\n        require(\\n            msg.sender == _admin,\\n            \\\"only admin is allowed to add super operators\\\"\\n        );\\n        _superOperators[superOperator] = enabled;\\n        emit SuperOperator(superOperator, enabled);\\n    }\\n\\n    /// @notice check whether address `who` is given superOperator rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has superOperator rights.\\n    function isSuperOperator(address who) public view returns (bool) {\\n        return _superOperators[who];\\n    }\\n}\\n\",\"keccak256\":\"0x22354cf60ccf77a6de61c13bdaf4e3094d115b960ae563b0527622c846a12abb\"},\"contracts_common/src/Interfaces/ERC1155.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n    @title ERC-1155 Multi Token Standard\\n    @dev See https://eips.ethereum.org/EIPS/eip-1155\\n    Note: The ERC-165 identifier for this interface is 0xd9b67a26.\\n */\\ninterface ERC1155 {\\n\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 value\\n    );\\n\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n        @notice Transfers `value` amount of an `id` from  `from` to `to`  (with safety call).\\n        @dev Caller must be approved to manage the tokens being transferred out of the `from` account (see \\\"Approval\\\" section of the standard).\\n        MUST revert if `to` is the zero address.\\n        MUST revert if balance of holder for token `id` is lower than the `value` sent.\\n        MUST revert on any other error.\\n        MUST emit the `TransferSingle` event to reflect the balance change (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        After the above conditions are met, this function MUST check if `to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        @param from    Source address\\n        @param to      Target address\\n        @param id      ID of the token type\\n        @param value   Transfer amount\\n        @param data    Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `to`\\n    */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n        @notice Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified (with safety call).\\n        @dev Caller must be approved to manage the tokens being transferred out of the `from` account (see \\\"Approval\\\" section of the standard).\\n        MUST revert if `to` is the zero address.\\n        MUST revert if length of `ids` is not the same as length of `values`.\\n        MUST revert if any of the balance(s) of the holder(s) for token(s) in `ids` is lower than the respective amount(s) in `values` sent to the recipient.\\n        MUST revert on any other error.\\n        MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc).\\n        After the above conditions for the transfer(s) in the batch are met, this function MUST check if `to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        @param from    Source address\\n        @param to      Target address\\n        @param ids     IDs of each token type (order and length must match _values array)\\n        @param values  Transfer amounts per token type (order and length must match _ids array)\\n        @param data    Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `to`\\n    */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n        @notice Get the balance of an account's tokens.\\n        @param owner  The address of the token holder\\n        @param id     ID of the token\\n        @return        The _owner's balance of the token type requested\\n     */\\n    function balanceOf(address owner, uint256 id)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n        @notice Get the balance of multiple account/token pairs\\n        @param owners The addresses of the token holders\\n        @param ids    ID of the tokens\\n        @return        The _owner's balance of the token types requested (i.e. balance for each (owner, id) pair)\\n     */\\n    function balanceOfBatch(address[] calldata owners, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n        @notice Enable or disable approval for a third party (\\\"operator\\\") to manage all of the caller's tokens.\\n        @dev MUST emit the ApprovalForAll event on success.\\n        @param operator  Address to add to the set of authorized operators\\n        @param approved  True if the operator is approved, false to revoke approval\\n    */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n        @notice Queries the approval status of an operator for a given owner.\\n        @param owner     The owner of the tokens\\n        @param operator  Address of authorized operator\\n        @return           True if the operator is approved, false if not\\n    */\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xadc315968f24479f9e6e5cbdfb32a3a8d6b83061afb0680ad3a73959e40e447f\"},\"contracts_common/src/Interfaces/ERC1155TokenReceiver.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n    Note: The ERC-165 identifier for this interface is 0x4e2312e0.\\n*/\\ninterface ERC1155TokenReceiver {\\n    /**\\n        @notice Handle the receipt of a single ERC1155 token type.\\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.\\n        This function MUST return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61) if it accepts the transfer.\\n        This function MUST revert if it rejects the transfer.\\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\\n        @param operator  The address which initiated the transfer (i.e. msg.sender)\\n        @param from      The address which previously owned the token\\n        @param id        The ID of the token being transferred\\n        @param value     The amount of tokens being transferred\\n        @param data      Additional data with no specified format\\n        @return           `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n    */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n        @notice Handle the receipt of multiple ERC1155 token types.\\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.\\n        This function MUST return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81) if it accepts the transfer(s).\\n        This function MUST revert if it rejects the transfer(s).\\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\\n        @param operator  The address which initiated the batch transfer (i.e. msg.sender)\\n        @param from      The address which previously owned the token\\n        @param ids       An array containing ids of each token being transferred (order and length must match _values array)\\n        @param values    An array containing amounts of each token being transferred (order and length must match _ids array)\\n        @param data      Additional data with no specified format\\n        @return           `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n    */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x915c81f5684876945b81020f620aa6261a7bf3a1bf0c07f1eada0e88200872de\"},\"contracts_common/src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20Basic.sol\\\";\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\n/* interface */\\ncontract ERC20 is ERC20Basic {\\n    function transferFrom(address from, address to, uint256 value)\\n        public\\n        returns (bool);\\n    function approve(address spender, uint256 value) public returns (bool);\\n    function allowance(address owner, address spender)\\n        public\\n        view\\n        returns (uint256);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0xa8cb63790e43bb77235530d0add180a84e9eb20c95173059e7d783c599c199b0\"},\"contracts_common/src/Interfaces/ERC20Basic.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC20Basic DRAFT\\n * @dev Simpler version of ERC20 interface\\n * See https://github.com/ethereum/EIPs/issues/179\\n */\\n/* interface */\\ncontract ERC20Basic {\\n    function totalSupply() public view returns (uint256);\\n    function balanceOf(address who) public view returns (uint256);\\n    function transfer(address to, uint256 value) public returns (bool);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n}\\n\",\"keccak256\":\"0x7d333b4cd97e3fa0a67f3f20d79e6a46d5c81a8f7d506aa24c624ec6e4e913b9\"},\"contracts_common/src/Interfaces/ERC20Events.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/* interface */\\ncontract ERC20Events {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0xee09c10a3f9adc913227efdcd94ce44e05b59b04717f8f868153d356bd03f5d2\"},\"contracts_common/src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0x2ad037f43ea9a899526bd911737727d027ce8a2bc1cf615bdf5a1706d400afd6\"},\"contracts_common/src/Libraries/BytesUtil.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nlibrary BytesUtil {\\n    function memcpy(uint256 dest, uint256 src, uint256 len) internal pure {\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        uint256 mask = 256**(32 - len) - 1;\\n        assembly {\\n            let srcpart := and(mload(src), not(mask))\\n            let destpart := and(mload(dest), mask)\\n            mstore(dest, or(destpart, srcpart))\\n        }\\n    }\\n\\n    function pointerToBytes(uint256 src, uint256 len)\\n        internal\\n        pure\\n        returns (bytes memory)\\n    {\\n        bytes memory ret = new bytes(len);\\n        uint256 retptr;\\n        assembly {\\n            retptr := add(ret, 32)\\n        }\\n\\n        memcpy(retptr, src, len);\\n        return ret;\\n    }\\n\\n    function addressToBytes(address a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(\\n                add(m, 20),\\n                xor(0x140000000000000000000000000000000000000000, a)\\n            )\\n            mstore(0x40, add(m, 52))\\n            b := m\\n        }\\n    }\\n\\n    function uint256ToBytes(uint256 a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(add(m, 32), a)\\n            mstore(0x40, add(m, 64))\\n            b := m\\n        }\\n    }\\n\\n    function doFirstParamEqualsAddress(bytes memory data, address _address)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + 32)) {\\n            return false;\\n        }\\n        uint256 value;\\n        assembly {\\n            value := mload(add(data, 36))\\n        }\\n        return value == uint256(_address);\\n    }\\n\\n    function doParamEqualsUInt256(bytes memory data, uint256 i, uint256 value)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + (i + 1) * 32)) {\\n            return false;\\n        }\\n        uint256 offset = 36 + i * 32;\\n        uint256 valuePresent;\\n        assembly {\\n            valuePresent := mload(add(data, offset))\\n        }\\n        return valuePresent == value;\\n    }\\n\\n    function overrideFirst32BytesWithAddress(\\n        bytes memory data,\\n        address _address\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n\\n        bytes memory addressBytes = addressToBytes(_address);\\n        uint256 src;\\n        assembly {\\n            src := add(addressBytes, 32)\\n        }\\n\\n        memcpy(dest, src, 20);\\n        return data;\\n    }\\n\\n    function overrideFirstTwo32BytesWithAddressAndInt(\\n        bytes memory data,\\n        address _address,\\n        uint256 _value\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        uint256 src;\\n\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n        bytes memory bbytes = addressToBytes(_address);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 20);\\n\\n        assembly {\\n            dest := add(data, 68)\\n        } // 48 = 32 (offset) + 4 (func sig) + 32 (next slot)\\n        bbytes = uint256ToBytes(_value);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 32);\\n\\n        return data;\\n    }\\n}\\n\",\"keccak256\":\"0xb5c236938e1f71524127371a015836e83103c5ac1b4ed7b7f22892a8c0429e10\"},\"contracts_common/src/Libraries/ObjectLib64.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./SafeMathWithRequire.sol\\\";\\n\\nlibrary ObjectLib64 {\\n    using SafeMathWithRequire for uint256;\\n    enum Operations {ADD, SUB, REPLACE}\\n    // Constants regarding bin or chunk sizes for balance packing\\n    uint256 constant TYPES_BITS_SIZE = 64; // Max size of each object\\n    uint256 constant TYPES_PER_UINT256 = 256 / TYPES_BITS_SIZE; // Number of types per uint256\\n\\n    //\\n    // Objects and Tokens Functions\\n    //\\n\\n    /**\\n  * @dev Return the bin number and index within that bin where ID is\\n  * @param _tokenId Object type\\n  * @return (Bin number, ID's index within that bin)\\n  */\\n    function getTokenBinIndex(uint256 _tokenId)\\n        internal\\n        pure\\n        returns (uint256 bin, uint256 index)\\n    {\\n        bin = (_tokenId * TYPES_BITS_SIZE) / 256;\\n        index = _tokenId % TYPES_PER_UINT256;\\n        return (bin, index);\\n    }\\n\\n    /**\\n  * @dev update the balance of a type provided in _binBalances\\n  * @param _binBalances Uint256 containing the balances of objects\\n  * @param _index Index of the object in the provided bin\\n  * @param _amount Value to update the type balance\\n  * @param _operation Which operation to conduct :\\n  *     Operations.REPLACE : Replace type balance with _amount\\n  *     Operations.ADD     : ADD _amount to type balance\\n  *     Operations.SUB     : Substract _amount from type balance\\n  */\\n    function updateTokenBalance(\\n        uint256 _binBalances,\\n        uint256 _index,\\n        uint256 _amount,\\n        Operations _operation\\n    ) internal pure returns (uint256 newBinBalance) {\\n        uint256 objectBalance = 0;\\n        if (_operation == Operations.ADD) {\\n            objectBalance = getValueInBin(_binBalances, _index);\\n            newBinBalance = writeValueInBin(\\n                _binBalances,\\n                _index,\\n                objectBalance.add(_amount)\\n            );\\n        } else if (_operation == Operations.SUB) {\\n            objectBalance = getValueInBin(_binBalances, _index);\\n            newBinBalance = writeValueInBin(\\n                _binBalances,\\n                _index,\\n                objectBalance.sub(_amount)\\n            );\\n        } else if (_operation == Operations.REPLACE) {\\n            newBinBalance = writeValueInBin(_binBalances, _index, _amount);\\n        } else {\\n            revert(\\\"Invalid operation\\\"); // Bad operation\\n        }\\n\\n        return newBinBalance;\\n    }\\n    /*\\n  * @dev return value in _binValue at position _index\\n  * @param _binValue uint256 containing the balances of TYPES_PER_UINT256 types\\n  * @param _index index at which to retrieve value\\n  * @return Value at given _index in _bin\\n  */\\n    function getValueInBin(uint256 _binValue, uint256 _index)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        // Mask to retrieve data for a given binData\\n        uint256 mask = (uint256(1) << TYPES_BITS_SIZE) - 1;\\n\\n        // Shift amount\\n        uint256 rightShift = 256 - TYPES_BITS_SIZE * (_index + 1);\\n        return (_binValue >> rightShift) & mask;\\n    }\\n\\n    /**\\n  * @dev return the updated _binValue after writing _amount at _index\\n  * @param _binValue uint256 containing the balances of TYPES_PER_UINT256 types\\n  * @param _index Index at which to retrieve value\\n  * @param _amount Value to store at _index in _bin\\n  * @return Value at given _index in _bin\\n  */\\n    function writeValueInBin(uint256 _binValue, uint256 _index, uint256 _amount)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        require(\\n            _amount < 2**TYPES_BITS_SIZE,\\n            \\\"Amount to write in bin is too large\\\"\\n        );\\n\\n        // Mask to retrieve data for a given binData\\n        uint256 mask = (uint256(1) << TYPES_BITS_SIZE) - 1;\\n\\n        // Shift amount\\n        uint256 leftShift = 256 - TYPES_BITS_SIZE * (_index + 1);\\n        return (_binValue & ~(mask << leftShift)) | (_amount << leftShift);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xb83c349da8cb7578d7765a0c4d5b8ed7ccf08e1e96941df35af63a252ad07db8\"},\"contracts_common/src/Libraries/SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    /**\\n    * @dev Multiplies two numbers, throws on overflow.\\n    */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Integer division of two numbers, truncating the quotient.\\n    */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        // uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return a / b;\\n    }\\n\\n    /**\\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\\n    */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    /**\\n    * @dev Adds two numbers, throws on overflow.\\n    */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\",\"keccak256\":\"0x55d3e77e8ca8c1f47ed120ef7a1b288e999c2bdb7a508dfa533494f9b9849002\"},\"contracts_common/src/Libraries/SafeMathWithRequire.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that revert\\n */\\nlibrary SafeMathWithRequire {\\n    /**\\n    * @dev Multiplies two numbers, throws on overflow.\\n    */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        c = a * b;\\n        require(c / a == b, \\\"overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Integer division of two numbers, truncating the quotient.\\n    */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        // uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return a / b;\\n    }\\n\\n    /**\\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\\n    */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"undeflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n    * @dev Adds two numbers, throws on overflow.\\n    */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        c = a + b;\\n        require(c >= a, \\\"overflow\\\");\\n        return c;\\n    }\\n}\\n\",\"keccak256\":\"0x362e750dc8b68acf6b56e0e78c6e8801b5d08031cfc77576e3222e5f42d99313\"},\"src/Orbs/ERC20ORB.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport {ERC20} from \\\"../../contracts_common/src/Interfaces/ERC20.sol\\\";\\nimport {\\n    ERC20Events\\n} from \\\"../../contracts_common/src/Interfaces/ERC20Events.sol\\\";\\nimport \\\"../../contracts_common/src/Libraries/SafeMath.sol\\\";\\nimport \\\"../../contracts_common/src/BaseWithStorage/SuperOperators.sol\\\";\\n\\nimport \\\"./ORBCore.sol\\\";\\n\\ncontract ERC20ORB is\\n    ERC20Events,\\n    SuperOperators /*is ERC20*/\\n{\\n    using SafeMath for uint256;\\n\\n    struct Origin {\\n        ORBCore core;\\n        uint8 index;\\n    }\\n\\n    Origin origin;\\n    mapping(address => mapping(address => uint256)) internal mAllowed;\\n\\n    constructor(ORBCore _core, uint8 _index) public {\\n        origin = Origin(_core, _index);\\n    }\\n\\n    function totalSupply() public view returns (uint256) {\\n        return origin.core.supplyOf(origin.index);\\n    }\\n\\n    function balanceOf(address who) public view returns (uint256) {\\n        return origin.core.balanceOf(who, origin.index);\\n    }\\n\\n    function decimals() public view returns (uint8) {\\n        return uint8(18);\\n    }\\n\\n    function transfer(address _to, uint256 _amount)\\n        public\\n        returns (bool success)\\n    {\\n        _transfer(msg.sender, _to, _amount);\\n        return true;\\n    }\\n\\n    function transferFrom(address _from, address _to, uint256 _amount)\\n        public\\n        returns (bool success)\\n    {\\n        if (msg.sender != _from && !_superOperators[msg.sender]) {\\n            uint256 allowance = mAllowed[_from][msg.sender];\\n            if (allowance != (2**256) - 1) {\\n                // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n                require(allowance >= _amount, \\\"Not enough funds allowed\\\");\\n                mAllowed[_from][msg.sender] = allowance.sub(_amount);\\n            }\\n        }\\n        _transfer(_from, _to, _amount);\\n        return true;\\n    }\\n\\n    function approve(address _spender, uint256 _amount)\\n        public\\n        returns (bool success)\\n    {\\n        _approveFor(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    function approveFor(address from, address _spender, uint256 _amount)\\n        public\\n        returns (bool success)\\n    {\\n        require(\\n            msg.sender == from || _superOperators[msg.sender],\\n            \\\"msg.sender != from || superOperator\\\"\\n        );\\n        _approveFor(from, _spender, _amount);\\n        return true;\\n    }\\n\\n    function _approveFor(address _owner, address _spender, uint256 _amount)\\n        internal\\n    {\\n        require(\\n            _owner != address(0) && _spender != address(0),\\n            \\\"Cannot approve with 0x0\\\"\\n        );\\n        mAllowed[_owner][_spender] = _amount;\\n        emit Approval(_owner, _spender, _amount);\\n    }\\n\\n    function allowance(address _owner, address _spender)\\n        public\\n        view\\n        returns (uint256 remaining)\\n    {\\n        return mAllowed[_owner][_spender];\\n    }\\n\\n    function _transfer(address _from, address _to, uint256 _amount) internal {\\n        origin.core.transferFrom(_from, _to, origin.index, _amount);\\n    }\\n\\n    function emitTransferEvent(address _from, address _to, uint256 _amount)\\n        external\\n    {\\n        require(msg.sender == address(origin.core), \\\"only core\\\");\\n        emit Transfer(_from, _to, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x45948fc22ab622c8f55fa6c423bc31a403974a42393ebd50e7dd28c913384d4b\"},\"src/Orbs/ORBCore.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport \\\"./ERC20ORB.sol\\\";\\nimport \\\"../../contracts_common/src/Libraries/SafeMath.sol\\\";\\nimport \\\"../../contracts_common/src/Libraries/AddressUtils.sol\\\";\\nimport \\\"../../contracts_common/src/Libraries/ObjectLib64.sol\\\";\\nimport \\\"../../contracts_common/src/Libraries/BytesUtil.sol\\\";\\n\\nimport \\\"../../contracts_common/src/Interfaces/ERC1155.sol\\\";\\nimport \\\"../../contracts_common/src/Interfaces/ERC1155TokenReceiver.sol\\\";\\n\\nimport \\\"../../contracts_common/src/BaseWithStorage/SuperOperators.sol\\\";\\n\\ncontract ORBCore is SuperOperators, ERC1155 {\\n    using AddressUtils for address;\\n    using ObjectLib64 for ObjectLib64.Operations;\\n    using ObjectLib64 for uint256;\\n    using SafeMath for uint256;\\n    mapping(address => uint256) packedTokenBalance;\\n    mapping(address => mapping(address => bool)) operatorsForAll;\\n\\n    mapping(address => bool) metaTransactionContracts; // native meta-transaction support\\n    \\n    uint256[3] totalSupplies;\\n    ERC20ORB[3] erc20s;\\n    event ORB(ERC20ORB orb);\\n    constructor(address _to, uint256 supply0, uint256 supply1, uint256 supply2)\\n        public\\n    {\\n        deployORB(0, supply0, _to);\\n        deployORB(1, supply1, _to);\\n        deployORB(2, supply2, _to);\\n    }\\n\\n    function deployORB(uint8 index, uint256 supply, address _to) internal {\\n        ERC20ORB orb = new ERC20ORB(this, index);\\n\\n        packedTokenBalance[_to] = packedTokenBalance[_to].updateTokenBalance(\\n            index,\\n            supply,\\n            ObjectLib64.Operations.REPLACE\\n        );\\n        totalSupplies[index] = supply;\\n\\n        orb.emitTransferEvent(address(0), _to, supply);\\n\\n        erc20s[index] = orb;\\n        emit ORB(orb);\\n    }\\n\\n    function supplyOf(uint256 _id) external view returns (uint256) {\\n        if (_id > 2) {\\n            return 0;\\n        }\\n        return totalSupplies[_id];\\n    }\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _id,\\n        uint256 _value\\n    ) external {\\n        require(msg.sender == address(erc20s[_id]), \\\"only sub erc20\\\");\\n        _transferFrom(_from, _to, _id, _value);\\n        require( // solium-disable-line error-reason\\n            _checkERC1155AndCallSafeTransfer(\\n                metaTransactionContracts[msg.sender] ? _from : msg.sender,\\n                _from,\\n                _to,\\n                _id,\\n                _value,\\n                \\\"\\\",\\n                true\\n            ),\\n            \\\"failCheck\\\"\\n        );\\n    }\\n\\n    function _transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _id,\\n        uint256 _value\\n    ) internal {\\n        require(_to != address(0), \\\"Invalid to address\\\");\\n        ERC20ORB erc20 = erc20s[_id];\\n        if (\\n            _from != msg.sender &&\\n            !metaTransactionContracts[msg.sender] &&\\n            msg.sender != address(erc20)\\n        ) {\\n            require(\\n                _superOperators[msg.sender] ||\\n                    operatorsForAll[_from][msg.sender],\\n                \\\"Operator not approved\\\"\\n            );\\n        }\\n\\n        packedTokenBalance[_from] = packedTokenBalance[_from]\\n            .updateTokenBalance(_id, _value, ObjectLib64.Operations.SUB);\\n        packedTokenBalance[_to] = packedTokenBalance[_to].updateTokenBalance(\\n            _id,\\n            _value,\\n            ObjectLib64.Operations.ADD\\n        );\\n        emit TransferSingle(\\n            metaTransactionContracts[msg.sender] ? _from : msg.sender,\\n            _from,\\n            _to,\\n            _id,\\n            _value\\n        );\\n        erc20.emitTransferEvent(_from, _to, _value);\\n    }\\n\\n    function safeTransferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _id,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external {\\n        _transferFrom(_from, _to, _id, _value);\\n        require( // solium-disable-line error-reason\\n            _checkERC1155AndCallSafeTransfer(\\n                metaTransactionContracts[msg.sender] ? _from : msg.sender,\\n                _from,\\n                _to,\\n                _id,\\n                _value,\\n                _data,\\n                false\\n            ),\\n            \\\"failCheck\\\"\\n        );\\n    }\\n\\n    // NOTE: call data should be optimized to order _ids so packedBalance can be used efficiently\\n    function safeBatchTransferFrom(\\n        address _from,\\n        address _to,\\n        uint256[] calldata _ids,\\n        uint256[] calldata _values,\\n        bytes calldata _data\\n    ) external {\\n        _batchTransferFrom(_from, _to, _ids, _values);\\n        require( // solium-disable-line error-reason\\n            _checkERC1155AndCallSafeBatchTransfer(\\n                metaTransactionContracts[msg.sender] ? _from : msg.sender,\\n                _from,\\n                _to,\\n                _ids,\\n                _values,\\n                _data\\n            )\\n        );\\n    }\\n\\n    function _batchTransferFrom(\\n        address _from,\\n        address _to,\\n        uint256[] memory _ids,\\n        uint256[] memory _values\\n    ) internal {\\n        require(\\n            _ids.length == _values.length,\\n            \\\"Inconsistent array length between args\\\"\\n        );\\n        require(_to != address(0), \\\"Invalid recipient\\\");\\n        require(\\n            _from == msg.sender ||\\n                _superOperators[msg.sender] ||\\n                operatorsForAll[_from][msg.sender] ||\\n                metaTransactionContracts[msg.sender],\\n            \\\"not authorized\\\"\\n        );\\n\\n        uint256 balFrom = packedTokenBalance[_from];\\n        uint256 balTo = packedTokenBalance[_to];\\n        for (uint256 i = 0; i < _ids.length; i++) {\\n            ERC20ORB erc20 = erc20s[_ids[i]];\\n            balFrom = ObjectLib64.updateTokenBalance(\\n                balFrom,\\n                _ids[i],\\n                _values[i],\\n                ObjectLib64.Operations.SUB\\n            );\\n            balTo = ObjectLib64.updateTokenBalance(\\n                balTo,\\n                _ids[i],\\n                _values[i],\\n                ObjectLib64.Operations.ADD\\n            );\\n            erc20.emitTransferEvent(_from, _to, _values[i]);\\n        }\\n        packedTokenBalance[_from] = balFrom;\\n        packedTokenBalance[_to] = balTo;\\n        emit TransferBatch(\\n            metaTransactionContracts[msg.sender] ? _from : msg.sender,\\n            _from,\\n            _to,\\n            _ids,\\n            _values\\n        );\\n    }\\n\\n    function balanceOf(address _owner, uint256 _tokenId)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        if (_tokenId > 2) {\\n            return 0;\\n        }\\n        return packedTokenBalance[_owner].getValueInBin(_tokenId);\\n    }\\n\\n    function balanceOfBatch(\\n        address[] calldata _owners,\\n        uint256[] calldata _tokenIds\\n    ) external view returns (uint256[] memory) {\\n        require(\\n            _owners.length == _tokenIds.length,\\n            \\\"Inconsistent array length between args\\\"\\n        );\\n        uint256[] memory balances = new uint256[](_tokenIds.length);\\n        for (uint256 i = 0; i < _tokenIds.length; i++) {\\n            balances[i] = balanceOf(_owners[i], _tokenIds[i]);\\n        }\\n        return balances;\\n    }\\n\\n    function setApprovalForAllFor(\\n        address _sender,\\n        address _operator,\\n        bool _approved\\n    ) external {\\n        require(\\n            msg.sender == _sender ||\\n                metaTransactionContracts[msg.sender] ||\\n                _superOperators[msg.sender],\\n            \\\"require meta approval\\\"\\n        );\\n        _setApprovalForAll(_sender, _operator, _approved);\\n    }\\n    function setApprovalForAll(address _operator, bool _approved) external {\\n        _setApprovalForAll(msg.sender, _operator, _approved);\\n    }\\n    function _setApprovalForAll(\\n        address _sender,\\n        address _operator,\\n        bool _approved\\n    ) internal {\\n        require(\\n            !_superOperators[_operator],\\n            \\\"super operator can't have their approvalForAll changed\\\"\\n        );\\n        operatorsForAll[_sender][_operator] = _approved;\\n        emit ApprovalForAll(_sender, _operator, _approved);\\n    }\\n    function isApprovedForAll(address _owner, address _operator)\\n        external\\n        view\\n        returns (bool isOperator)\\n    {\\n        return operatorsForAll[_owner][_operator] || _superOperators[_operator];\\n    }\\n\\n    function supportsInterface(bytes4 id) external view returns (bool) {\\n        //ERC165            // ERC1155\\n        return id == 0x01ffc9a7 || id == 0xd9b67a26;\\n    }\\n\\n    bytes4 private constant ERC1155_IS_RECEIVER = 0x4e2312e0;\\n    bytes4 private constant ERC1155_RECEIVED = 0xf23a6e61;\\n    bytes4 private constant ERC1155_BATCH_RECEIVED = 0xbc197c81;\\n    bytes4 constant ERC165ID = 0x01ffc9a7;\\n\\n    function checkIsERC1155Receiver(address _contract)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        bytes4 erc1155ReceiverID = ERC1155_IS_RECEIVER;\\n        bytes4 erc165ID = ERC165ID;\\n        bool success;\\n        uint256 result;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            let x := mload(0x40) // Find empty storage location using \\\"free memory pointer\\\"\\n            mstore(x, erc165ID) // Place signature at beginning of empty storage\\n            mstore(add(x, 0x04), erc1155ReceiverID) // Place first argument directly next to signature\\n\\n            success := staticcall(\\n                10000, // 10k gas\\n                _contract, // To addr\\n                x, // Inputs are stored at location x\\n                0x24, // Inputs are 36 bytes long\\n                x, // Store output over input (saves space)\\n                0x20\\n            ) // Outputs are 32 bytes long\\n\\n            result := mload(x) // Load the result\\n        }\\n        // (10000 / 63) \\\"not enough for supportsInterface(...)\\\" // consume all gas, so caller can potentially know that there was not enough gas\\n        assert(gasleft() > 158);\\n        return success && result == 1;\\n    }\\n\\n    function _checkERC1155AndCallSafeTransfer(\\n        address _operator,\\n        address _from,\\n        address _to,\\n        uint256 _id,\\n        uint256 _value,\\n        bytes memory _data,\\n        bool _unsafe\\n    ) internal returns (bool) {\\n        if (!_to.isContract()) {\\n            return true;\\n        }\\n        if (_unsafe && !checkIsERC1155Receiver(_to)) {\\n            return true;\\n        }\\n        return\\n            ERC1155TokenReceiver(_to).onERC1155Received(\\n                    _operator,\\n                    _from,\\n                    _id,\\n                    _value,\\n                    _data\\n                ) ==\\n                ERC1155_RECEIVED;\\n    }\\n\\n    function _checkERC1155AndCallSafeBatchTransfer(\\n        address _operator,\\n        address _from,\\n        address _to,\\n        uint256[] memory _ids,\\n        uint256[] memory _values,\\n        bytes memory _data\\n    ) internal returns (bool) {\\n        if (!_to.isContract()) {\\n            return true;\\n        }\\n        bytes4 retval = ERC1155TokenReceiver(_to).onERC1155BatchReceived(\\n            _operator,\\n            _from,\\n            _ids,\\n            _values,\\n            _data\\n        );\\n        return (retval == ERC1155_BATCH_RECEIVED);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xf6ec0f84eae161947a0b9bc9eec29c9cab6a63f8e3954b82187138ec2cc9b01e\"}},\"version\":1}",
    "userdoc": {
      "methods": {
        "changeAdmin(address)": {
          "notice": "change the administrator to be `newAdmin`."
        },
        "getAdmin()": {
          "notice": "gives the current administrator of this contract."
        },
        "isSuperOperator(address)": {
          "notice": "check whether address `who` is given superOperator rights."
        },
        "setSuperOperator(address,bool)": {
          "notice": "Enable or disable the ability of `superOperator` to transfer tokens of all (superOperator rights)."
        }
      }
    }
  },
  "args": [
    "0x52a0eE7D5374145A3fcb7D8b61324876d89ba91b",
    "1000000000",
    "1000000",
    "1000"
  ],
  "address": "0x19e558019bCcc783db9769698eA93bAAb3082B66",
  "transactionHash": "0x59fa0d0ecd9c300f8b096f00da0aa7a6c51320b3141792c1d969408204993d1d"
}