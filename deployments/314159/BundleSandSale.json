{
  "contractInfo": {
    "abi": [
      {
        "constant": true,
        "inputs": [
          {
            "name": "usdAmount",
            "type": "uint256"
          }
        ],
        "name": "getEtherAmountWithUSD",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function",
        "signature": "0x5d353d39"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "saleId",
            "type": "uint256"
          }
        ],
        "name": "getSaleInfo",
        "outputs": [
          {
            "name": "priceUSD",
            "type": "uint256"
          },
          {
            "name": "numPacksLeft",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function",
        "signature": "0x64b3b844"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "getAdmin",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function",
        "signature": "0x6e9960c3"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "newAdmin",
            "type": "address"
          }
        ],
        "name": "changeAdmin",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0x8f283970"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "newWallet",
            "type": "address"
          }
        ],
        "name": "setReceivingWallet",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0xb522ecff"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "operator",
            "type": "address"
          },
          {
            "name": "from",
            "type": "address"
          },
          {
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "name": "values",
            "type": "uint256[]"
          },
          {
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "onERC1155BatchReceived",
        "outputs": [
          {
            "name": "",
            "type": "bytes4"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0xbc197c81"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "saleId",
            "type": "uint256"
          },
          {
            "name": "to",
            "type": "address"
          }
        ],
        "name": "withdrawSale",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0xbe0c1d44"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "saleId",
            "type": "uint256"
          },
          {
            "name": "numPacks",
            "type": "uint256"
          },
          {
            "name": "to",
            "type": "address"
          }
        ],
        "name": "buyBundleWithDai",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0xd7028555"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "saleId",
            "type": "uint256"
          },
          {
            "name": "numPacks",
            "type": "uint256"
          },
          {
            "name": "to",
            "type": "address"
          }
        ],
        "name": "buyBundleWithEther",
        "outputs": [],
        "payable": true,
        "stateMutability": "payable",
        "type": "function",
        "signature": "0xe8d91566"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "operator",
            "type": "address"
          },
          {
            "name": "from",
            "type": "address"
          },
          {
            "name": "id",
            "type": "uint256"
          },
          {
            "name": "value",
            "type": "uint256"
          },
          {
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "onERC1155Received",
        "outputs": [
          {
            "name": "",
            "type": "bytes4"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function",
        "signature": "0xf23a6e61"
      },
      {
        "inputs": [
          {
            "name": "sandTokenContractAddress",
            "type": "address"
          },
          {
            "name": "assetTokenContractAddress",
            "type": "address"
          },
          {
            "name": "medianizerContractAddress",
            "type": "address"
          },
          {
            "name": "daiTokenContractAddress",
            "type": "address"
          },
          {
            "name": "admin",
            "type": "address"
          },
          {
            "name": "receivingWallet",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor",
        "signature": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "saleId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "indexed": false,
            "name": "amounts",
            "type": "uint256[]"
          },
          {
            "indexed": false,
            "name": "sandAmount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "priceUSD",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "numPacks",
            "type": "uint256"
          }
        ],
        "name": "BundleSale",
        "type": "event",
        "signature": "0xd0942aa0fd1cb39bad987b8e937fecfb2f0c8b2e04f0a828cefcc6e688601757"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "saleId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "name": "buyer",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "numPacks",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "token",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "tokenAmount",
            "type": "uint256"
          }
        ],
        "name": "BundleSold",
        "type": "event",
        "signature": "0x81cc624ee81de9d8af38b08975f77bc30f04fe1e3b30f8ab2f1068290b3f5d86"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "oldAdmin",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "newAdmin",
            "type": "address"
          }
        ],
        "name": "AdminChanged",
        "type": "event",
        "signature": "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
      }
    ],
    "evm": {
      "bytecode": {
        "linkReferences": {},
        "object": "",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1F5A CODESIZE SUB DUP1 PUSH2 0x1F5A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E65656420612077616C6C657420746F20726563656976652066756E64730000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP8 DUP7 AND SWAP8 DUP3 AND SWAP8 SWAP1 SWAP8 OR SWAP1 SWAP7 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP6 DUP6 AND SWAP6 DUP8 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP5 AND SWAP3 DUP7 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP2 DUP4 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x1E0D DUP1 PUSH2 0x14D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC197C81 GT PUSH2 0x69 JUMPI DUP1 PUSH4 0xD7028555 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xD7028555 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xE8D91566 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x3E7 JUMPI PUSH2 0xB1 JUMP JUMPDEST DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xBE0C1D44 EQ PUSH2 0x33D JUMPI PUSH2 0xB1 JUMP JUMPDEST DUP1 PUSH4 0x6E9960C3 GT PUSH2 0x9A JUMPI DUP1 PUSH4 0x6E9960C3 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xB522ECFF EQ PUSH2 0x19B JUMPI PUSH2 0xB1 JUMP JUMPDEST DUP1 PUSH4 0x5D353D39 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x64B3B844 EQ PUSH2 0xF2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x57D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x65E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA4E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x116D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x494 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP PUSH2 0x4BE DUP2 PUSH2 0x4B2 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH4 0xFFFFFFFF PUSH2 0x16B1 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1727 AND JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 GT PUSH2 0x51D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642073616C654964000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SUB SWAP1 POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x532 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SWAP3 POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x553 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5DC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E2063616E206368616E67652061646D696E0000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D3B PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D8C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x788 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206163636570742061737365742061732073656E6465720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D18 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x82A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E65656420746F20636F6E7461696E7320417373657400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DB6 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP12 DUP2 MSTORE PUSH1 0x20 DUP13 DUP2 MUL DUP3 ADD DUP2 ADD DUP4 MSTORE DUP4 CALLDATALOAD SWAP7 POP DUP4 ADD CALLDATALOAD SWAP5 POP SWAP2 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 SWAP1 DUP11 DUP1 ISZERO PUSH2 0x8B6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x8D3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT PUSH2 0x92C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6173736574207472616E736665722077697468207A65726F2076616C75657300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x953 DUP7 DUP13 DUP13 DUP6 DUP2 DUP2 LT PUSH2 0x93E JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x961 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x97B DUP8 DUP4 PUSH2 0x16B1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST EQ PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D62 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9C4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x8BC JUMP JUMPDEST POP PUSH2 0xA1C DUP13 DUP5 DUP7 DUP15 DUP15 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP9 SWAP3 POP DUP10 SWAP2 POP PUSH2 0x173A SWAP1 POP JUMP JUMPDEST POP PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAAD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E20616C6C6F7765640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xB02 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642073616C654964000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB19 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB3C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x60 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB60 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xBA0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x60 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xBCA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xC25 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC11 JUMPI JUMPDEST POP POP DUP6 MLOAD SWAP4 SWAP5 POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC61 DUP6 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC4B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x16B1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC6D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xC33 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 ADDRESS SWAP2 DUP11 SWAP2 PUSH2 0xCCD SWAP2 DUP12 SWAP1 DUP2 LT PUSH2 0xCAC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP10 PUSH2 0x16B1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xDB2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7472616E7366657220666F2053616E64206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP5 ADD SWAP1 DUP2 MSTORE DUP9 MLOAD PUSH1 0xA4 DUP6 ADD MSTORE DUP9 MLOAD SWAP2 SWAP1 SWAP5 AND SWAP5 PUSH4 0x2EB2C2D6 SWAP5 SWAP1 SWAP4 DUP13 SWAP4 DUP11 SWAP4 DUP11 SWAP4 SWAP2 SWAP3 PUSH1 0x64 DUP2 ADD SWAP2 PUSH1 0x84 DUP3 ADD SWAP2 PUSH1 0xC4 ADD SWAP1 PUSH1 0x20 DUP1 DUP10 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE4D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE35 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE8C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE74 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xF3B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642073616C654964000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF52 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFBB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F756768207061636B73206F6E2073616C650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFCB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1013 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFF2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD DUP7 PUSH2 0x16B1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x110A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F207472616E736665722064616900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1115 DUP4 DUP7 DUP7 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE MLOAD CALLER SWAP2 DUP9 SWAP2 PUSH32 0x81CC624EE81DE9D8AF38B08975F77BC30F04FE1E3B30F8AB2F1068290B3F5D86 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x11C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642073616C654964000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11D9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1242 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F756768207061636B73206F6E2073616C650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1252 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1279 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFF2 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1286 DUP3 PUSH2 0x489 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F7567682065746865722073656E740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLVALUE DUP2 SWAP1 SUB DUP1 ISZERO PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1314 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1350 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x135C DUP6 DUP9 DUP9 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP2 DUP11 SWAP2 PUSH32 0x81CC624EE81DE9D8AF38B08975F77BC30F04FE1E3B30F8AB2F1068290B3F5D86 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x140C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206163636570742061737365742061732073656E6465720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x145C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D18 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x14B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F204173736574207472616E73666572656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x14ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DB6 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1526 DUP9 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1727 AND JUMP JUMPDEST SWAP1 POP DUP8 PUSH2 0x1539 DUP3 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x16B1 AND JUMP JUMPDEST EQ PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D62 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP1 POP DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15A5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP1 POP DUP11 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x15FC DUP13 DUP7 DUP9 DUP5 DUP7 DUP10 PUSH2 0x173A JUMP JUMPDEST POP PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x57DE26A4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x167F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1693 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16C0 JUMPI POP PUSH1 0x0 PUSH2 0x1721 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x16CE JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1721 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F766572666C6F77000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x1732 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP8 ADDRESS PUSH2 0x175D DUP10 DUP10 PUSH4 0xFFFFFFFF PUSH2 0x16B1 AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1842 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F207472616E736665722053616E64000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE DUP4 MLOAD DUP1 MLOAD SWAP4 SWAP6 SWAP2 SWAP5 SWAP4 PUSH1 0x5 SWAP1 SWAP4 MUL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP3 PUSH2 0x18B9 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x18D2 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP SWAP1 POP DUP1 PUSH32 0xD0942AA0FD1CB39BAD987B8E937FECFB2F0C8B2E04F0A828CEFCC6E688601757 DUP6 DUP6 DUP10 DUP7 DUP11 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1972 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x195A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19B1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1999 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x19E1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS DUP5 PUSH2 0x1A1B DUP6 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x16B1 AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1B00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616E64205472616E73666572206661696C6564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1B0F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1B63 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1B4F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x60 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1B79 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1BD4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1BC0 JUMPI JUMPDEST POP POP DUP6 MLOAD SWAP4 SWAP5 POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C19 JUMPI PUSH2 0x1BFA DUP8 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC4B JUMPI INVALID JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C06 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1BE2 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP5 ADD SWAP1 DUP2 MSTORE DUP9 MLOAD PUSH1 0xA4 DUP6 ADD MSTORE DUP9 MLOAD SWAP2 SWAP1 SWAP5 AND SWAP5 PUSH4 0x2EB2C2D6 SWAP5 SWAP1 SWAP4 DUP12 SWAP4 DUP11 SWAP4 DUP11 SWAP4 SWAP2 SWAP3 PUSH1 0x64 DUP2 ADD SWAP2 PUSH1 0x84 DUP3 ADD SWAP2 PUSH1 0xC4 ADD SWAP1 PUSH1 0x20 DUP1 DUP10 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xE4D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE35 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1CED JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1CED JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST POP PUSH2 0x1CF9 SWAP3 SWAP2 POP PUSH2 0x1CFD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x57A SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1CF9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D03 JUMP INVALID PUSH16 0x6E6C792073656C662065786563757465 PUSH5 0x207472616E PUSH20 0x66657220616C6C6F776564726563656976696E67 KECCAK256 PUSH24 0x616C6C65742063616E6E6F74206265207A65726F20616464 PUSH19 0x657373696E76616C696420616D6F756E74732C KECCAK256 PUSH15 0x6F7420646976697369626C65206279 KECCAK256 PUSH15 0x756D5061636B736F6E6C792061646D PUSH10 0x6E2063616E206368616E PUSH8 0x6520746865207265 PUSH4 0x65697669 PUSH15 0x672077616C6C657464617461206E65 PUSH6 0x6420746F2063 PUSH16 0x6E7461696E73207468652073616C6520 PUSH5 0x617461A265 PUSH3 0x7A7A72 ADDRESS PC KECCAK256 MUL 0xd8 SWAP9 ADDRESS SWAP4 PUSH1 0x39 CODESIZE DUP2 SHR SWAP13 PUSH11 0xD9C93D68453B842D1A130D SWAP14 0xee ADDMOD 0x26 0x5f 0xd 0xfc PUSH7 0x8D64736F6C6343 STOP SDIV MULMOD STOP ORIGIN ",
        "sourceMap": "318:9286:55:-;;;1240:631;8:9:-1;5:2;;;30:1;27;20:12;5:2;1240:631:55;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1240:631:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1516:29:55;;1508:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:11;:51;;-1:-1:-1;;;;;1590:51:55;;;-1:-1:-1;;;;;;1590:51:55;;;;;;;1651:5;:39;;;;;;;;;;;;;;;1700:6;:49;;;;;;;;;;;;;;;1759:4;:37;;;;;;;;;;;;;;;1590:11;1806:14;;;;;;;;;;;;;;1830:16;:34;;;;;;;;;;;;;318:9286;;;;;;"
      },
      "deployedBytecode": {
        "linkReferences": {},
        "object": "",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC197C81 GT PUSH2 0x69 JUMPI DUP1 PUSH4 0xD7028555 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xD7028555 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xE8D91566 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x3E7 JUMPI PUSH2 0xB1 JUMP JUMPDEST DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xBE0C1D44 EQ PUSH2 0x33D JUMPI PUSH2 0xB1 JUMP JUMPDEST DUP1 PUSH4 0x6E9960C3 GT PUSH2 0x9A JUMPI DUP1 PUSH4 0x6E9960C3 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xB522ECFF EQ PUSH2 0x19B JUMPI PUSH2 0xB1 JUMP JUMPDEST DUP1 PUSH4 0x5D353D39 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x64B3B844 EQ PUSH2 0xF2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x57D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x65E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA4E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x116D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x494 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP PUSH2 0x4BE DUP2 PUSH2 0x4B2 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH4 0xFFFFFFFF PUSH2 0x16B1 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1727 AND JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 GT PUSH2 0x51D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642073616C654964000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SUB SWAP1 POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x532 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SWAP3 POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x553 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5DC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E2063616E206368616E67652061646D696E0000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D3B PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D8C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x788 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206163636570742061737365742061732073656E6465720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D18 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x82A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E65656420746F20636F6E7461696E7320417373657400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DB6 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP12 DUP2 MSTORE PUSH1 0x20 DUP13 DUP2 MUL DUP3 ADD DUP2 ADD DUP4 MSTORE DUP4 CALLDATALOAD SWAP7 POP DUP4 ADD CALLDATALOAD SWAP5 POP SWAP2 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 SWAP1 DUP11 DUP1 ISZERO PUSH2 0x8B6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x8D3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT PUSH2 0x92C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6173736574207472616E736665722077697468207A65726F2076616C75657300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x953 DUP7 DUP13 DUP13 DUP6 DUP2 DUP2 LT PUSH2 0x93E JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x961 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x97B DUP8 DUP4 PUSH2 0x16B1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST EQ PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D62 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9C4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x8BC JUMP JUMPDEST POP PUSH2 0xA1C DUP13 DUP5 DUP7 DUP15 DUP15 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP9 SWAP3 POP DUP10 SWAP2 POP PUSH2 0x173A SWAP1 POP JUMP JUMPDEST POP PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAAD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E20616C6C6F7765640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xB02 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642073616C654964000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB19 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB3C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x60 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB60 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xBA0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x60 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xBCA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xC25 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC11 JUMPI JUMPDEST POP POP DUP6 MLOAD SWAP4 SWAP5 POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC61 DUP6 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC4B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x16B1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC6D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xC33 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 ADDRESS SWAP2 DUP11 SWAP2 PUSH2 0xCCD SWAP2 DUP12 SWAP1 DUP2 LT PUSH2 0xCAC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP10 PUSH2 0x16B1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xDB2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7472616E7366657220666F2053616E64206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP5 ADD SWAP1 DUP2 MSTORE DUP9 MLOAD PUSH1 0xA4 DUP6 ADD MSTORE DUP9 MLOAD SWAP2 SWAP1 SWAP5 AND SWAP5 PUSH4 0x2EB2C2D6 SWAP5 SWAP1 SWAP4 DUP13 SWAP4 DUP11 SWAP4 DUP11 SWAP4 SWAP2 SWAP3 PUSH1 0x64 DUP2 ADD SWAP2 PUSH1 0x84 DUP3 ADD SWAP2 PUSH1 0xC4 ADD SWAP1 PUSH1 0x20 DUP1 DUP10 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE4D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE35 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE8C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE74 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xF3B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642073616C654964000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF52 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFBB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F756768207061636B73206F6E2073616C650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFCB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1013 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFF2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD DUP7 PUSH2 0x16B1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x110A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F207472616E736665722064616900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1115 DUP4 DUP7 DUP7 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE MLOAD CALLER SWAP2 DUP9 SWAP2 PUSH32 0x81CC624EE81DE9D8AF38B08975F77BC30F04FE1E3B30F8AB2F1068290B3F5D86 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x11C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642073616C654964000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11D9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1242 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F756768207061636B73206F6E2073616C650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1252 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1279 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFF2 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1286 DUP3 PUSH2 0x489 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F7567682065746865722073656E740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLVALUE DUP2 SWAP1 SUB DUP1 ISZERO PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1314 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1350 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x135C DUP6 DUP9 DUP9 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP2 DUP11 SWAP2 PUSH32 0x81CC624EE81DE9D8AF38B08975F77BC30F04FE1E3B30F8AB2F1068290B3F5D86 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x140C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206163636570742061737365742061732073656E6465720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x145C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D18 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x14B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F204173736574207472616E73666572656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x14ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DB6 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1526 DUP9 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1727 AND JUMP JUMPDEST SWAP1 POP DUP8 PUSH2 0x1539 DUP3 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x16B1 AND JUMP JUMPDEST EQ PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D62 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP1 POP DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15A5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP1 POP DUP11 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x15FC DUP13 DUP7 DUP9 DUP5 DUP7 DUP10 PUSH2 0x173A JUMP JUMPDEST POP PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x57DE26A4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x167F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1693 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16C0 JUMPI POP PUSH1 0x0 PUSH2 0x1721 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x16CE JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1721 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F766572666C6F77000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x1732 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP8 ADDRESS PUSH2 0x175D DUP10 DUP10 PUSH4 0xFFFFFFFF PUSH2 0x16B1 AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1842 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F207472616E736665722053616E64000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE DUP4 MLOAD DUP1 MLOAD SWAP4 SWAP6 SWAP2 SWAP5 SWAP4 PUSH1 0x5 SWAP1 SWAP4 MUL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP3 PUSH2 0x18B9 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x18D2 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP SWAP1 POP DUP1 PUSH32 0xD0942AA0FD1CB39BAD987B8E937FECFB2F0C8B2E04F0A828CEFCC6E688601757 DUP6 DUP6 DUP10 DUP7 DUP11 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1972 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x195A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19B1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1999 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x19E1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS DUP5 PUSH2 0x1A1B DUP6 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x16B1 AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1B00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616E64205472616E73666572206661696C6564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1B0F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1B63 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1B4F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x60 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1B79 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1BD4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1BC0 JUMPI JUMPDEST POP POP DUP6 MLOAD SWAP4 SWAP5 POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C19 JUMPI PUSH2 0x1BFA DUP8 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC4B JUMPI INVALID JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C06 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1BE2 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP5 ADD SWAP1 DUP2 MSTORE DUP9 MLOAD PUSH1 0xA4 DUP6 ADD MSTORE DUP9 MLOAD SWAP2 SWAP1 SWAP5 AND SWAP5 PUSH4 0x2EB2C2D6 SWAP5 SWAP1 SWAP4 DUP12 SWAP4 DUP11 SWAP4 DUP11 SWAP4 SWAP2 SWAP3 PUSH1 0x64 DUP2 ADD SWAP2 PUSH1 0x84 DUP3 ADD SWAP2 PUSH1 0xC4 ADD SWAP1 PUSH1 0x20 DUP1 DUP10 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xE4D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE35 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1CED JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1CED JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST POP PUSH2 0x1CF9 SWAP3 SWAP2 POP PUSH2 0x1CFD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x57A SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1CF9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D03 JUMP INVALID PUSH16 0x6E6C792073656C662065786563757465 PUSH5 0x207472616E PUSH20 0x66657220616C6C6F776564726563656976696E67 KECCAK256 PUSH24 0x616C6C65742063616E6E6F74206265207A65726F20616464 PUSH19 0x657373696E76616C696420616D6F756E74732C KECCAK256 PUSH15 0x6F7420646976697369626C65206279 KECCAK256 PUSH15 0x756D5061636B736F6E6C792061646D PUSH10 0x6E2063616E206368616E PUSH8 0x6520746865207265 PUSH4 0x65697669 PUSH15 0x672077616C6C657464617461206E65 PUSH6 0x6420746F2063 PUSH16 0x6E7461696E73207468652073616C6520 PUSH5 0x617461A265 PUSH3 0x7A7A72 ADDRESS PC KECCAK256 MUL 0xd8 SWAP9 ADDRESS SWAP4 PUSH1 0x39 CODESIZE DUP2 SHR SWAP13 PUSH11 0xD9C93D68453B842D1A130D SWAP14 0xee ADDMOD 0x26 0x5f 0xd 0xfc PUSH7 0x8D64736F6C6343 STOP SDIV MULMOD STOP ORIGIN ",
        "sourceMap": "318:9286:55:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6142:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6142:200:55;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6142:200:55;;:::i;:::-;;;;;;;;;;;;;;;;4938:293;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4938:293:55;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4938:293:55;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;264:82:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;264:82:1;;;:::i;:::-;;;;-1:-1:-1;;;;;264:82:1;;;;;;;;;;;;;;469:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;469:197:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;469:197:1;-1:-1:-1;;;;;469:197:1;;:::i;:::-;;1992:279:55;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1992:279:55;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1992:279:55;-1:-1:-1;;;;;1992:279:55;;:::i;7702:1233::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7702:1233:55;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7702:1233:55;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7702:1233:55;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7702:1233:55;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;7702:1233:55;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7702:1233:55;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7702:1233:55;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;7702:1233:55;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7702:1233:55;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7702:1233:55;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;7702:1233:55;;-1:-1:-1;7702:1233:55;-1:-1:-1;7702:1233:55;:::i;:::-;;;;;;;;;;;;;;;;;;;5237:739;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5237:739:55;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5237:739:55;;;;;;-1:-1:-1;;;;;5237:739:55;;:::i;4250:682::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4250:682:55;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4250:682:55;;;;;;;;;;;-1:-1:-1;;;;;4250:682:55;;:::i;3120:923::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3120:923:55;;;;;;;;;;;-1:-1:-1;;;;;3120:923:55;;:::i;6610:1086::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6610:1086:55;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;6610:1086:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6610:1086:55;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6610:1086:55;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;6610:1086:55;;-1:-1:-1;6610:1086:55;-1:-1:-1;6610:1086:55;:::i;6142:200::-;6213:7;6232:18;6253:15;:13;:15::i;:::-;6232:36;-1:-1:-1;6285:50:55;6232:36;6285:34;:9;6299:19;6285:34;:13;:34;:::i;:::-;:38;:50;:38;:50;:::i;:::-;6278:57;6142:200;-1:-1:-1;;;6142:200:55:o;4938:293::-;4997:16;5015:20;5064:1;5055:6;:10;5047:37;;;;;-1:-1:-1;;;5047:37:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;5094:17;5123:1;5114:6;:10;5094:30;;5145:5;5151:9;5145:16;;;;;;;;;;;;;;;;;;:25;;;5134:36;;5195:5;5201:9;5195:16;;;;;;;;;;;;;;;;;;:29;;;5180:44;;4938:293;;;;:::o;264:82:1:-;307:7;333:6;-1:-1:-1;;;;;333:6:1;264:82;;:::o;469:197::-;549:6;;-1:-1:-1;;;;;549:6:1;535:10;:20;527:60;;;;;-1:-1:-1;;;527:60:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;615:6;;602:30;;;-1:-1:-1;;;;;615:6:1;;;602:30;;;;;;;;;;;;;;;;;;;;;642:6;:17;;;;-1:-1:-1;;;;;642:17:1;;;;;;;;;;469:197::o;1992:279:55:-;-1:-1:-1;;;;;2074:23:55;;2066:75;;;;-1:-1:-1;;;2066:75:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:6;;-1:-1:-1;;;;;2173:6:55;2159:10;:20;2151:75;;;;-1:-1:-1;;;2151:75:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2236:16;:28;;;;-1:-1:-1;;;;;2236:28:55;;;;;;;;;;1992:279::o;7702:1233::-;7949:6;;7902;;-1:-1:-1;;;;;7949:6:55;7960:10;7941:29;7920:103;;;;;-1:-1:-1;;;7920:103:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;8049:8;-1:-1:-1;;;;;8041:16:55;:4;-1:-1:-1;;;;;8041:16:55;;8033:64;;;;-1:-1:-1;;;8033:64:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8115:14;8107:49;;;;;-1:-1:-1;;;8107:49:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;8174:15;8166:63;;;;-1:-1:-1;;;8166:63:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8254:16;8284:25;8323:23;8370:4;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8359:45:55;8442:25;;;;;8359:45;8442:25;;;;;;;;;8359:45;;;-1:-1:-1;8359:45:55;;;;-1:-1:-1;8359:45:55;;;;-1:-1:-1;8359:45:55;;8456:3;8442:25;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;8442:25:55;-1:-1:-1;8415:52:55;-1:-1:-1;8489:9:55;8485:316;8508:7;:14;8504:1;:18;8485:316;;;8564:1;8552:6;;8559:1;8552:9;;;;;;;;;;;;;:13;8544:57;;;;;-1:-1:-1;;;8544:57:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;8615:14;8632:23;8646:8;8632:6;;8639:1;8632:9;;;;;;;;;;;;;:13;;:23;;;;:::i;:::-;8615:40;;8701:6;;8708:1;8701:9;;;;;;;;;;;;;8677:20;8688:8;8677:6;:10;;:20;;;;:::i;:::-;:33;8669:88;;;;-1:-1:-1;;;8669:88:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8784:6;8771:7;8779:1;8771:10;;;;;;;;;;;;;;;;;:19;-1:-1:-1;8524:4:55;;8485:316;;;;8811:78;8824:4;8830:17;8849:8;8859:3;;8811:78;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;8864:7:55;;-1:-1:-1;8873:15:55;;-1:-1:-1;8811:12:55;;-1:-1:-1;8811:78:55:i;:::-;-1:-1:-1;8906:22:55;;7702:1233;-1:-1:-1;;;;;;;;;;;;7702:1233:55:o;5237:739::-;726:6:1;;-1:-1:-1;;;;;726:6:1;712:10;:20;703:52;;;;;-1:-1:-1;;;703:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;5335:1:55;5326:6;:10;5318:37;;;;;-1:-1:-1;;;5318:37:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;5365:17;5394:1;5385:6;:10;5365:30;;5405:20;5428:5;5434:9;5428:16;;;;;;;;;;;;;;;;;;:29;;;5405:52;;5499:1;5467:5;5473:9;5467:16;;;;;;;;;;;;;;;;;;:29;;:33;;;;5511:20;5534:5;5540:9;5534:16;;;;;;;;;;;;;;;;;;;;;;5511:43;;;;;;;;;;;;;;;;;;;;;5534:16;5511:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5564:24;5591:5;5597:9;5591:16;;;;;;;;;;;;;;;;;;:24;;5564:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5642:10:55;;5564:51;;-1:-1:-1;5625:14:55;;-1:-1:-1;;;5662:103:55;5686:6;5682:1;:10;5662:103;;;5726:28;5741:12;5726:7;5734:1;5726:10;;;;;;;;;;;;;;:14;;:28;;;;:::i;:::-;5713:7;5721:1;5713:10;;;;;;;;;;;;;;;;;:41;5694:3;;5662:103;;;-1:-1:-1;5782:5:55;;5837;:16;;-1:-1:-1;;;;;5782:5:55;;;;:18;;5809:4;;5816:2;;5820:45;;5843:9;;5837:16;;;;;;;;;;;;;;;;:27;;;5820:12;:16;;:45;;;;:::i;:::-;5782:84;;;;;;;;;;;;;-1:-1:-1;;;;;5782:84:55;-1:-1:-1;;;;;5782:84:55;;;;;;-1:-1:-1;;;;;5782:84:55;-1:-1:-1;;;;;5782:84:55;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5782:84:55;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5782:84:55;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5782:84:55;5774:120;;;;;-1:-1:-1;;;5774:120:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;5904:6;;;:65;;;;;5941:4;5904:65;;;;;;-1:-1:-1;;;;;5904:65:55;;;;;;;;;;;;;;;;;;;;;;:6;;;;;:28;;5941:4;;5948:2;;5952:3;;5957:7;;5904:65;;;;;;;;;;;;;;;;;;;;;;:6;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5904:65:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5904:65:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5904:65:55;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5904:65:55;;;;765:1:1;;;;;5237:739:55;;:::o;4250:682::-;4358:1;4349:6;:10;4341:37;;;;;-1:-1:-1;;;4341:37:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;4388:17;4417:1;4408:6;:10;4388:30;;4428:20;4451:5;4457:9;4451:16;;;;;;;;;;;;;;;;;;:29;;;4428:52;;4514:8;4498:12;:24;;4490:61;;;;;-1:-1:-1;;;4490:61:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;4608:8;4593:12;:23;4561:5;4567:9;4561:16;;;;;;;;;;;;;;;;;;:29;;:55;;;;4627:19;4649:39;4662:5;4668:9;4662:16;;;;;;;;;;;;;;;;;;:25;;;4649:8;:12;;:39;;;;:::i;:::-;4706:4;;4736:16;;4706:60;;;;;;4724:10;4706:60;;;;-1:-1:-1;;;;;4736:16:55;;;4706:60;;;;;;;;;;;;4627:61;;-1:-1:-1;4706:4:55;;;:17;;:60;;;;;;;;;;;;;;;:4;;:60;;;5:2:-1;;;;30:1;27;20:12;5:2;4706:60:55;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4706:60:55;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4706:60:55;4698:95;;;;;-1:-1:-1;;;4698:95:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;4803:38;4817:9;4828:8;4838:2;4803:13;:38::i;:::-;4906:4;;4857:68;;;;;;-1:-1:-1;;;;;4906:4:55;;;;4857:68;;;;;;;;;;;4876:10;;4868:6;;4857:68;;;;;;;;;4250:682;;;;;;:::o;3120:923::-;3238:1;3229:6;:10;3221:37;;;;;-1:-1:-1;;;3221:37:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;3268:17;3297:1;3288:6;:10;3268:30;;3308:20;3331:5;3337:9;3331:16;;;;;;;;;;;;;;;;;;:29;;;3308:52;;3394:8;3378:12;:24;;3370:61;;;;;-1:-1:-1;;;3370:61:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;3488:8;3473:12;:23;3441:5;3447:9;3441:16;;;;;;;;;;;;;;;;;;:29;;:55;;;;3507:19;3529:39;3542:5;3548:9;3542:16;;;;;;;3529:39;3507:61;;3578:19;3600:34;3622:11;3600:21;:34::i;:::-;3578:56;;3665:11;3652:9;:24;;3644:58;;;;;-1:-1:-1;;;3644:58:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;3731:9;:23;;;3767:12;;3764:87;;3795:29;;:10;;:29;;;;;3815:8;;3795:29;;;;3815:8;3795:10;:29;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3795:29:55;3764:87;3868:16;;3860:47;;-1:-1:-1;;;;;3868:16:55;;;;3860:47;;;;;3895:11;;3868:16;3860:47;3868:16;3860:47;3895:11;3868:16;3860:47;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3860:47:55;3917:38;3931:9;3942:8;3952:2;3917:13;:38::i;:::-;3971:65;;;;;;4020:1;3971:65;;;;;;;;;;;;3990:10;;3982:6;;3971:65;;;;;;;;;3120:923;;;;;;;;:::o;6610:1086::-;6828:6;;6781;;-1:-1:-1;;;;;6828:6:55;6839:10;6820:29;6799:103;;;;;-1:-1:-1;;;6799:103:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;6928:8;-1:-1:-1;;;;;6920:16:55;:4;-1:-1:-1;;;;;6920:16:55;;6912:64;;;;-1:-1:-1;;;6912:64:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7002:1;6994:5;:9;6986:41;;;;;-1:-1:-1;;;6986:41:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;7045:15;7037:63;;;;-1:-1:-1;;;7037:63:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7125:16;7155:25;7194:23;7241:4;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7230:45:55;;;-1:-1:-1;7230:45:55;;;;;-1:-1:-1;7230:45:55;;;;-1:-1:-1;7286:14:55;7303:19;:5;7230:45;7303:19;:9;:19;:::i;:::-;7286:36;-1:-1:-1;7364:5:55;7340:20;7286:36;7351:8;7340:20;:10;:20;:::i;:::-;:29;7332:84;;;;-1:-1:-1;;;7332:84:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7453:16;;;7467:1;7453:16;;;;;;;;;7426:24;;7453:16;;;;;;105:10:-1;7453:16:55;88:34:-1;136:17;;-1:-1;7453:16:55;7426:43;;7492:6;7479:7;7487:1;7479:10;;;;;;;;;;;;;;;;;:19;7531:16;;;7545:1;7531:16;;;;;;;;;7508:20;;7531:16;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;7531:16:55;7508:39;;7566:2;7557:3;7561:1;7557:6;;;;;;;;;;;;;:11;;;;;7578:78;7591:4;7597:17;7616:8;7626:3;7631:7;7640:15;7578:12;:78::i;:::-;-1:-1:-1;7673:16:55;;6610:1086;-1:-1:-1;;;;;;;;;;;;6610:1086:55:o;6467:137::-;6515:7;6534:12;6549:11;;;;;;;;;-1:-1:-1;;;;;6549:11:55;-1:-1:-1;;;;;6549:16:55;;:18;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6549:18:55;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6549:18:55;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6549:18:55;;-1:-1:-1;;6467:137:55;:::o;211:426:38:-;269:9;511:6;507:45;;-1:-1:-1;540:1:38;533:8;;507:45;-1:-1:-1;566:5:38;;;570:1;566;:5;:1;589:5;;;;;:10;581:31;;;;;-1:-1:-1;;;581:31:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;211:426;;;;:::o;727:290::-;785:7;1009:1;1005;:5;;;;;;;727:290;-1:-1:-1;;;727:290:38:o;8941:661:55:-;9176:5;;-1:-1:-1;;;;;9176:5:55;:18;9195:4;9209;9216:31;:17;9238:8;9216:31;:21;:31;:::i;:::-;9176:72;;;;;;;;;;;;;-1:-1:-1;;;;;9176:72:55;-1:-1:-1;;;;;9176:72:55;;;;;;-1:-1:-1;;;;;9176:72:55;-1:-1:-1;;;;;9176:72:55;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9176:72:55;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9176:72:55;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9176:72:55;9168:108;;;;;-1:-1:-1;;;9168:108:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;9314:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9303:5;27:10:-1;;39:1;23:18;;45:23;;;9286:14:55;9303:199;;;;;;;9286:14;;23:18:-1;;9314:187:55;9303:199;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9303:199:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;9286:216;;9528:6;9517:78;9536:3;9541:7;9550:17;9569:15;9586:8;9517:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9517:78:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9517:78:55;;;;;;;;;;;;;;;;;;;;;;8941:661;;;;;;;:::o;2277:634::-;2368:25;2396:5;2402:9;2396:16;;;;;;;;;;;;;;;;:27;:16;;;;;:27;;2454:5;;2396:27;;-1:-1:-1;;;;;;2454:5:55;:18;2481:4;2488:2;2492:31;2396:27;2514:8;2492:31;:21;:31;:::i;:::-;2454:70;;;;;;;;;;;;;-1:-1:-1;;;;;2454:70:55;-1:-1:-1;;;;;2454:70:55;;;;;;-1:-1:-1;;;;;2454:70:55;-1:-1:-1;;;;;2454:70:55;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2454:70:55;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2454:70:55;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2454:70:55;2433:137;;;;;-1:-1:-1;;;2433:137:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;2580:20;2603:5;2609:9;2603:16;;;;;;;;;;;;;;;;;;;;;;2580:43;;;;;;;;;;;;;;;;;;;;;2603:16;2580:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:24;2660:5;2666:9;2660:16;;;;;;;;;;;;;;;;;;:24;;2633:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2711:10:55;;2633:51;;-1:-1:-1;2694:14:55;;-1:-1:-1;;;2731:99:55;2755:6;2751:1;:10;2731:99;;;2795:24;2810:8;2795:7;2803:1;2795:10;;;;;;;:24;2782:7;2790:1;2782:10;;;;;;;;;;;;;;;;;:37;2763:3;;2731:99;;;-1:-1:-1;2839:6:55;;;:65;;;;;2876:4;2839:65;;;;;;-1:-1:-1;;;;;2839:65:55;;;;;;;;;;;;;;;;;;;;;;:6;;;;;:28;;2876:4;;2839:65;;;;2892:7;;2839:65;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27:10;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;318:9286:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;318:9286:55;;;-1:-1:-1;318:9286:55;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;"
      },
      "methodIdentifiers": {
        "buyBundleWithDai(uint256,uint256,address)": "d7028555",
        "buyBundleWithEther(uint256,uint256,address)": "e8d91566",
        "changeAdmin(address)": "8f283970",
        "getAdmin()": "6e9960c3",
        "getEtherAmountWithUSD(uint256)": "5d353d39",
        "getSaleInfo(uint256)": "64b3b844",
        "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
        "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
        "setReceivingWallet(address)": "b522ecff",
        "withdrawSale(uint256,address)": "be0c1d44"
      }
    },
    "metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.e560f70d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"name\":\"getEtherAmountWithUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"saleId\",\"type\":\"uint256\"}],\"name\":\"getSaleInfo\",\"outputs\":[{\"name\":\"priceUSD\",\"type\":\"uint256\"},{\"name\":\"numPacksLeft\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setReceivingWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"ids\",\"type\":\"uint256[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"saleId\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"saleId\",\"type\":\"uint256\"},{\"name\":\"numPacks\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"buyBundleWithDai\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"saleId\",\"type\":\"uint256\"},{\"name\":\"numPacks\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"buyBundleWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"sandTokenContractAddress\",\"type\":\"address\"},{\"name\":\"assetTokenContractAddress\",\"type\":\"address\"},{\"name\":\"medianizerContractAddress\",\"type\":\"address\"},{\"name\":\"daiTokenContractAddress\",\"type\":\"address\"},{\"name\":\"admin\",\"type\":\"address\"},{\"name\":\"receivingWallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"sandAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"priceUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"numPacks\",\"type\":\"uint256\"}],\"name\":\"BundleSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"numPacks\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"BundleSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"buyBundleWithDai(uint256,uint256,address)\":{\"params\":{\"numPacks\":\"the amount of packs to buy\",\"saleId\":\"id of the bundle\",\"to\":\"The address that will receive the SAND\"}},\"buyBundleWithEther(uint256,uint256,address)\":{\"params\":{\"numPacks\":\"the amount of packs to buy\",\"saleId\":\"id of the bundle\",\"to\":\"The address that will receive the SAND\"}},\"changeAdmin(address)\":{\"params\":{\"newAdmin\":\"address of the new administrator.\"}},\"getAdmin()\":{\"return\":\"the current administrator of this contract.\"},\"getEtherAmountWithUSD(uint256)\":{\"params\":{\"usdAmount\":\"An amount of USD\"},\"return\":\"The amount of ETH\"},\"setReceivingWallet(address)\":{\"params\":{\"newWallet\":\"address of the new receiving wallet\"}}}},\"userdoc\":{\"methods\":{\"buyBundleWithDai(uint256,uint256,address)\":{\"notice\":\"Buys Sand Bundle with DAI\"},\"buyBundleWithEther(uint256,uint256,address)\":{\"notice\":\"Buys Sand Bundle with Ether\"},\"changeAdmin(address)\":{\"notice\":\"change the administrator to be `newAdmin`.\"},\"getAdmin()\":{\"notice\":\"gives the current administrator of this contract.\"},\"getEtherAmountWithUSD(uint256)\":{\"notice\":\"Returns the amount of ETH for a specific amount of USD\"},\"setReceivingWallet(address)\":{\"notice\":\"set the wallet receiving the proceeds\"}}}},\"settings\":{\"compilationTarget\":{\"src/BundleSandSale/BundleSandSale.sol\":\"BundleSandSale\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts_common/src/BaseWithStorage/Admin.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\ncontract Admin {\\n\\n    address internal _admin;\\n\\n    event AdminChanged(address oldAdmin, address newAdmin);\\n\\n    /// @notice gives the current administrator of this contract.\\n    /// @return the current administrator of this contract.\\n    function getAdmin() external view returns (address) {\\n        return _admin;\\n    }\\n\\n    /// @notice change the administrator to be `newAdmin`.\\n    /// @param newAdmin address of the new administrator.\\n    function changeAdmin(address newAdmin) external {\\n        require(msg.sender == _admin, \\\"only admin can change admin\\\");\\n        emit AdminChanged(_admin, newAdmin);\\n        _admin = newAdmin;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require (msg.sender == _admin, \\\"only admin allowed\\\");\\n        _;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xf3763fa108235379b48cf8fe9a708692fcb077250d9974351fd636ff0baf84bf\"},\"contracts_common/src/BaseWithStorage/SuperOperators.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./Admin.sol\\\";\\n\\ncontract SuperOperators is Admin {\\n\\n    mapping(address => bool) internal _superOperators;\\n\\n    event SuperOperator(address superOperator, bool enabled);\\n\\n    /// @notice Enable or disable the ability of `superOperator` to transfer tokens of all (superOperator rights).\\n    /// @param superOperator address that will be given/removed superOperator right.\\n    /// @param enabled set whether the superOperator is enabled or disabled.\\n    function setSuperOperator(address superOperator, bool enabled) external {\\n        require(\\n            msg.sender == _admin,\\n            \\\"only admin is allowed to add super operators\\\"\\n        );\\n        _superOperators[superOperator] = enabled;\\n        emit SuperOperator(superOperator, enabled);\\n    }\\n\\n    /// @notice check whether address `who` is given superOperator rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has superOperator rights.\\n    function isSuperOperator(address who) public view returns (bool) {\\n        return _superOperators[who];\\n    }\\n}\\n\",\"keccak256\":\"0x22354cf60ccf77a6de61c13bdaf4e3094d115b960ae563b0527622c846a12abb\"},\"contracts_common/src/Interfaces/ERC1155.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n    @title ERC-1155 Multi Token Standard\\n    @dev See https://eips.ethereum.org/EIPS/eip-1155\\n    Note: The ERC-165 identifier for this interface is 0xd9b67a26.\\n */\\ninterface ERC1155 {\\n\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 value\\n    );\\n\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n        @notice Transfers `value` amount of an `id` from  `from` to `to`  (with safety call).\\n        @dev Caller must be approved to manage the tokens being transferred out of the `from` account (see \\\"Approval\\\" section of the standard).\\n        MUST revert if `to` is the zero address.\\n        MUST revert if balance of holder for token `id` is lower than the `value` sent.\\n        MUST revert on any other error.\\n        MUST emit the `TransferSingle` event to reflect the balance change (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        After the above conditions are met, this function MUST check if `to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        @param from    Source address\\n        @param to      Target address\\n        @param id      ID of the token type\\n        @param value   Transfer amount\\n        @param data    Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `to`\\n    */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n        @notice Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified (with safety call).\\n        @dev Caller must be approved to manage the tokens being transferred out of the `from` account (see \\\"Approval\\\" section of the standard).\\n        MUST revert if `to` is the zero address.\\n        MUST revert if length of `ids` is not the same as length of `values`.\\n        MUST revert if any of the balance(s) of the holder(s) for token(s) in `ids` is lower than the respective amount(s) in `values` sent to the recipient.\\n        MUST revert on any other error.\\n        MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc).\\n        After the above conditions for the transfer(s) in the batch are met, this function MUST check if `to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\\n        @param from    Source address\\n        @param to      Target address\\n        @param ids     IDs of each token type (order and length must match _values array)\\n        @param values  Transfer amounts per token type (order and length must match _ids array)\\n        @param data    Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `to`\\n    */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n        @notice Get the balance of an account's tokens.\\n        @param owner  The address of the token holder\\n        @param id     ID of the token\\n        @return        The _owner's balance of the token type requested\\n     */\\n    function balanceOf(address owner, uint256 id)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n        @notice Get the balance of multiple account/token pairs\\n        @param owners The addresses of the token holders\\n        @param ids    ID of the tokens\\n        @return        The _owner's balance of the token types requested (i.e. balance for each (owner, id) pair)\\n     */\\n    function balanceOfBatch(address[] calldata owners, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n        @notice Enable or disable approval for a third party (\\\"operator\\\") to manage all of the caller's tokens.\\n        @dev MUST emit the ApprovalForAll event on success.\\n        @param operator  Address to add to the set of authorized operators\\n        @param approved  True if the operator is approved, false to revoke approval\\n    */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n        @notice Queries the approval status of an operator for a given owner.\\n        @param owner     The owner of the tokens\\n        @param operator  Address of authorized operator\\n        @return           True if the operator is approved, false if not\\n    */\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xadc315968f24479f9e6e5cbdfb32a3a8d6b83061afb0680ad3a73959e40e447f\"},\"contracts_common/src/Interfaces/ERC1155TokenReceiver.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n    Note: The ERC-165 identifier for this interface is 0x4e2312e0.\\n*/\\ninterface ERC1155TokenReceiver {\\n    /**\\n        @notice Handle the receipt of a single ERC1155 token type.\\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.\\n        This function MUST return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61) if it accepts the transfer.\\n        This function MUST revert if it rejects the transfer.\\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\\n        @param operator  The address which initiated the transfer (i.e. msg.sender)\\n        @param from      The address which previously owned the token\\n        @param id        The ID of the token being transferred\\n        @param value     The amount of tokens being transferred\\n        @param data      Additional data with no specified format\\n        @return           `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n    */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n        @notice Handle the receipt of multiple ERC1155 token types.\\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.\\n        This function MUST return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81) if it accepts the transfer(s).\\n        This function MUST revert if it rejects the transfer(s).\\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\\n        @param operator  The address which initiated the batch transfer (i.e. msg.sender)\\n        @param from      The address which previously owned the token\\n        @param ids       An array containing ids of each token being transferred (order and length must match _values array)\\n        @param values    An array containing amounts of each token being transferred (order and length must match _ids array)\\n        @param data      Additional data with no specified format\\n        @return           `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n    */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x915c81f5684876945b81020f620aa6261a7bf3a1bf0c07f1eada0e88200872de\"},\"contracts_common/src/Interfaces/ERC165.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC165\\n * @dev https://eips.ethereum.org/EIPS/eip-165\\n */\\ninterface ERC165 {\\n    /**\\n   * @notice Query if a contract implements interface `interfaceId`\\n   * @param interfaceId The interface identifier, as specified in ERC-165\\n   * @dev Interface identification is specified in ERC-165. This function\\n   * uses less than 30,000 gas.\\n   */\\n    function supportsInterface(bytes4 interfaceId)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0x69a77aa77ec14f7bc3a1c40aff5bbe828548087ba23b2cc9c99ba6e24f2997c5\"},\"contracts_common/src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20Basic.sol\\\";\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\n/* interface */\\ncontract ERC20 is ERC20Basic {\\n    function transferFrom(address from, address to, uint256 value)\\n        public\\n        returns (bool);\\n    function approve(address spender, uint256 value) public returns (bool);\\n    function allowance(address owner, address spender)\\n        public\\n        view\\n        returns (uint256);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0xa8cb63790e43bb77235530d0add180a84e9eb20c95173059e7d783c599c199b0\"},\"contracts_common/src/Interfaces/ERC20Basic.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC20Basic DRAFT\\n * @dev Simpler version of ERC20 interface\\n * See https://github.com/ethereum/EIPs/issues/179\\n */\\n/* interface */\\ncontract ERC20Basic {\\n    function totalSupply() public view returns (uint256);\\n    function balanceOf(address who) public view returns (uint256);\\n    function transfer(address to, uint256 value) public returns (bool);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n}\\n\",\"keccak256\":\"0x7d333b4cd97e3fa0a67f3f20d79e6a46d5c81a8f7d506aa24c624ec6e4e913b9\"},\"contracts_common/src/Interfaces/ERC721.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC165.sol\\\";\\nimport \\\"./ERC721Events.sol\\\";\\n\\n/**\\n * @title ERC721 Non-Fungible Token Standard basic interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-721\\n */\\n/*interface*/\\ncontract ERC721 is ERC165, ERC721Events {\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n    //   function exists(uint256 tokenId) external view returns (bool exists);\\n\\n    function approve(address to, uint256 tokenId) external;\\n    function getApproved(uint256 tokenId)\\n        external\\n        view\\n        returns (address operator);\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 tokenId)\\n        external;\\n    function safeTransferFrom(address from, address to, uint256 tokenId)\\n        external;\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x5dabbd4bf78518acf2f1f2fd431ad7d16526b0de409aa91010d02869fb3eb302\"},\"contracts_common/src/Interfaces/ERC721Events.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC721 Non-Fungible Token Standard basic interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface ERC721Events {\\n    event Transfer(\\n        address indexed _from,\\n        address indexed _to,\\n        uint256 indexed _tokenId\\n    );\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _approved,\\n        uint256 indexed _tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed _owner,\\n        address indexed _operator,\\n        bool _approved\\n    );\\n}\\n\",\"keccak256\":\"0xdf0051d52413d5e853a9801d5745337e4040949b31568cc17ca50f8853e10567\"},\"contracts_common/src/Interfaces/ERC721TokenReceiver.sol\":{\"content\":\"/* This Source Code Form is subject to the terms of the Mozilla Public\\n * License, v. 2.0. If a copy of the MPL was not distributed with this\\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\\n *\\n * This code has not been reviewed.\\n * Do not use or deploy this code before reviewing it personally first.\\n */\\n// solhint-disable-next-line compiler-fixed\\npragma solidity ^0.5.2;\\n\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x94e7441c07cb2f97b9b5be8ca5a5f76623615963852aa5e20208b8cbcb33c1ce\"},\"contracts_common/src/Interfaces/Medianizer.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n\\n/**\\n * @title Medianizer contract\\n * @dev From MakerDAO (https://etherscan.io/address/0x729D19f657BD0614b4985Cf1D82531c67569197B#code)\\n */\\ninterface Medianizer {\\n    function read() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77a6277882bc0f9482175a23dcd2cf4ec08cc7268f9e8caf71ad49c39b07c262\"},\"contracts_common/src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0x2ad037f43ea9a899526bd911737727d027ce8a2bc1cf615bdf5a1706d400afd6\"},\"contracts_common/src/Libraries/ObjectLib32.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\nimport \\\"./SafeMathWithRequire.sol\\\";\\n\\nlibrary ObjectLib32 {\\n    using SafeMathWithRequire for uint256;\\n    enum Operations {ADD, SUB, REPLACE}\\n    // Constants regarding bin or chunk sizes for balance packing\\n    uint256 constant TYPES_BITS_SIZE = 32; // Max size of each object\\n    uint256 constant TYPES_PER_UINT256 = 256 / TYPES_BITS_SIZE; // Number of types per uint256\\n\\n    //\\n    // Objects and Tokens Functions\\n    //\\n\\n    /**\\n  * @dev Return the bin number and index within that bin where ID is\\n  * @param tokenId Object type\\n  * @return (Bin number, ID's index within that bin)\\n  */\\n    function getTokenBinIndex(uint256 tokenId)\\n        internal\\n        pure\\n        returns (uint256 bin, uint256 index)\\n    {\\n        bin = (tokenId * TYPES_BITS_SIZE) / 256;\\n        index = tokenId % TYPES_PER_UINT256;\\n        return (bin, index);\\n    }\\n\\n    /**\\n  * @dev update the balance of a type provided in binBalances\\n  * @param binBalances Uint256 containing the balances of objects\\n  * @param index Index of the object in the provided bin\\n  * @param amount Value to update the type balance\\n  * @param operation Which operation to conduct :\\n  *     Operations.REPLACE : Replace type balance with amount\\n  *     Operations.ADD     : ADD amount to type balance\\n  *     Operations.SUB     : Substract amount from type balance\\n  */\\n    function updateTokenBalance(\\n        uint256 binBalances,\\n        uint256 index,\\n        uint256 amount,\\n        Operations operation\\n    ) internal pure returns (uint256 newBinBalance) {\\n        uint256 objectBalance = 0;\\n        if (operation == Operations.ADD) {\\n            objectBalance = getValueInBin(binBalances, index);\\n            newBinBalance = writeValueInBin(\\n                binBalances,\\n                index,\\n                objectBalance.add(amount)\\n            );\\n        } else if (operation == Operations.SUB) {\\n            objectBalance = getValueInBin(binBalances, index);\\n            require(objectBalance >= amount, \\\"can't substract more than there is\\\");\\n            newBinBalance = writeValueInBin(\\n                binBalances,\\n                index,\\n                objectBalance.sub(amount)\\n            );\\n        } else if (operation == Operations.REPLACE) {\\n            newBinBalance = writeValueInBin(binBalances, index, amount);\\n        } else {\\n            revert(\\\"Invalid operation\\\"); // Bad operation\\n        }\\n\\n        return newBinBalance;\\n    }\\n    /*\\n  * @dev return value in binValue at position index\\n  * @param binValue uint256 containing the balances of TYPES_PER_UINT256 types\\n  * @param index index at which to retrieve value\\n  * @return Value at given index in bin\\n  */\\n    function getValueInBin(uint256 binValue, uint256 index)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        // Mask to retrieve data for a given binData\\n        uint256 mask = (uint256(1) << TYPES_BITS_SIZE) - 1;\\n\\n        // Shift amount\\n        uint256 rightShift = 256 - TYPES_BITS_SIZE * (index + 1);\\n        return (binValue >> rightShift) & mask;\\n    }\\n\\n    /**\\n  * @dev return the updated binValue after writing amount at index\\n  * @param binValue uint256 containing the balances of TYPES_PER_UINT256 types\\n  * @param index Index at which to retrieve value\\n  * @param amount Value to store at index in bin\\n  * @return Value at given index in bin\\n  */\\n    function writeValueInBin(uint256 binValue, uint256 index, uint256 amount)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        require(\\n            amount < 2**TYPES_BITS_SIZE,\\n            \\\"Amount to write in bin is too large\\\"\\n        );\\n\\n        // Mask to retrieve data for a given binData\\n        uint256 mask = (uint256(1) << TYPES_BITS_SIZE) - 1;\\n\\n        // Shift amount\\n        uint256 leftShift = 256 - TYPES_BITS_SIZE * (index + 1);\\n        return (binValue & ~(mask << leftShift)) | (amount << leftShift);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xde1bb1c4950d4ab69a202352e2d36ce6983b939ea9b5301875b42fe6d6f891c7\"},\"contracts_common/src/Libraries/SafeMathWithRequire.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that revert\\n */\\nlibrary SafeMathWithRequire {\\n    /**\\n    * @dev Multiplies two numbers, throws on overflow.\\n    */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        c = a * b;\\n        require(c / a == b, \\\"overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Integer division of two numbers, truncating the quotient.\\n    */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        // uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return a / b;\\n    }\\n\\n    /**\\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\\n    */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"undeflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n    * @dev Adds two numbers, throws on overflow.\\n    */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        c = a + b;\\n        require(c >= a, \\\"overflow\\\");\\n        return c;\\n    }\\n}\\n\",\"keccak256\":\"0x362e750dc8b68acf6b56e0e78c6e8801b5d08031cfc77576e3222e5f42d99313\"},\"src/Asset/ERC1155ERC721.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport \\\"../../contracts_common/src/Interfaces/ERC1155.sol\\\";\\nimport \\\"../../contracts_common/src/Interfaces/ERC1155TokenReceiver.sol\\\";\\n\\nimport \\\"../../contracts_common/src/Libraries/AddressUtils.sol\\\";\\nimport \\\"../../contracts_common/src/Libraries/ObjectLib32.sol\\\";\\n\\nimport \\\"../../contracts_common/src/Interfaces/ERC721.sol\\\";\\nimport \\\"../../contracts_common/src/Interfaces/ERC721TokenReceiver.sol\\\";\\n\\nimport \\\"../../contracts_common/src/BaseWithStorage/SuperOperators.sol\\\";\\n\\ncontract ERC1155ERC721 is SuperOperators, ERC1155, ERC721 {\\n    using AddressUtils for address;\\n    using ObjectLib32 for ObjectLib32.Operations;\\n    using ObjectLib32 for uint256;\\n\\n    bytes4 private constant ERC1155_IS_RECEIVER = 0x4e2312e0;\\n    bytes4 private constant ERC1155_RECEIVED = 0xf23a6e61;\\n    bytes4 private constant ERC1155_BATCH_RECEIVED = 0xbc197c81;\\n    bytes4 private constant ERC721_RECEIVED = 0x150b7a02;\\n\\n    uint256 private constant CREATOR_OFFSET_MULTIPLIER = uint256(2)**(256 - 160);\\n    uint256 private constant IS_NFT_OFFSET_MULTIPLIER = uint256(2)**(256 - 160 - 1);\\n    uint256 private constant PACK_ID_OFFSET_MULTIPLIER = uint256(2)**(256 - 160 - 1 - 32 - 40);\\n    uint256 private constant PACK_NUM_FT_TYPES_OFFSET_MULTIPLIER = uint256(2)**(256 - 160 - 1 - 32 - 40 - 12);\\n    uint256 private constant NFT_INDEX_OFFSET = 63;\\n\\n    uint256 private constant IS_NFT =            0x0000000000000000000000000000000000000000800000000000000000000000;\\n    uint256 private constant NOT_IS_NFT =        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFF;\\n    uint256 private constant NFT_INDEX =         0x00000000000000000000000000000000000000007FFFFFFF8000000000000000;\\n    uint256 private constant NOT_NFT_INDEX =     0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000007FFFFFFFFFFFFFFF;\\n    uint256 private constant URI_ID =            0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000007FFFFFFFFFFFF800;\\n    uint256 private constant PACK_ID =           0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000007FFFFFFFFF800000;\\n    uint256 private constant PACK_INDEX =        0x00000000000000000000000000000000000000000000000000000000000007FF;\\n    uint256 private constant PACK_NUM_FT_TYPES = 0x00000000000000000000000000000000000000000000000000000000007FF800;\\n\\n    uint256 private constant MAX_SUPPLY = uint256(2)**32 - 1;\\n    uint256 private constant MAX_PACK_SIZE = uint256(2)**11;\\n\\n    event CreatorshipTransfer(\\n        address indexed original,\\n        address indexed from,\\n        address indexed to\\n    );\\n\\n    mapping(address => uint256) private _numNFTPerAddress; // erc721\\n    mapping(uint256 => uint256) private _owners; // erc721\\n    mapping(address => mapping(uint256 => uint256)) private _packedTokenBalance; // erc1155\\n    mapping(address => mapping(address => bool)) private _operatorsForAll; // erc721 and erc1155\\n    mapping(uint256 => address) private _erc721operators; // erc721\\n    mapping(uint256 => bytes32) private _metadataHash; // erc721 and erc1155\\n    mapping(uint256 => bytes) private _rarityPacks; // rarity configuration per packs (2 bits per Asset)\\n    mapping(uint256 => uint32) private _nextCollectionIndex; // extraction\\n\\n    mapping(address => address) private _creatorship; // creatorship transfer\\n\\n    mapping(address => bool) private _bouncers; // the contracts allowed to mint\\n    mapping(address => bool) private _metaTransactionContracts; // native meta-transaction support\\n\\n    address private _bouncerAdmin;\\n\\n    constructor(\\n        address metaTransactionContract,\\n        address admin,\\n        address bouncerAdmin\\n    ) public {\\n        _metaTransactionContracts[metaTransactionContract] = true;\\n        _admin = admin;\\n        _bouncerAdmin = bouncerAdmin;\\n        emit MetaTransactionProcessor(metaTransactionContract, true);\\n    }\\n\\n    event BouncerAdminChanged(address oldBouncerAdmin, address newBouncerAdmin);\\n\\n    /// @notice Returns the current administrator in charge of minting rights.\\n    /// @return the current minting administrator in charge of minting rights.\\n    function getBouncerAdmin() external view returns(address) {\\n        return _bouncerAdmin;\\n    }\\n\\n    /// @notice Change the minting administrator to be `newBouncerAdmin`.\\n    /// @param newBouncerAdmin address of the new minting administrator.\\n    function changeBouncerAdmin(address newBouncerAdmin) external {\\n        require(\\n            msg.sender == _bouncerAdmin,\\n            \\\"only bouncerAdmin can change itself\\\"\\n        );\\n        emit BouncerAdminChanged(_bouncerAdmin, newBouncerAdmin);\\n        _bouncerAdmin = newBouncerAdmin;\\n    }\\n\\n    event Bouncer(address bouncer, bool enabled);\\n\\n    /// @notice Enable or disable the ability of `bouncer` to mint tokens (minting bouncer rights).\\n    /// @param bouncer address that will be given/removed minting bouncer rights.\\n    /// @param enabled set whether the address is enabled or disabled as a minting bouncer.\\n    function setBouncer(address bouncer, bool enabled) external {\\n        require(\\n            msg.sender == _bouncerAdmin,\\n            \\\"only bouncerAdmin can setup bouncers\\\"\\n        );\\n        _bouncers[bouncer] = enabled;\\n        emit Bouncer(bouncer, enabled);\\n    }\\n\\n    /// @notice check whether address `who` is given minting bouncer rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has minting rights.\\n    function isBouncer(address who) external view returns(bool) {\\n        return _bouncers[who];\\n    }\\n\\n    event MetaTransactionProcessor(address metaTransactionProcessor, bool enabled);\\n\\n    /// @notice Enable or disable the ability of `metaTransactionProcessor` to perform meta-tx (metaTransactionProcessor rights).\\n    /// @param metaTransactionProcessor address that will be given/removed metaTransactionProcessor rights.\\n    /// @param enabled set whether the metaTransactionProcessor is enabled or disabled.\\n    function setMetaTransactionProcessor(address metaTransactionProcessor, bool enabled) external {\\n        require(\\n            msg.sender == _admin,\\n            \\\"only admin can setup metaTransactionProcessors\\\"\\n        );\\n        _metaTransactionContracts[metaTransactionProcessor] = enabled;\\n        emit MetaTransactionProcessor(metaTransactionProcessor, enabled);\\n    }\\n\\n    /// @notice check whether address `who` is given meta-transaction execution rights.\\n    /// @param who The address to query.\\n    /// @return whether the address has meta-transaction execution rights.\\n    function isMetaTransactionProcessor(address who) external view returns(bool) {\\n        return _metaTransactionContracts[who];\\n    }\\n\\n    /// @notice Mint a token type for `creator` on slot `packId`.\\n    /// @param creator address of the creator of the token.\\n    /// @param packId unique packId for that token.\\n    /// @param hash hash of an IPFS cidv1 folder that contains the metadata of the token type in the file 0.json.\\n    /// @param supply number of tokens minted for that token type.\\n    /// @param rarity rarity power of the token.\\n    /// @param owner address that will receive the tokens.\\n    /// @param data extra data to accompany the minting call.\\n    /// @return the id of the newly minted token type.\\n    function mint(\\n        address creator,\\n        uint40 packId,\\n        bytes32 hash,\\n        uint256 supply,\\n        uint8 rarity,\\n        address owner,\\n        bytes calldata data\\n    ) external returns (uint256 id) {\\n        require(hash != 0, \\\"hash is zero\\\");\\n        require(_bouncers[msg.sender], \\\"only bouncer allowed to mint\\\");\\n        require(owner != address(0), \\\"destination is zero address\\\");\\n        id = generateTokenId(creator, supply, packId, supply == 1 ? 0 : 1, 0);\\n        _mint(\\n            hash,\\n            supply,\\n            rarity,\\n            msg.sender,\\n            owner,\\n            id,\\n            data,\\n            false\\n        );\\n    }\\n\\n    function generateTokenId(\\n        address creator,\\n        uint256 supply,\\n        uint40 packId,\\n        uint16 numFTs,\\n        uint16 packIndex\\n    ) internal pure returns (uint256) {\\n        require(supply > 0 && supply <= MAX_SUPPLY, \\\"invalid supply\\\");\\n\\n        return\\n            uint256(creator) * CREATOR_OFFSET_MULTIPLIER + // CREATOR\\n            (supply == 1 ? uint256(1) * IS_NFT_OFFSET_MULTIPLIER : 0) + // minted as NFT (1) or FT (0) // IS_NFT\\n            uint256(packId) * PACK_ID_OFFSET_MULTIPLIER + // packId (unique pack) // PACk_ID\\n            numFTs * PACK_NUM_FT_TYPES_OFFSET_MULTIPLIER + // number of fungible token in the pack // PACK_NUM_FT_TYPES\\n            packIndex; // packIndex (position in the pack) // PACK_INDEX\\n    }\\n\\n    function _mint(\\n        bytes32 hash,\\n        uint256 supply,\\n        uint8 rarity,\\n        address operator,\\n        address owner,\\n        uint256 id,\\n        bytes memory data,\\n        bool extraction\\n    ) internal {\\n        uint256 uriId = id & URI_ID;\\n        if (!extraction) {\\n            require(uint256(_metadataHash[uriId]) == 0, \\\"id already used\\\");\\n            _metadataHash[uriId] = hash;\\n            require(rarity < 4, \\\"rarity >= 4\\\");\\n            bytes memory pack = new bytes(1);\\n            pack[0] = bytes1(rarity * 64);\\n            _rarityPacks[uriId] = pack;\\n        }\\n        if (supply == 1) {\\n            // ERC721\\n            _numNFTPerAddress[owner]++;\\n            _owners[id] = uint256(owner);\\n            emit Transfer(address(0), owner, id);\\n        } else {\\n            (uint256 bin, uint256 index) = id.getTokenBinIndex();\\n            _packedTokenBalance[owner][bin] = _packedTokenBalance[owner][bin]\\n                .updateTokenBalance(\\n                index,\\n                supply,\\n                ObjectLib32.Operations.REPLACE\\n            );\\n        }\\n\\n        emit TransferSingle(operator, address(0), owner, id, supply);\\n        require(\\n            _checkERC1155AndCallSafeTransfer(\\n                operator,\\n                address(0),\\n                owner,\\n                id,\\n                supply,\\n                data,\\n                false,\\n                false\\n            ),\\n            \\\"transfer rejected\\\"\\n        );\\n    }\\n\\n    /// @notice Mint multiple token types for `creator` on slot `packId`.\\n    /// @param creator address of the creator of the tokens.\\n    /// @param packId unique packId for the tokens.\\n    /// @param hash hash of an IPFS cidv1 folder that contains the metadata of each token type in the files: 0.json, 1.json, 2.json, etc...\\n    /// @param supplies number of tokens minted for each token type.\\n    /// @param rarityPack rarity power of each token types packed into 2 bits each.\\n    /// @param owner address that will receive the tokens.\\n    /// @param data extra data to accompany the minting call.\\n    /// @return the ids of each newly minted token types.\\n    function mintMultiple(\\n        address creator,\\n        uint40 packId,\\n        bytes32 hash,\\n        uint256[] calldata supplies,\\n        bytes calldata rarityPack,\\n        address owner,\\n        bytes calldata data\\n    ) external returns (uint256[] memory ids) {\\n        require(hash != 0, \\\"hash is zero\\\");\\n        require(_bouncers[msg.sender], \\\"only bouncer allowed to mint\\\");\\n        require(owner != address(0), \\\"destination is zero address\\\");\\n        uint16 numNFTs;\\n        (ids, numNFTs) = allocateIds(\\n            creator,\\n            supplies,\\n            rarityPack,\\n            packId,\\n            hash\\n        );\\n        _mintBatches(supplies, owner, ids, numNFTs);\\n        completeMultiMint(msg.sender, owner, ids, supplies, data);\\n    }\\n\\n    function allocateIds(\\n        address creator,\\n        uint256[] memory supplies,\\n        bytes memory rarityPack,\\n        uint40 packId,\\n        bytes32 hash\\n    ) internal returns (uint256[] memory ids, uint16 numNFTs) {\\n        require(supplies.length > 0, \\\"supplies.length == 0\\\");\\n        require(supplies.length <= MAX_PACK_SIZE, \\\"too big batch\\\");\\n        (ids, numNFTs) = generateTokenIds(creator, supplies, packId);\\n        uint256 uriId = ids[0] & URI_ID;\\n        require(uint256(_metadataHash[uriId]) == 0, \\\"id already used\\\");\\n        _metadataHash[uriId] = hash;\\n        _rarityPacks[uriId] = rarityPack;\\n    }\\n\\n    function generateTokenIds(\\n        address creator,\\n        uint256[] memory supplies,\\n        uint40 packId\\n    ) internal pure returns (uint256[] memory, uint16) {\\n        uint16 numTokenTypes = uint16(supplies.length);\\n        uint256[] memory ids = new uint256[](numTokenTypes);\\n        uint16 numNFTs = 0;\\n        for (uint16 i = 0; i < numTokenTypes; i++) {\\n            if (numNFTs == 0) {\\n                if (supplies[i] == 1) {\\n                    numNFTs = uint16(numTokenTypes - i);\\n                }\\n            } else {\\n                require(supplies[i] == 1, \\\"NFTs need to be put at the end\\\");\\n            }\\n        }\\n        uint16 numFTs = numTokenTypes - numNFTs;\\n        for (uint16 i = 0; i < numTokenTypes; i++) {\\n            ids[i] = generateTokenId(creator, supplies[i], packId, numFTs, i);\\n        }\\n        return (ids, numNFTs);\\n    }\\n\\n    function completeMultiMint(\\n        address operator,\\n        address owner,\\n        uint256[] memory ids,\\n        uint256[] memory supplies,\\n        bytes memory data\\n    ) internal {\\n        emit TransferBatch(operator, address(0), owner, ids, supplies);\\n        require(\\n            _checkERC1155AndCallSafeBatchTransfer(\\n                operator,\\n                address(0),\\n                owner,\\n                ids,\\n                supplies,\\n                data\\n            ),\\n            \\\"transfer rejected\\\"\\n        );\\n    }\\n\\n    function _mintBatches(\\n        uint256[] memory supplies,\\n        address owner,\\n        uint256[] memory ids,\\n        uint16 numNFTs\\n    ) internal {\\n        uint16 offset = 0;\\n        while (offset < supplies.length - numNFTs) {\\n            _mintBatch(offset, supplies, owner, ids);\\n            offset += 8;\\n        }\\n        // deal with NFT last. they do not care of balance packing\\n        if (numNFTs > 0) {\\n            _mintNFTs(\\n                uint16(supplies.length - numNFTs),\\n                numNFTs,\\n                owner,\\n                ids\\n            );\\n        }\\n    }\\n\\n    function _mintNFTs(\\n        uint16 offset,\\n        uint32 numNFTs,\\n        address owner,\\n        uint256[] memory ids\\n    ) internal {\\n        for (uint16 i = 0; i < numNFTs; i++) {\\n            uint256 id = ids[i + offset];\\n            _owners[id] = uint256(owner);\\n            emit Transfer(address(0), owner, id);\\n        }\\n        _numNFTPerAddress[owner] += numNFTs;\\n    }\\n\\n    function _mintBatch(\\n        uint16 offset,\\n        uint256[] memory supplies,\\n        address owner,\\n        uint256[] memory ids\\n    ) internal {\\n        uint256 firstId = ids[offset];\\n        (uint256 bin, uint256 index) = firstId.getTokenBinIndex();\\n        uint256 balances = _packedTokenBalance[owner][bin];\\n        for (uint256 i = 0; i < 8 && offset + i < supplies.length; i++) {\\n            uint256 j = offset + i;\\n            if (supplies[j] > 1) {\\n                balances = balances.updateTokenBalance(\\n                    index + i,\\n                    supplies[j],\\n                    ObjectLib32.Operations.REPLACE\\n                );\\n            } else {\\n                break;\\n            }\\n        }\\n        _packedTokenBalance[owner][bin] = balances;\\n    }\\n\\n    function _transferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 value\\n    ) internal returns (bool metaTx) {\\n        require(to != address(0), \\\"destination is zero address\\\");\\n        require(from != address(0), \\\"from is zero address\\\");\\n        metaTx = _metaTransactionContracts[msg.sender];\\n        bool authorized = from == msg.sender ||\\n            metaTx ||\\n            _superOperators[msg.sender] ||\\n            _operatorsForAll[from][msg.sender];\\n\\n        if (id & IS_NFT > 0) {\\n            require(\\n                authorized || _erc721operators[id] == msg.sender,\\n                \\\"Operator not approved\\\"\\n            );\\n            if(value > 0) {\\n                require(value == 1, \\\"cannot transfer nft if amount not 1\\\");\\n                _numNFTPerAddress[from]--;\\n                _numNFTPerAddress[to]++;\\n                _owners[id] = uint256(to);\\n                if (_erc721operators[id] != address(0)) { // TODO operatorEnabled flag optimization (like in ERC721BaseToken)\\n                    _erc721operators[id] = address(0);\\n                }\\n                emit Transfer(from, to, id);\\n            }\\n        } else {\\n            require(authorized, \\\"Operator not approved\\\");\\n            if(value > 0) {\\n                // if different owners it will fails\\n                (uint256 bin, uint256 index) = id.getTokenBinIndex();\\n                _packedTokenBalance[from][bin] = _packedTokenBalance[from][bin]\\n                    .updateTokenBalance(index, value, ObjectLib32.Operations.SUB);\\n                _packedTokenBalance[to][bin] = _packedTokenBalance[to][bin]\\n                    .updateTokenBalance(index, value, ObjectLib32.Operations.ADD);\\n            }\\n        }\\n\\n        emit TransferSingle(\\n            metaTx ? from : msg.sender,\\n            from,\\n            to,\\n            id,\\n            value\\n        );\\n    }\\n\\n    /// @notice Transfers `value` tokens of type `id` from  `from` to `to`  (with safety call).\\n    /// @param from address from which tokens are transfered.\\n    /// @param to address to which the token will be transfered.\\n    /// @param id the token type transfered.\\n    /// @param value amount of token transfered.\\n    /// @param data aditional data accompanying the transfer.\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external {\\n        if (id & IS_NFT > 0) {\\n            require(_ownerOf(id) == from, \\\"not owner\\\");\\n        }\\n        bool metaTx = _transferFrom(from, to, id, value);\\n        require(\\n            _checkERC1155AndCallSafeTransfer(\\n                metaTx ? from : msg.sender,\\n                from,\\n                to,\\n                id,\\n                value,\\n                data,\\n                false,\\n                false\\n            ),\\n            \\\"erc1155 transfer rejected\\\"\\n        );\\n    }\\n\\n    /// @notice Transfers `values` tokens of type `ids` from  `from` to `to` (with safety call).\\n    /// @dev call data should be optimized to order ids so packedBalance can be used efficiently.\\n    /// @param from address from which tokens are transfered.\\n    /// @param to address to which the token will be transfered.\\n    /// @param ids ids of each token type transfered.\\n    /// @param values amount of each token type transfered.\\n    /// @param data aditional data accompanying the transfer.\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external {\\n        require(\\n            ids.length == values.length,\\n            \\\"Inconsistent array length between args\\\"\\n        );\\n        require(to != address(0), \\\"destination is zero address\\\");\\n        require(from != address(0), \\\"from is zero address\\\");\\n        bool metaTx = _metaTransactionContracts[msg.sender];\\n        bool authorized = from == msg.sender ||\\n            metaTx ||\\n            _superOperators[msg.sender] ||\\n            _operatorsForAll[from][msg.sender]; // solium-disable-line max-len\\n\\n        _batchTransferFrom(from, to, ids, values, authorized);\\n        emit TransferBatch(\\n            metaTx ? from : msg.sender,\\n            from,\\n            to,\\n            ids,\\n            values\\n        );\\n        require(\\n            _checkERC1155AndCallSafeBatchTransfer(\\n                metaTx ? from : msg.sender,\\n                from,\\n                to,\\n                ids,\\n                values,\\n                data\\n            ),\\n            \\\"erc1155 transfer rejected\\\"\\n        );\\n    }\\n\\n    function _batchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory values,\\n        bool authorized\\n    ) internal {\\n        uint256 numItems = ids.length;\\n        uint256 bin;\\n        uint256 index;\\n        uint256 balFrom;\\n        uint256 balTo;\\n\\n        uint256 lastBin;\\n        uint256 numNFTs = 0;\\n        for (uint256 i = 0; i < numItems; i++) {\\n            if (ids[i] & IS_NFT > 0) {\\n                require(\\n                    authorized || _erc721operators[ids[i]] == msg.sender,\\n                    \\\"Operator not approved\\\"\\n                );\\n                if(values[i] > 0) {\\n                    require(values[i] == 1, \\\"cannot transfer nft if amount not 1\\\");\\n                    require(_ownerOf(ids[i]) == from, \\\"not owner\\\");\\n                    numNFTs++;\\n                    _owners[ids[i]] = uint256(to);\\n                    if (_erc721operators[ids[i]] != address(0)) { // TODO operatorEnabled flag optimization (like in ERC721BaseToken)\\n                        _erc721operators[ids[i]] = address(0);\\n                    }\\n                    emit Transfer(from, to, ids[i]);\\n                }\\n            } else {\\n                require(authorized, \\\"Operator not approved\\\");\\n                if(values[i] > 0) {\\n                    (bin, index) = ids[i].getTokenBinIndex();\\n                    if (lastBin == 0) {\\n                        lastBin = bin;\\n                        balFrom = ObjectLib32.updateTokenBalance(\\n                            _packedTokenBalance[from][bin],\\n                            index,\\n                            values[i],\\n                            ObjectLib32.Operations.SUB\\n                        );\\n                        balTo = ObjectLib32.updateTokenBalance(\\n                            _packedTokenBalance[to][bin],\\n                            index,\\n                            values[i],\\n                            ObjectLib32.Operations.ADD\\n                        );\\n                    } else {\\n                        if (bin != lastBin) {\\n                            _packedTokenBalance[from][lastBin] = balFrom;\\n                            _packedTokenBalance[to][lastBin] = balTo;\\n                            balFrom = _packedTokenBalance[from][bin];\\n                            balTo = _packedTokenBalance[to][bin];\\n                            lastBin = bin;\\n                        }\\n\\n                        balFrom = balFrom.updateTokenBalance(\\n                            index,\\n                            values[i],\\n                            ObjectLib32.Operations.SUB\\n                        );\\n                        balTo = balTo.updateTokenBalance(\\n                            index,\\n                            values[i],\\n                            ObjectLib32.Operations.ADD\\n                        );\\n                    }\\n                }\\n            }\\n        }\\n        if (numNFTs > 0) {\\n            _numNFTPerAddress[from] -= numNFTs;\\n            _numNFTPerAddress[to] += numNFTs;\\n        }\\n\\n        if (bin != 0) {\\n            _packedTokenBalance[from][bin] = balFrom;\\n            _packedTokenBalance[to][bin] = balTo;\\n        }\\n    }\\n\\n    /// @notice Get the balance of `owner` for the token type `id`.\\n    /// @param owner The address of the token holder.\\n    /// @param id the token type of which to get the balance of.\\n    /// @return the balance of `owner` for the token type `id`.\\n    function balanceOf(address owner, uint256 id)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        // do not check for existence, balance is zero if never minted\\n        // require(wasEverMinted(id), \\\"token was never minted\\\");\\n        if (id & IS_NFT > 0) {\\n            if (_ownerOf(id) == owner) {\\n                return 1;\\n            } else {\\n                return 0;\\n            }\\n        }\\n        (uint256 bin, uint256 index) = id.getTokenBinIndex();\\n        return _packedTokenBalance[owner][bin].getValueInBin(index);\\n    }\\n\\n    /// @notice Get the balance of `owners` for each token type `ids`.\\n    /// @param owners the addresses of the token holders queried.\\n    /// @param ids ids of each token type to query.\\n    /// @return the balance of each `owners` for each token type `ids`.\\n    function balanceOfBatch(\\n        address[] calldata owners,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory) {\\n        require(\\n            owners.length == ids.length,\\n            \\\"Inconsistent array length between args\\\"\\n        );\\n        uint256[] memory balances = new uint256[](ids.length);\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            balances[i] = balanceOf(owners[i], ids[i]);\\n        }\\n        return balances;\\n    }\\n\\n    /// @notice Get the creator of the token type `id`.\\n    /// @param id the id of the token to get the creator of.\\n    /// @return the creator of the token type `id`.\\n    function creatorOf(uint256 id) external view returns (address) {\\n        require(wasEverMinted(id), \\\"token was never minted\\\");\\n        address originalCreator = address(id / CREATOR_OFFSET_MULTIPLIER);\\n        address newCreator = _creatorship[originalCreator];\\n        if (newCreator != address(0)) {\\n            return newCreator;\\n        }\\n        return originalCreator;\\n    }\\n\\n    /// @notice Transfers creatorship of `original` from `sender` to `to`.\\n    /// @param sender address of current registered creator.\\n    /// @param original address of the original creator whose creation are saved in the ids themselves.\\n    /// @param to address which will be given creatorship for all tokens originally minted by `original`.\\n    function transferCreatorship(\\n        address sender,\\n        address original,\\n        address to\\n    ) external {\\n        require(\\n            msg.sender == sender ||\\n            _metaTransactionContracts[msg.sender] ||\\n            _superOperators[msg.sender],\\n            \\\"require meta approval\\\"\\n        );\\n        require(sender != address(0), \\\"sender is zero address\\\");\\n        require(to != address(0), \\\"destination is zero address\\\");\\n        address current = _creatorship[original];\\n        if (current == address(0)) {\\n            current = original;\\n        }\\n        require(current != to, \\\"current == to\\\");\\n        require(current == sender, \\\"current != sender\\\");\\n        if (to == original) {\\n            _creatorship[original] = address(0);\\n        } else {\\n            _creatorship[original] = to;\\n        }\\n        emit CreatorshipTransfer(original, current, to);\\n    }\\n\\n    /// @notice Enable or disable approval for `operator` to manage all `sender`'s tokens.\\n    /// @dev used for Meta Transaction (from metaTransactionContract).\\n    /// @param sender address which grant approval.\\n    /// @param operator address which will be granted rights to transfer all token owned by `sender`.\\n    /// @param approved whether to approve or revoke.\\n    function setApprovalForAllFor(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) external {\\n        require(\\n            msg.sender == sender ||\\n            _metaTransactionContracts[msg.sender] ||\\n            _superOperators[msg.sender],\\n            \\\"require meta approval\\\"\\n        );\\n        _setApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /// @notice Enable or disable approval for `operator` to manage all of the caller's tokens.\\n    /// @param operator address which will be granted rights to transfer all tokens of the caller.\\n    /// @param approved whether to approve or revoke\\n    function setApprovalForAll(address operator, bool approved) external {\\n        _setApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function _setApprovalForAll(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) internal {\\n        require(sender != address(0), \\\"sender is zero address\\\");\\n        require(sender != operator, \\\"sender = operator\\\");\\n        require(operator != address(0), \\\"operator is zero address\\\");\\n        require(\\n            !_superOperators[operator],\\n            \\\"super operator can't have their approvalForAll changed\\\"\\n        );\\n        _operatorsForAll[sender][operator] = approved;\\n        emit ApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /// @notice Queries the approval status of `operator` for owner `owner`.\\n    /// @param owner the owner of the tokens.\\n    /// @param operator address of authorized operator.\\n    /// @return true if the operator is approved, false if not.\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool isOperator)\\n    {\\n        require(owner != address(0), \\\"owner is zero address\\\");\\n        require(operator != address(0), \\\"operator is zero address\\\");\\n        return _operatorsForAll[owner][operator] || _superOperators[operator];\\n    }\\n\\n    /// @notice Count all NFTs assigned to `owner`.\\n    /// @param owner address for whom to query the balance.\\n    /// @return the number of NFTs owned by `owner`, possibly zero.\\n    function balanceOf(address owner)\\n        external\\n        view\\n        returns (uint256 balance)\\n    {\\n        require(owner != address(0), \\\"owner is zero address\\\");\\n        return _numNFTPerAddress[owner];\\n    }\\n\\n    /// @notice Find the owner of an NFT.\\n    /// @param id the identifier for an NFT.\\n    /// @return the address of the owner of the NFT.\\n    function ownerOf(uint256 id) external view returns (address owner) {\\n        owner = _ownerOf(id);\\n        require(owner != address(0), \\\"NFT does not exist\\\");\\n    }\\n\\n    function _ownerOf(uint256 id) internal view returns (address) {\\n        return address(_owners[id]);\\n    }\\n\\n    /// @notice Change or reaffirm the approved address for an NFT for `sender`.\\n    /// @dev used for Meta Transaction (from metaTransactionContract).\\n    /// @param sender the sender granting control.\\n    /// @param operator the address to approve as NFT controller.\\n    /// @param id the NFT to approve.\\n    function approveFor(address sender, address operator, uint256 id)\\n        external\\n    {\\n        address owner = _ownerOf(id);\\n        require(sender != address(0), \\\"sender is zero address\\\");\\n        require(\\n            msg.sender == sender ||\\n            _metaTransactionContracts[msg.sender] ||\\n            _superOperators[msg.sender] ||\\n            _operatorsForAll[sender][msg.sender],\\n            \\\"require operators\\\"\\n        ); // solium-disable-line max-len\\n        require(owner == sender, \\\"not owner\\\");\\n        _erc721operators[id] = operator;\\n        emit Approval(owner, operator, id);\\n    }\\n\\n    /// @notice Change or reaffirm the approved address for an NFT.\\n    /// @param operator the address to approve as NFT controller.\\n    /// @param id the id of the NFT to approve.\\n    function approve(address operator, uint256 id) external {\\n        address owner = _ownerOf(id);\\n        require(owner != address(0), \\\"NFT does not exist\\\");\\n        require(\\n            owner == msg.sender ||\\n            _superOperators[msg.sender] ||\\n            _operatorsForAll[owner][msg.sender],\\n            \\\"not authorized\\\"\\n        );\\n        _erc721operators[id] = operator;\\n        emit Approval(owner, operator, id);\\n    }\\n\\n    /// @notice Get the approved address for a single NFT.\\n    /// @param id the NFT to find the approved address for.\\n    /// @return the approved address for this NFT, or the zero address if there is none.\\n    function getApproved(uint256 id)\\n        external\\n        view\\n        returns (address operator)\\n    {\\n        require(_ownerOf(id) != address(0), \\\"NFT does not exist\\\");\\n        return _erc721operators[id];\\n    }\\n\\n    /// @notice Transfers ownership of an NFT.\\n    /// @param from the current owner of the NFT.\\n    /// @param to the new owner.\\n    /// @param id the NFT to transfer.\\n    function transferFrom(address from, address to, uint256 id) external {\\n        require(_ownerOf(id) == from, \\\"not owner\\\");\\n        bool metaTx = _transferFrom(from, to, id, 1);\\n        require(\\n            _checkERC1155AndCallSafeTransfer(\\n                metaTx ? from : msg.sender,\\n                from,\\n                to,\\n                id,\\n                1,\\n                \\\"\\\",\\n                true,\\n                false\\n            ),\\n            \\\"erc1155 transfer rejected\\\"\\n        );\\n    }\\n\\n    /// @notice Transfers the ownership of an NFT from one address to another address.\\n    /// @param from the current owner of the NFT.\\n    /// @param to the new owner.\\n    /// @param id the NFT to transfer.\\n    function safeTransferFrom(address from, address to, uint256 id)\\n        external\\n    {\\n        safeTransferFrom(from, to, id, \\\"\\\");\\n    }\\n\\n    /// @notice Transfers the ownership of an NFT from one address to another address.\\n    /// @param from the current owner of the NFT.\\n    /// @param to the new owner.\\n    /// @param id the NFT to transfer.\\n    /// @param data additional data with no specified format, sent in call to `to`.\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) public {\\n        require(_ownerOf(id) == from, \\\"not owner\\\");\\n        bool metaTx = _transferFrom(from, to, id, 1);\\n        require(\\n            _checkERC1155AndCallSafeTransfer(\\n                metaTx ? from : msg.sender,\\n                from,\\n                to,\\n                id,\\n                1,\\n                data,\\n                true,\\n                true\\n            ),\\n            \\\"erc721/erc1155 transfer rejected\\\"\\n        );\\n    }\\n\\n    /// @notice A descriptive name for the collection of tokens in this contract.\\n    /// @return the name of the tokens.\\n    function name() external pure returns (string memory _name) {\\n        return \\\"Sandbox's ASSETs\\\";\\n    }\\n\\n    /// @notice An abbreviated name for the collection of tokens in this contract.\\n    /// @return the symbol of the tokens.\\n    function symbol() external pure returns (string memory _symbol) {\\n        return \\\"ASSET\\\";\\n    }\\n\\n    /// @notice Gives the rarity power of a particular token type.\\n    /// @param id the token type to get the rarity of.\\n    /// @return the rarity power(between 0 and 3).\\n    function rarity(uint256 id) public view returns (uint256) {\\n        require(wasEverMinted(id), \\\"token was never minted\\\");\\n        bytes storage rarityPack = _rarityPacks[id & URI_ID];\\n        uint256 packIndex = id & PACK_INDEX;\\n        if (packIndex / 4 >= rarityPack.length) {\\n            return 0;\\n        } else {\\n            uint8 pack = uint8(rarityPack[packIndex / 4]);\\n            uint8 i = (3 - uint8(packIndex % 4)) * 2;\\n            return (pack / (uint8(2)**i)) % 4;\\n        }\\n    }\\n\\n    /// @notice Gives the collection a specific token belongs to.\\n    /// @param id the token to get the collection of.\\n    /// @return the collection the NFT is part of.\\n    function collectionOf(uint256 id) public view returns (uint256) {\\n        require(_ownerOf(id) != address(0), \\\"NFT does not exist\\\");\\n        uint256 collectionId = id & NOT_NFT_INDEX & NOT_IS_NFT;\\n        require(wasEverMinted(collectionId), \\\"no collection ever minted for that token\\\");\\n        return collectionId;\\n    }\\n\\n    /// @notice Return wether the id is a collection\\n    /// @param id collectionId to check.\\n    /// @return whether the id is a collection.\\n    function isCollection(uint256 id) public view returns (bool) {\\n        uint256 collectionId = id & NOT_NFT_INDEX & NOT_IS_NFT;\\n        return wasEverMinted(collectionId);\\n    }\\n\\n    /// @notice Gives the index at which an NFT was minted in a collection : first of a collection get the zero index.\\n    /// @param id the token to get the index of.\\n    /// @return the index/order at which the token `id` was minted in a collection.\\n    function collectionIndexOf(uint256 id) public view returns (uint256) {\\n        collectionOf(id); // this check if id and collection indeed was ever minted\\n        return uint32((id & NFT_INDEX) >> NFT_INDEX_OFFSET);\\n    }\\n\\n    function toFullURI(bytes32 hash, uint256 id)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        return\\n            string(\\n                abi.encodePacked(\\n                    \\\"ipfs://bafybei\\\",\\n                    hash2base32(hash),\\n                    \\\"/\\\",\\n                    uint2str(id & PACK_INDEX),\\n                    \\\".json\\\"\\n                )\\n            );\\n    }\\n\\n    function wasEverMinted(uint256 id) public view returns(bool) {\\n        if ((id & IS_NFT) > 0) {\\n            return _owners[id] != 0;\\n        } else {\\n            return\\n                ((id & PACK_INDEX) < ((id & PACK_NUM_FT_TYPES) / PACK_NUM_FT_TYPES_OFFSET_MULTIPLIER)) &&\\n                _metadataHash[id & URI_ID] != 0;\\n        }\\n    }\\n\\n    /// @notice check whether a packId/numFT tupple has been used\\n    /// @param creator for which creator\\n    /// @param packId the packId to check\\n    /// @param numFTs number of Fungible Token in that pack (can reuse packId if different)\\n    /// @return whether the pack has already been used\\n    function isPackIdUsed(address creator, uint40 packId, uint16 numFTs) external returns(bool) {\\n        uint256 uriId = uint256(creator) * CREATOR_OFFSET_MULTIPLIER + // CREATOR\\n            uint256(packId) * PACK_ID_OFFSET_MULTIPLIER + // packId (unique pack) // PACk_ID\\n            numFTs * PACK_NUM_FT_TYPES_OFFSET_MULTIPLIER; // number of fungible token in the pack // PACK_NUM_FT_TYPES\\n        return _metadataHash[uriId] != 0;\\n    }\\n\\n    /// @notice A distinct Uniform Resource Identifier (URI) for a given token.\\n    /// @param id token to get the uri of.\\n    /// @return URI string\\n    function uri(uint256 id) public view returns (string memory) {\\n        require(wasEverMinted(id), \\\"token was never minted\\\"); // prevent returning invalid uri\\n        return toFullURI(_metadataHash[id & URI_ID], id);\\n    }\\n\\n    /// @notice A distinct Uniform Resource Identifier (URI) for a given asset.\\n    /// @param id token to get the uri of.\\n    /// @return URI string\\n    function tokenURI(uint256 id) public view returns (string memory) {\\n        require(_ownerOf(id) != address(0), \\\"NFT does not exist\\\");\\n        return toFullURI(_metadataHash[id & URI_ID], id);\\n    }\\n\\n    bytes32 private constant base32Alphabet = 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637;\\n    // solium-disable-next-line security/no-assign-params\\n    function hash2base32(bytes32 hash)\\n        private\\n        pure\\n        returns (string memory _uintAsString)\\n    {\\n        uint256 _i = uint256(hash);\\n        uint256 k = 52;\\n        bytes memory bstr = new bytes(k);\\n        bstr[--k] = base32Alphabet[uint8((_i % 8) << 2)]; // uint8 s = uint8((256 - skip) % 5);  // (_i % (2**s)) << (5-s)\\n        _i /= 8;\\n        while (k > 0) {\\n            bstr[--k] = base32Alphabet[_i % 32];\\n            _i /= 32;\\n        }\\n        return string(bstr);\\n    }\\n\\n    // solium-disable-next-line security/no-assign-params\\n    function uint2str(uint256 _i)\\n        private\\n        pure\\n        returns (string memory _uintAsString)\\n    {\\n        if (_i == 0) {\\n            return \\\"0\\\";\\n        }\\n\\n        uint256 j = _i;\\n        uint256 len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n\\n        bytes memory bstr = new bytes(len);\\n        uint256 k = len - 1;\\n        while (_i != 0) {\\n            bstr[k--] = bytes1(uint8(48 + (_i % 10)));\\n            _i /= 10;\\n        }\\n\\n        return string(bstr);\\n    }\\n\\n    /// @notice Query if a contract implements interface `id`.\\n    /// @param id the interface identifier, as specified in ERC-165.\\n    /// @return `true` if the contract implements `id`.\\n    function supportsInterface(bytes4 id) external view returns (bool) {\\n        return\\n            id == 0x01ffc9a7 || //ERC165\\n            id == 0xd9b67a26 || // ERC1155\\n            id == 0x80ac58cd || // ERC721\\n            id == 0x5b5e139f || // ERC721 metadata\\n            id == 0x0e89341c; // ERC1155 metadata\\n    }\\n\\n    bytes4 constant ERC165ID = 0x01ffc9a7;\\n    function checkIsERC1155Receiver(address _contract)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        bool success;\\n        bool result;\\n        bytes memory call_data = abi.encodeWithSelector(\\n            ERC165ID,\\n            ERC1155_IS_RECEIVER\\n        );\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            let call_ptr := add(0x20, call_data)\\n            let call_size := mload(call_data)\\n            let output := mload(0x40) // Find empty storage location using \\\"free memory pointer\\\"\\n            mstore(output, 0x0)\\n            success := staticcall(\\n                10000,\\n                _contract,\\n                call_ptr,\\n                call_size,\\n                output,\\n                0x20\\n            ) // 32 bytes\\n            result := mload(output)\\n        }\\n        // (10000 / 63) \\\"not enough for supportsInterface(...)\\\" // consume all gas, so caller can potentially know that there was not enough gas\\n        assert(gasleft() > 158);\\n        return success && result;\\n    }\\n\\n    function _checkERC1155AndCallSafeTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 value,\\n        bytes memory data,\\n        bool erc721,\\n        bool erc721Safe\\n    ) internal returns (bool) {\\n        if (!to.isContract()) {\\n            return true;\\n        }\\n        if (erc721) {\\n            if (!checkIsERC1155Receiver(to)) {\\n                if (erc721Safe) {\\n                    return\\n                        _checkERC721AndCallSafeTransfer(\\n                            operator,\\n                            from,\\n                            to,\\n                            id,\\n                            data\\n                        );\\n                } else {\\n                    return true;\\n                }\\n            }\\n        }\\n        return\\n            ERC1155TokenReceiver(to).onERC1155Received(\\n                    operator,\\n                    from,\\n                    id,\\n                    value,\\n                    data\\n            ) == ERC1155_RECEIVED;\\n    }\\n\\n    function _checkERC1155AndCallSafeBatchTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory values,\\n        bytes memory data\\n    ) internal returns (bool) {\\n        if (!to.isContract()) {\\n            return true;\\n        }\\n        bytes4 retval = ERC1155TokenReceiver(to).onERC1155BatchReceived(\\n            operator,\\n            from,\\n            ids,\\n            values,\\n            data\\n        );\\n        return (retval == ERC1155_BATCH_RECEIVED);\\n    }\\n\\n    function _checkERC721AndCallSafeTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) internal returns (bool) {\\n        // following not required as this function is always called as part of ERC1155 checks that include such check already\\n        // if (!to.isContract()) {\\n        //     return true;\\n        // }\\n        return (ERC721TokenReceiver(to).onERC721Received(\\n                operator,\\n                from,\\n                id,\\n                data\\n            ) ==\\n            ERC721_RECEIVED);\\n    }\\n\\n    event Extraction(uint256 indexed fromId, uint256 toId);\\n    event AssetUpdate(uint256 indexed fromId, uint256 toId);\\n\\n    function _burnERC1155(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint32 amount\\n    ) internal {\\n        (uint256 bin, uint256 index) = (id).getTokenBinIndex();\\n        _packedTokenBalance[from][bin] = _packedTokenBalance[from][bin]\\n            .updateTokenBalance(index, amount, ObjectLib32.Operations.SUB);\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n    }\\n\\n    function _burnERC721(address operator, address from, uint256 id)\\n        internal\\n    {\\n        require(from == _ownerOf(id), \\\"not owner\\\");\\n        _owners[id] = 2**160; // equivalent to zero address when casted but ensure we track minted status\\n        _numNFTPerAddress[from]--;\\n        emit Transfer(from, address(0), id);\\n        emit TransferSingle(operator, from, address(0), id, 1);\\n    }\\n\\n    /// @notice Burns `amount` tokens of type `id`.\\n    /// @param id token type which will be burnt.\\n    /// @param amount amount of token to burn.\\n    function burn(uint256 id, uint256 amount) external {\\n        _burn(msg.sender, id, amount);\\n    }\\n\\n    /// @notice Burns `amount` tokens of type `id` from `from`.\\n    /// @param from address whose token is to be burnt.\\n    /// @param id token type which will be burnt.\\n    /// @param amount amount of token to burn.\\n    function burnFrom(address from, uint256 id, uint256 amount) external {\\n        require(from != address(0), \\\"from is zero address\\\");\\n        require(\\n            msg.sender == from ||\\n                _metaTransactionContracts[msg.sender] ||\\n                _superOperators[msg.sender] ||\\n                _operatorsForAll[from][msg.sender],\\n            \\\"require meta approval\\\"\\n        );\\n        _burn(from, id, amount);\\n    }\\n\\n    function _burn(address from, uint256 id, uint256 amount) internal {\\n        if ((id & IS_NFT) > 0) {\\n            require(amount == 1, \\\"can only burn one NFT\\\");\\n            _burnERC721(\\n                _metaTransactionContracts[msg.sender] ? from : msg.sender,\\n                from,\\n                id\\n            );\\n        } else {\\n            require(amount > 0 && amount <= MAX_SUPPLY, \\\"invalid amount\\\");\\n            _burnERC1155(\\n                _metaTransactionContracts[msg.sender] ? from : msg.sender,\\n                from,\\n                id,\\n                uint32(amount)\\n            );\\n        }\\n    }\\n\\n    /// @notice Upgrades an NFT with new metadata and rarity.\\n    /// @param from address which own the NFT to be upgraded.\\n    /// @param id the NFT that will be burnt to be upgraded.\\n    /// @param packId unqiue packId for the token.\\n    /// @param hash hash of an IPFS cidv1 folder that contains the metadata of the new token type in the file 0.json.\\n    /// @param newRarity rarity power of the new NFT.\\n    /// @param to address which will receive the NFT.\\n    /// @param data bytes to be transmitted as part of the minted token.\\n    /// @return the id of the newly minted NFT.\\n    function updateERC721(\\n        address from,\\n        uint256 id,\\n        uint40 packId,\\n        bytes32 hash,\\n        uint8 newRarity,\\n        address to,\\n        bytes calldata data\\n    ) external returns(uint256) {\\n        require(hash != 0, \\\"hash is zero\\\");\\n        require(\\n            _bouncers[msg.sender],\\n            \\\"only bouncer allowed to mint via update\\\"\\n        );\\n        require(to != address(0), \\\"destination is zero address\\\");\\n        require(from != address(0), \\\"from is zero address\\\");\\n\\n        _burnERC721(msg.sender, from, id);\\n\\n        uint256 newId = generateTokenId(from, 1, packId, 0, 0);\\n        _mint(hash, 1, newRarity, msg.sender, to, newId, data, false);\\n        emit AssetUpdate(id, newId);\\n        return newId;\\n    }\\n\\n    /// @notice Extracts an EIP-721 NFT from an EIP-1155 token.\\n    /// @param id the token type to extract from.\\n    /// @param to address which will receive the token.\\n    /// @return the id of the newly minted NFT.\\n    function extractERC721(uint256 id, address to)\\n        external\\n        returns (uint256 newId)\\n    {\\n        return _extractERC721From(msg.sender, msg.sender, id, to);\\n    }\\n\\n    /// @notice Extracts an EIP-721 NFT from an EIP-1155 token.\\n    /// @param sender address which own the token to be extracted.\\n    /// @param id the token type to extract from.\\n    /// @param to address which will receive the token.\\n    /// @return the id of the newly minted NFT.\\n    function extractERC721From(address sender, uint256 id, address to)\\n        external\\n        returns (uint256 newId)\\n    {\\n        bool metaTx = _metaTransactionContracts[msg.sender];\\n        require(\\n            msg.sender == sender ||\\n                metaTx ||\\n                _superOperators[msg.sender] ||\\n                _operatorsForAll[sender][msg.sender],\\n            \\\"require meta approval\\\"\\n        );\\n        return _extractERC721From(metaTx ? sender : msg.sender, sender, id, to);\\n    }\\n\\n    function _extractERC721From(address operator, address sender, uint256 id, address to)\\n        internal\\n        returns (uint256 newId)\\n    {\\n        require(to != address(0), \\\"destination is zero address\\\");\\n        require(id & IS_NFT == 0, \\\"Not an ERC1155 Token\\\");\\n        uint32 tokenCollectionIndex = _nextCollectionIndex[id];\\n        newId = id +\\n            IS_NFT +\\n            (tokenCollectionIndex) *\\n            2**NFT_INDEX_OFFSET;\\n        _nextCollectionIndex[id] = tokenCollectionIndex + 1;\\n        _burnERC1155(operator, sender, id, 1);\\n        _mint(\\n            _metadataHash[id & URI_ID],\\n            1,\\n            0,\\n            operator,\\n            to,\\n            newId,\\n            \\\"\\\",\\n            true\\n        );\\n        emit Extraction(id, newId);\\n    }\\n}\\n\",\"keccak256\":\"0x0c18aca246e6061741c7df3ac6acbc34eab949a0eb4dcc3acf61846797f88083\"},\"src/BundleSandSale/BundleSandSale.sol\":{\"content\":\"pragma solidity 0.5.9;\\n\\nimport \\\"../../contracts_common/src/Libraries/SafeMathWithRequire.sol\\\";\\nimport \\\"../../contracts_common/src/Interfaces/ERC20.sol\\\";\\nimport \\\"../../contracts_common/src/Interfaces/Medianizer.sol\\\";\\nimport \\\"../../contracts_common/src/BaseWithStorage/Admin.sol\\\";\\nimport \\\"../Asset/ERC1155ERC721.sol\\\";\\n\\n\\ncontract BundleSandSale is Admin {\\n    bytes4 private constant ERC1155_RECEIVED = 0xf23a6e61;\\n    bytes4 private constant ERC1155_BATCH_RECEIVED = 0xbc197c81;\\n\\n    event BundleSale(\\n        uint256 indexed saleId,\\n        uint256[] ids,\\n        uint256[] amounts,\\n        uint256 sandAmount,\\n        uint256 priceUSD,\\n        uint256 numPacks\\n    );\\n\\n    event BundleSold(\\n        uint256 indexed saleId,\\n        address indexed buyer,\\n        uint256 numPacks,\\n        address token,\\n        uint256 tokenAmount\\n    );\\n\\n    using SafeMathWithRequire for uint256;\\n\\n    Medianizer private _medianizer;\\n    ERC20 private _dai;\\n    ERC20 private _sand;\\n    ERC1155ERC721 private _asset;\\n\\n    address payable private _receivingWallet;\\n\\n    struct Sale {\\n        uint256[] ids;\\n        uint256[] amounts;\\n        uint256 sandAmount;\\n        uint256 priceUSD;\\n        uint256 numPacksLeft;\\n    }\\n\\n    Sale[] private sales;\\n\\n    constructor(\\n        address sandTokenContractAddress,\\n        address assetTokenContractAddress,\\n        address medianizerContractAddress,\\n        address daiTokenContractAddress,\\n        address admin,\\n        address payable receivingWallet\\n    ) public {\\n        require(receivingWallet != address(0), \\\"need a wallet to receive funds\\\");\\n        _medianizer = Medianizer(medianizerContractAddress);\\n        _sand = ERC20(sandTokenContractAddress);\\n        _asset = ERC1155ERC721(assetTokenContractAddress);\\n        _dai = ERC20(daiTokenContractAddress);\\n        _admin = admin;\\n        _receivingWallet = receivingWallet;\\n    }\\n\\n    /// @notice set the wallet receiving the proceeds\\n    /// @param newWallet address of the new receiving wallet\\n    function setReceivingWallet(address payable newWallet) external {\\n        require(newWallet != address(0), \\\"receiving wallet cannot be zero address\\\");\\n        require(msg.sender == _admin, \\\"only admin can change the receiving wallet\\\");\\n        _receivingWallet = newWallet;\\n    }\\n\\n    function _transferPack(uint256 saleIndex, uint256 numPacks, address to) internal {\\n        uint256 sandAmountPerPack = sales[saleIndex].sandAmount;\\n        require(\\n            _sand.transferFrom(address(this), to, sandAmountPerPack.mul(numPacks)),\\n            \\\"Sand Transfer failed\\\"\\n        );\\n        uint256[] memory ids = sales[saleIndex].ids;\\n        uint256[] memory amounts = sales[saleIndex].amounts;\\n        uint256 numIds = ids.length;\\n        for (uint256 i = 0; i < numIds; i++) {\\n            amounts[i] = amounts[i].mul(numPacks);\\n        }\\n        _asset.safeBatchTransferFrom(address(this), to, ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Buys Sand Bundle with Ether\\n     * @param saleId id of the bundle\\n     * @param numPacks the amount of packs to buy\\n     * @param to The address that will receive the SAND\\n     */\\n    function buyBundleWithEther(uint256 saleId, uint256 numPacks, address to) external payable {\\n        require(saleId > 0, \\\"invalid saleId\\\");\\n        uint256 saleIndex = saleId - 1;\\n        uint256 numPacksLeft = sales[saleIndex].numPacksLeft;\\n        require(numPacksLeft >= numPacks, \\\"not enough packs on sale\\\");\\n        sales[saleIndex].numPacksLeft = numPacksLeft - numPacks;\\n\\n        uint256 USDRequired = numPacks.mul(sales[saleIndex].priceUSD);\\n        uint256 ETHRequired = getEtherAmountWithUSD(USDRequired);\\n        require(msg.value >= ETHRequired, \\\"not enough ether sent\\\");\\n        uint256 leftOver = msg.value - ETHRequired;\\n        if(leftOver > 0) {\\n            msg.sender.transfer(leftOver); // refund extra\\n        }\\n        address(_receivingWallet).transfer(ETHRequired);\\n        _transferPack(saleIndex, numPacks, to);\\n\\n        emit BundleSold(saleId, msg.sender, numPacks, address(0), ETHRequired);\\n    }\\n\\n    /**\\n     * @notice Buys Sand Bundle with DAI\\n     * @param saleId id of the bundle\\n     * @param numPacks the amount of packs to buy\\n     * @param to The address that will receive the SAND\\n     */\\n    function buyBundleWithDai(uint256 saleId, uint256 numPacks, address to) external {\\n        require(saleId > 0, \\\"invalid saleId\\\");\\n        uint256 saleIndex = saleId - 1;\\n        uint256 numPacksLeft = sales[saleIndex].numPacksLeft;\\n        require(numPacksLeft >= numPacks, \\\"not enough packs on sale\\\");\\n        sales[saleIndex].numPacksLeft = numPacksLeft - numPacks;\\n\\n        uint256 USDRequired = numPacks.mul(sales[saleIndex].priceUSD);\\n        require(_dai.transferFrom(msg.sender, _receivingWallet, USDRequired), \\\"failed to transfer dai\\\");\\n        _transferPack(saleIndex, numPacks, to);\\n\\n        emit BundleSold(saleId, msg.sender, numPacks, address(_dai), USDRequired);\\n    }\\n\\n    function getSaleInfo(uint256 saleId) external view returns(uint256 priceUSD, uint256 numPacksLeft) {\\n        require(saleId > 0, \\\"invalid saleId\\\");\\n        uint256 saleIndex = saleId - 1;\\n        priceUSD = sales[saleIndex].priceUSD;\\n        numPacksLeft = sales[saleIndex].numPacksLeft;\\n    }\\n\\n    function withdrawSale(uint256 saleId, address to) external onlyAdmin() {\\n        require(saleId > 0, \\\"invalid saleId\\\");\\n        uint256 saleIndex = saleId - 1;\\n        uint256 numPacksLeft = sales[saleIndex].numPacksLeft;\\n        sales[saleIndex].numPacksLeft = 0;\\n\\n        uint256[] memory ids = sales[saleIndex].ids;\\n        uint256[] memory amounts = sales[saleIndex].amounts;\\n        uint256 numIds = ids.length;\\n        for (uint256 i = 0; i < numIds; i++) {\\n            amounts[i] = amounts[i].mul(numPacksLeft);\\n        }\\n        require(_sand.transferFrom(address(this), to, numPacksLeft.mul(sales[saleIndex].sandAmount)), \\\"transfer fo Sand failed\\\");\\n        _asset.safeBatchTransferFrom(address(this), to, ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Returns the amount of ETH for a specific amount of USD\\n     * @param usdAmount An amount of USD\\n     * @return The amount of ETH\\n     */\\n    function getEtherAmountWithUSD(uint256 usdAmount) public view returns (uint256) {\\n        uint256 ethUsdPair = getEthUsdPair();\\n        return usdAmount.mul(1000000000000000000).div(ethUsdPair);\\n    }\\n\\n    /**\\n     * @notice Gets the ETHUSD pair from the Medianizer contract\\n     * @return The pair as an uint256\\n     */\\n    function getEthUsdPair() internal view returns (uint256) {\\n        bytes32 pair = _medianizer.read();\\n        return uint256(pair);\\n    }\\n\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4) {\\n        require(\\n            address(_asset) == msg.sender,\\n            \\\"only accept asset as sender\\\"\\n        );\\n        require(from == operator, \\\"only self executed transfer allowed\\\");\\n        require(value > 0, \\\"no Asset transfered\\\");\\n        require(data.length > 0, \\\"data need to contains the sale data\\\");\\n\\n        (\\n            uint256 numPacks,\\n            uint256 sandAmountPerPack,\\n            uint256 priceUSDPerPack\\n        ) = abi.decode(data, (uint256, uint256, uint256));\\n\\n        uint256 amount = value.div(numPacks);\\n        require(amount.mul(numPacks) == value, \\\"invalid amounts, not divisible by numPacks\\\");\\n        uint256[] memory amounts = new uint256[](1);\\n        amounts[0] = amount;\\n        uint256[] memory ids = new uint256[](1);\\n        ids[0] = id;\\n        _setupBundle(from, sandAmountPerPack, numPacks, ids, amounts, priceUSDPerPack);\\n        return ERC1155_RECEIVED;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4) {\\n        require(\\n            address(_asset) == msg.sender,\\n            \\\"only accept asset as sender\\\"\\n        );\\n        require(from == operator, \\\"only self executed transfer allowed\\\");\\n        require(ids.length > 0, \\\"need to contains Asset\\\");\\n        require(data.length > 0, \\\"data need to contains the sale data\\\");\\n\\n        (\\n            uint256 numPacks,\\n            uint256 sandAmountPerPack,\\n            uint256 priceUSDPerPack\\n        ) = abi.decode(data, (uint256, uint256, uint256));\\n\\n        uint256[] memory amounts = new uint256[](ids.length); // TODO\\n        for(uint256 i = 0; i < amounts.length; i ++) {\\n            require(values[i] > 0, \\\"asset transfer with zero values\\\");\\n            uint256 amount = values[i].div(numPacks);\\n            require(amount.mul(numPacks) == values[i], \\\"invalid amounts, not divisible by numPacks\\\");\\n            amounts[i] = amount;\\n        }\\n\\n        _setupBundle(from, sandAmountPerPack, numPacks, ids, amounts, priceUSDPerPack);\\n        return ERC1155_BATCH_RECEIVED;\\n    }\\n\\n    function _setupBundle(\\n        address from,\\n        uint256 sandAmountPerPack,\\n        uint256 numPacks,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        uint256 priceUSDPerPack\\n    ) internal {\\n        require(_sand.transferFrom(from, address(this), sandAmountPerPack.mul(numPacks)), \\\"failed to transfer Sand\\\");\\n        uint256 saleId = sales.push(Sale({\\n            ids: ids,\\n            amounts : amounts,\\n            sandAmount: sandAmountPerPack,\\n            priceUSD: priceUSDPerPack,\\n            numPacksLeft: numPacks\\n        }));\\n        emit BundleSale(saleId, ids, amounts, sandAmountPerPack, priceUSDPerPack, numPacks);\\n    }\\n}\\n\",\"keccak256\":\"0x76992b477dea7cb9b8ce4ecd3705e00089166e18e2d4d451703dd8e3d2b30c82\"}},\"version\":1}",
    "userdoc": {
      "methods": {
        "buyBundleWithDai(uint256,uint256,address)": {
          "notice": "Buys Sand Bundle with DAI"
        },
        "buyBundleWithEther(uint256,uint256,address)": {
          "notice": "Buys Sand Bundle with Ether"
        },
        "changeAdmin(address)": {
          "notice": "change the administrator to be `newAdmin`."
        },
        "getAdmin()": {
          "notice": "gives the current administrator of this contract."
        },
        "getEtherAmountWithUSD(uint256)": {
          "notice": "Returns the amount of ETH for a specific amount of USD"
        },
        "setReceivingWallet(address)": {
          "notice": "set the wallet receiving the proceeds"
        }
      }
    }
  },
  "args": [
    "0xc1a1B88885A2851bad5B5CC4B74F28e7E8E4050c",
    "0x9cDad1D33C44fA3Ef2dF2D4D966dB2eedc8AB748",
    "0x6EFB746AE3f979573C0a93CCd82A391861a1b4B6",
    "0x89A715dBDAf71fe9B62321730BEF137f3b1452Ad",
    "0x9a3b0D0B08fb71F1a5E0F248Ad3a42C341f7837c",
    "0x52a0eE7D5374145A3fcb7D8b61324876d89ba91b"
  ],
  "address": "0x5DDB7d185F88818F2661Fc0976E9D675040EF091",
  "transactionHash": "0xf6479fe1cd70f542a515bac9188c6a9af9223b8aa90d637ccab9c5a70b7d40d7"
}